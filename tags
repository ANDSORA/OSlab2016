!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASM	game.S	/^#define ASM 1$/;"	d
ASM	kernel.S	/^#define ASM 1$/;"	d
ASM	lib/string.c	9;"	d	file:
Assert	kernel/inc/assert.h	18;"	d
BOOT	Makefile	/^BOOT    := boot.bin$/;"	m
BOOT_C	Makefile	/^BOOT_C := $(wildcard $(BOOT_DIR)\/*.c)$/;"	m
BOOT_DIR	Makefile	/^BOOT_DIR       := boot$/;"	m
BOOT_O	Makefile	/^BOOT_O := $(BOOT_S:%.S=$(OBJ_DIR)\/%.o)$/;"	m
BOOT_S	Makefile	/^BOOT_S := $(wildcard $(BOOT_DIR)\/*.S)$/;"	m
BT_HEIGHT	game/inc/video.h	19;"	d
BT_HEIGHT	kernel/inc/device/video.h	21;"	d
BT_WIDTH	game/inc/video.h	18;"	d
BT_WIDTH	kernel/inc/device/video.h	20;"	d
BT_WIDTH_SIZE	game/inc/video.h	20;"	d
BT_WIDTH_SIZE	kernel/inc/device/video.h	22;"	d
Bullet	game/src/effect.c	/^struct Bullet {$/;"	s	file:
Bullet::h	game/src/effect.c	/^	int w,h;$/;"	m	struct:Bullet	file:	access:public
Bullet::next	game/src/effect.c	/^	struct Bullet *next;$/;"	m	struct:Bullet	typeref:struct:Bullet::Bullet	file:	access:public
Bullet::w	game/src/effect.c	/^	int w,h;$/;"	m	struct:Bullet	file:	access:public
Bullet::x	game/src/effect.c	/^	int x,y;$/;"	m	struct:Bullet	file:	access:public
Bullet::y	game/src/effect.c	/^	int x,y;$/;"	m	struct:Bullet	file:	access:public
CC	Makefile	/^CC      := gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS := -Wall -Werror -Wfatal-errors #开启所有警告, 视警告为错误, 第一个错误结束编译$/;"	m
CR0	kernel/inc/memory.h	/^typedef union CR0 {$/;"	u
CR0	kernel/inc/memory.h	/^} CR0;$/;"	t	typeref:union:CR0
CR0::__anon7::alignment_mask	kernel/inc/memory.h	/^		uint32_t alignment_mask      : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::cache_disable	kernel/inc/memory.h	/^		uint32_t cache_disable       : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::emulation	kernel/inc/memory.h	/^		uint32_t emulation           : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::extension_type	kernel/inc/memory.h	/^		uint32_t extension_type      : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::monitor_coprocessor	kernel/inc/memory.h	/^		uint32_t monitor_coprocessor : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::no_write_through	kernel/inc/memory.h	/^		uint32_t no_write_through    : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::numeric_error	kernel/inc/memory.h	/^		uint32_t numeric_error       : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::pad0	kernel/inc/memory.h	/^		uint32_t pad0                : 10;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::pad1	kernel/inc/memory.h	/^		uint32_t pad1                : 1; $/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::pad2	kernel/inc/memory.h	/^		uint32_t pad2                : 10;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::paging	kernel/inc/memory.h	/^		uint32_t paging              : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::protect_enable	kernel/inc/memory.h	/^		uint32_t protect_enable      : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::task_switched	kernel/inc/memory.h	/^		uint32_t task_switched       : 1;$/;"	m	struct:CR0::__anon7	access:public
CR0::__anon7::write_protect	kernel/inc/memory.h	/^		uint32_t write_protect       : 1; $/;"	m	struct:CR0::__anon7	access:public
CR0::val	kernel/inc/memory.h	/^	uint32_t val;$/;"	m	union:CR0	access:public
CR0_AM	boot/inc/mmu.h	86;"	d
CR0_AM	kernel/inc/mmu.h	87;"	d
CR0_AM	tools/hh/mmu.h	28;"	d
CR0_CD	boot/inc/mmu.h	88;"	d
CR0_CD	kernel/inc/mmu.h	89;"	d
CR0_CD	tools/hh/mmu.h	30;"	d
CR0_EM	boot/inc/mmu.h	81;"	d
CR0_EM	kernel/inc/mmu.h	82;"	d
CR0_EM	tools/hh/mmu.h	23;"	d
CR0_ET	boot/inc/mmu.h	83;"	d
CR0_ET	kernel/inc/mmu.h	84;"	d
CR0_ET	tools/hh/mmu.h	25;"	d
CR0_MP	boot/inc/mmu.h	80;"	d
CR0_MP	kernel/inc/mmu.h	81;"	d
CR0_MP	tools/hh/mmu.h	22;"	d
CR0_NE	boot/inc/mmu.h	84;"	d
CR0_NE	kernel/inc/mmu.h	85;"	d
CR0_NE	tools/hh/mmu.h	26;"	d
CR0_NW	boot/inc/mmu.h	87;"	d
CR0_NW	kernel/inc/mmu.h	88;"	d
CR0_NW	tools/hh/mmu.h	29;"	d
CR0_PE	boot/inc/mmu.h	79;"	d
CR0_PE	kernel/inc/mmu.h	80;"	d
CR0_PE	tools/hh/mmu.h	21;"	d
CR0_PG	boot/inc/mmu.h	89;"	d
CR0_PG	kernel/inc/mmu.h	90;"	d
CR0_PG	tools/hh/mmu.h	31;"	d
CR0_TS	boot/inc/mmu.h	82;"	d
CR0_TS	kernel/inc/mmu.h	83;"	d
CR0_TS	tools/hh/mmu.h	24;"	d
CR0_WP	boot/inc/mmu.h	85;"	d
CR0_WP	kernel/inc/mmu.h	86;"	d
CR0_WP	tools/hh/mmu.h	27;"	d
CR3	kernel/inc/memory.h	/^typedef union CR3 {$/;"	u
CR3	kernel/inc/memory.h	/^} CR3;$/;"	t	typeref:union:CR3
CR3::__anon8::pad0	kernel/inc/memory.h	/^		uint32_t pad0                : 3;$/;"	m	struct:CR3::__anon8	access:public
CR3::__anon8::pad1	kernel/inc/memory.h	/^		uint32_t pad1                : 7;$/;"	m	struct:CR3::__anon8	access:public
CR3::__anon8::page_cache_disable	kernel/inc/memory.h	/^		uint32_t page_cache_disable  : 1;$/;"	m	struct:CR3::__anon8	access:public
CR3::__anon8::page_directory_base	kernel/inc/memory.h	/^		uint32_t page_directory_base : 20;$/;"	m	struct:CR3::__anon8	access:public
CR3::__anon8::page_write_through	kernel/inc/memory.h	/^		uint32_t page_write_through  : 1;$/;"	m	struct:CR3::__anon8	access:public
CR3::val	kernel/inc/memory.h	/^	uint32_t val;$/;"	m	union:CR3	access:public
CR4_DE	boot/inc/mmu.h	94;"	d
CR4_DE	kernel/inc/mmu.h	95;"	d
CR4_DE	tools/hh/mmu.h	36;"	d
CR4_MCE	boot/inc/mmu.h	92;"	d
CR4_MCE	kernel/inc/mmu.h	93;"	d
CR4_MCE	tools/hh/mmu.h	34;"	d
CR4_PCE	boot/inc/mmu.h	91;"	d
CR4_PCE	kernel/inc/mmu.h	92;"	d
CR4_PCE	tools/hh/mmu.h	33;"	d
CR4_PSE	boot/inc/mmu.h	93;"	d
CR4_PSE	kernel/inc/mmu.h	94;"	d
CR4_PSE	tools/hh/mmu.h	35;"	d
CR4_PVI	boot/inc/mmu.h	96;"	d
CR4_PVI	kernel/inc/mmu.h	97;"	d
CR4_PVI	tools/hh/mmu.h	38;"	d
CR4_TSD	boot/inc/mmu.h	95;"	d
CR4_TSD	kernel/inc/mmu.h	96;"	d
CR4_TSD	tools/hh/mmu.h	37;"	d
CR4_VME	boot/inc/mmu.h	97;"	d
CR4_VME	kernel/inc/mmu.h	98;"	d
CR4_VME	tools/hh/mmu.h	39;"	d
Capabilities	kernel/inc/device/video_mode.h	/^	uint8_t Capabilities[4];$/;"	m	struct:VbeInfoBlock	access:public
CmdByte	kernel/device/timer.c	/^union CmdByte {$/;"	u	file:
CmdByte::__anon11::access_mode	kernel/device/timer.c	/^		uint8_t access_mode  : 2;$/;"	m	struct:CmdByte::__anon11	file:	access:public
CmdByte::__anon11::channel	kernel/device/timer.c	/^		uint8_t channel      : 2;$/;"	m	struct:CmdByte::__anon11	file:	access:public
CmdByte::__anon11::operate_mode	kernel/device/timer.c	/^		uint8_t operate_mode : 3;$/;"	m	struct:CmdByte::__anon11	file:	access:public
CmdByte::__anon11::present_mode	kernel/device/timer.c	/^		uint8_t present_mode : 1;$/;"	m	struct:CmdByte::__anon11	file:	access:public
CmdByte::val	kernel/device/timer.c	/^	uint8_t val;$/;"	m	union:CmdByte	file:	access:public
DD	Makefile	/^DD      := dd$/;"	m
DEPS	Makefile	/^DEPS := $(shell find -name "*.d")$/;"	m
DPL_KERNEL	boot/inc/mmu.h	133;"	d
DPL_KERNEL	kernel/inc/mmu.h	209;"	d
DPL_KERNEL	tools/hh/mmu.h	72;"	d
DPL_USER	boot/inc/mmu.h	134;"	d
DPL_USER	kernel/inc/mmu.h	210;"	d
DPL_USER	tools/hh/mmu.h	73;"	d
Disassembly	game.S	/^Disassembly of section .text:$/;"	l
Disassembly	kernel.S	/^Disassembly of section .text:$/;"	l
ELF_MAGIC	boot/inc/elf.h	4;"	d
ELF_MAGIC	kernel/inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	boot/inc/elf.h	52;"	d
ELF_PROG_FLAG_EXEC	kernel/inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	boot/inc/elf.h	54;"	d
ELF_PROG_FLAG_READ	kernel/inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	boot/inc/elf.h	53;"	d
ELF_PROG_FLAG_WRITE	kernel/inc/elf.h	53;"	d
ELF_PROG_LOAD	boot/inc/elf.h	49;"	d
ELF_PROG_LOAD	kernel/inc/elf.h	49;"	d
ELF_SHN_UNDEF	boot/inc/elf.h	63;"	d
ELF_SHN_UNDEF	kernel/inc/elf.h	63;"	d
ELF_SHT_NULL	boot/inc/elf.h	57;"	d
ELF_SHT_NULL	kernel/inc/elf.h	57;"	d
ELF_SHT_PROGBITS	boot/inc/elf.h	58;"	d
ELF_SHT_PROGBITS	kernel/inc/elf.h	58;"	d
ELF_SHT_STRTAB	boot/inc/elf.h	60;"	d
ELF_SHT_STRTAB	kernel/inc/elf.h	60;"	d
ELF_SHT_SYMTAB	boot/inc/elf.h	59;"	d
ELF_SHT_SYMTAB	kernel/inc/elf.h	59;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_NO_SYS	inc/error.h	/^	E_NO_SYS	= 7,	\/\/ Unimplemented system call$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Elf	boot/inc/elf.h	/^struct Elf {$/;"	s
Elf	kernel/inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	boot/inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_ehsize	kernel/inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	boot/inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_elf	kernel/inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	boot/inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_entry	kernel/inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	boot/inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_flags	kernel/inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	boot/inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_machine	kernel/inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	boot/inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_magic	kernel/inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	boot/inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phentsize	kernel/inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	boot/inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phnum	kernel/inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	boot/inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_phoff	kernel/inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	boot/inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	kernel/inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	boot/inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shnum	kernel/inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	boot/inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shoff	kernel/inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	boot/inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	kernel/inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	boot/inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_type	kernel/inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	boot/inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Elf::e_version	kernel/inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Enemy	game/src/effect.c	/^struct Enemy {$/;"	s	file:
Enemy::h	game/src/effect.c	/^	int w, h;$/;"	m	struct:Enemy	file:	access:public
Enemy::next	game/src/effect.c	/^	struct Enemy *next;$/;"	m	struct:Enemy	typeref:struct:Enemy::Enemy	file:	access:public
Enemy::w	game/src/effect.c	/^	int w, h;$/;"	m	struct:Enemy	file:	access:public
Enemy::x	game/src/effect.c	/^	int x, y;$/;"	m	struct:Enemy	file:	access:public
Enemy::y	game/src/effect.c	/^	int x, y;$/;"	m	struct:Enemy	file:	access:public
FEC_PR	boot/inc/mmu.h	123;"	d
FEC_PR	kernel/inc/mmu.h	124;"	d
FEC_U	boot/inc/mmu.h	125;"	d
FEC_U	kernel/inc/mmu.h	126;"	d
FEC_WR	boot/inc/mmu.h	124;"	d
FEC_WR	kernel/inc/mmu.h	125;"	d
FF_HEIGHT	game/inc/video.h	16;"	d
FF_HEIGHT	kernel/inc/device/video.h	18;"	d
FF_WIDTH	game/inc/video.h	15;"	d
FF_WIDTH	kernel/inc/device/video.h	17;"	d
FF_WIDTH_SIZE	game/inc/video.h	17;"	d
FF_WIDTH_SIZE	kernel/inc/device/video.h	19;"	d
FL_AC	boot/inc/mmu.h	117;"	d
FL_AC	kernel/inc/mmu.h	118;"	d
FL_AC	tools/hh/mmu.h	59;"	d
FL_AF	boot/inc/mmu.h	102;"	d
FL_AF	kernel/inc/mmu.h	103;"	d
FL_AF	tools/hh/mmu.h	44;"	d
FL_CF	boot/inc/mmu.h	100;"	d
FL_CF	kernel/inc/mmu.h	101;"	d
FL_CF	tools/hh/mmu.h	42;"	d
FL_DF	boot/inc/mmu.h	107;"	d
FL_DF	kernel/inc/mmu.h	108;"	d
FL_DF	tools/hh/mmu.h	49;"	d
FL_ID	boot/inc/mmu.h	120;"	d
FL_ID	kernel/inc/mmu.h	121;"	d
FL_ID	tools/hh/mmu.h	62;"	d
FL_IF	boot/inc/mmu.h	106;"	d
FL_IF	kernel/inc/mmu.h	107;"	d
FL_IF	tools/hh/mmu.h	48;"	d
FL_IOPL_0	boot/inc/mmu.h	110;"	d
FL_IOPL_0	kernel/inc/mmu.h	111;"	d
FL_IOPL_0	tools/hh/mmu.h	52;"	d
FL_IOPL_1	boot/inc/mmu.h	111;"	d
FL_IOPL_1	kernel/inc/mmu.h	112;"	d
FL_IOPL_1	tools/hh/mmu.h	53;"	d
FL_IOPL_2	boot/inc/mmu.h	112;"	d
FL_IOPL_2	kernel/inc/mmu.h	113;"	d
FL_IOPL_2	tools/hh/mmu.h	54;"	d
FL_IOPL_3	boot/inc/mmu.h	113;"	d
FL_IOPL_3	kernel/inc/mmu.h	114;"	d
FL_IOPL_3	tools/hh/mmu.h	55;"	d
FL_IOPL_MASK	boot/inc/mmu.h	109;"	d
FL_IOPL_MASK	kernel/inc/mmu.h	110;"	d
FL_IOPL_MASK	tools/hh/mmu.h	51;"	d
FL_NT	boot/inc/mmu.h	114;"	d
FL_NT	kernel/inc/mmu.h	115;"	d
FL_NT	tools/hh/mmu.h	56;"	d
FL_OF	boot/inc/mmu.h	108;"	d
FL_OF	kernel/inc/mmu.h	109;"	d
FL_OF	tools/hh/mmu.h	50;"	d
FL_PF	boot/inc/mmu.h	101;"	d
FL_PF	kernel/inc/mmu.h	102;"	d
FL_PF	tools/hh/mmu.h	43;"	d
FL_RF	boot/inc/mmu.h	115;"	d
FL_RF	kernel/inc/mmu.h	116;"	d
FL_RF	tools/hh/mmu.h	57;"	d
FL_SF	boot/inc/mmu.h	104;"	d
FL_SF	kernel/inc/mmu.h	105;"	d
FL_SF	tools/hh/mmu.h	46;"	d
FL_TF	boot/inc/mmu.h	105;"	d
FL_TF	kernel/inc/mmu.h	106;"	d
FL_TF	tools/hh/mmu.h	47;"	d
FL_VIF	boot/inc/mmu.h	118;"	d
FL_VIF	kernel/inc/mmu.h	119;"	d
FL_VIF	tools/hh/mmu.h	60;"	d
FL_VIP	boot/inc/mmu.h	119;"	d
FL_VIP	kernel/inc/mmu.h	120;"	d
FL_VIP	tools/hh/mmu.h	61;"	d
FL_VM	boot/inc/mmu.h	116;"	d
FL_VM	kernel/inc/mmu.h	117;"	d
FL_VM	tools/hh/mmu.h	58;"	d
FL_ZF	boot/inc/mmu.h	103;"	d
FL_ZF	kernel/inc/mmu.h	104;"	d
FL_ZF	tools/hh/mmu.h	45;"	d
GAME	Makefile	/^GAME    := game.bin$/;"	m
GAME_C	Makefile	/^GAME_C := $(shell find $(GAME_DIR) -name "*.c")$/;"	m
GAME_DIR	Makefile	/^GAME_DIR	   := game$/;"	m
GAME_LD_SCRIPT	Makefile	/^GAME_LD_SCRIPT	 := $(shell find $(GAME_DIR) -name "*.ld")$/;"	m
GAME_O	Makefile	/^GAME_O := $(GAME_C:%.c=$(OBJ_DIR)\/%.o)$/;"	m
GAME_OFFSET_IN_DISK	kernel/main.c	10;"	d	file:
GAME_OFFSET_IN_DISK	kernel/memory/pm.c	12;"	d	file:
GDB	Makefile	/^GDB     := gdb$/;"	m
GDB_OPTIONS	Makefile	/^GDB_OPTIONS := -ex "target remote 127.0.0.1:1234"$/;"	m
GDT_ENTRY	boot/start.S	/^#define GDT_ENTRY(n)	\\$/;"	d
GateDescriptor	boot/inc/mmu.h	/^typedef struct GateDescriptor {$/;"	s
GateDescriptor	kernel/inc/mmu.h	/^typedef struct GateDescriptor {$/;"	s
GateDescriptor	tools/hh/mmu.h	/^struct GateDescriptor {$/;"	s
GateDescriptor::gd_args	boot/inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_args	kernel/inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_dpl	boot/inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_dpl	kernel/inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_off_15_0	boot/inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_off_15_0	kernel/inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_off_31_16	boot/inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_off_31_16	kernel/inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_p	boot/inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_p	kernel/inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_rsv1	boot/inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_rsv1	kernel/inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_s	boot/inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_s	kernel/inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_sel	boot/inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_sel	kernel/inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_type	boot/inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::gd_type	kernel/inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::offset_15_0	tools/hh/mmu.h	/^	uint32_t offset_15_0      : 16;\/\/low 16bit of offset in segment$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::offset_31_16	tools/hh/mmu.h	/^	uint32_t offset_31_16     : 16;\/\/high bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::pad0	tools/hh/mmu.h	/^	uint32_t pad0             : 8;\/\/low 5#args, 0 for interrupt\/trap gates high 3bit:reserved(should be 0 I guess)$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::present	tools/hh/mmu.h	/^	uint32_t present          : 1;\/\/Present$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::privilege_level	tools/hh/mmu.h	/^	uint32_t privilege_level  : 2;\/\/descriptor(meaning new)privilege$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::segment	tools/hh/mmu.h	/^	uint32_t segment          : 16;\/\/segment selector$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::system	tools/hh/mmu.h	/^	uint32_t system           : 1;\/\/must be 0(system)$/;"	m	struct:GateDescriptor	access:public
GateDescriptor::type	tools/hh/mmu.h	/^	uint32_t type             : 4;\/\/type(STS_{TG,IG32,TG32})$/;"	m	struct:GateDescriptor	access:public
Gatedesc	boot/inc/mmu.h	/^} Gatedesc;$/;"	t	typeref:struct:GateDescriptor
Gatedesc	kernel.S	/^Gatedesc idt[NR_IRQ];$/;"	l
Gatedesc	kernel/inc/mmu.h	/^} Gatedesc;$/;"	t	typeref:struct:GateDescriptor
HZ	kernel/device/timer.c	7;"	d	file:
IMAGE	Makefile	/^IMAGE   := disk.bin$/;"	m
INIT_WORK	kernel/main.c	/^void INIT_WORK(){$/;"	f
INTERRUPT_GATE_32	kernel/irq/idt.c	6;"	d	file:
IRQ_OFFSET	kernel.S	/^#define IRQ_OFFSET		0x20$/;"	d
IRQ_OFFSET	kernel/irq/i8259.c	5;"	d	file:
IRQ_SLAVE	kernel.S	/^#define IRQ_SLAVE       2$/;"	d
IRQ_SLAVE	kernel/irq/i8259.c	6;"	d	file:
IRQ_t	kernel/irq/irq_handle.c	/^struct IRQ_t {$/;"	s	file:
IRQ_t::next	kernel/irq/irq_handle.c	/^	struct IRQ_t *next;$/;"	m	struct:IRQ_t	typeref:struct:IRQ_t::IRQ_t	file:	access:public
IRQ_t::routine	kernel/irq/irq_handle.c	/^	void (*routine)(void);$/;"	m	struct:IRQ_t	file:	access:public
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_MMU_H	tools/hh/mmu.h	2;"	d
KERNEL	Makefile	/^KERNEL  := kernel.bin$/;"	m
KERNEL_C	Makefile	/^KERNEL_C := $(shell find $(KERNEL_DIR) -name "*.c")$/;"	m
KERNEL_DIR	Makefile	/^KERNEL_DIR     := kernel$/;"	m
KERNEL_LD_SCRIPT	Makefile	/^KERNEL_LD_SCRIPT := $(shell find $(KERNEL_DIR) -name "*.ld")$/;"	m
KERNEL_O	Makefile	/^KERNEL_O := $(KERNEL_C:%.c=$(OBJ_DIR)\/%.o)$/;"	m
KERNEL_OFFSET_IN_DISK	boot/boot.c	6;"	d	file:
KERNEL_S	Makefile	/^KERNEL_S := $(shell find $(KERNEL_DIR) -name "*.S")$/;"	m
KERNEL_SIZE	kernel/inc/memory.h	11;"	d
KERNEL_SIZE	tools/hh/mmu.h	11;"	d
KEY_STATE_EMPTY	game/lib/keyboard.c	/^enum {KEY_STATE_EMPTY, KEY_STATE_WAIT_RELEASE, KEY_STATE_RELEASE, KEY_STATE_PRESS};$/;"	e	enum:__anon14	file:
KEY_STATE_EMPTY	kernel/device/keyboard.c	/^enum {KEY_STATE_EMPTY, KEY_STATE_WAIT_RELEASE, KEY_STATE_RELEASE, KEY_STATE_PRESS};$/;"	e	enum:__anon10	file:
KEY_STATE_PRESS	game/lib/keyboard.c	/^enum {KEY_STATE_EMPTY, KEY_STATE_WAIT_RELEASE, KEY_STATE_RELEASE, KEY_STATE_PRESS};$/;"	e	enum:__anon14	file:
KEY_STATE_PRESS	kernel/device/keyboard.c	/^enum {KEY_STATE_EMPTY, KEY_STATE_WAIT_RELEASE, KEY_STATE_RELEASE, KEY_STATE_PRESS};$/;"	e	enum:__anon10	file:
KEY_STATE_RELEASE	game/lib/keyboard.c	/^enum {KEY_STATE_EMPTY, KEY_STATE_WAIT_RELEASE, KEY_STATE_RELEASE, KEY_STATE_PRESS};$/;"	e	enum:__anon14	file:
KEY_STATE_RELEASE	kernel/device/keyboard.c	/^enum {KEY_STATE_EMPTY, KEY_STATE_WAIT_RELEASE, KEY_STATE_RELEASE, KEY_STATE_PRESS};$/;"	e	enum:__anon10	file:
KEY_STATE_WAIT_RELEASE	game/lib/keyboard.c	/^enum {KEY_STATE_EMPTY, KEY_STATE_WAIT_RELEASE, KEY_STATE_RELEASE, KEY_STATE_PRESS};$/;"	e	enum:__anon14	file:
KEY_STATE_WAIT_RELEASE	kernel/device/keyboard.c	/^enum {KEY_STATE_EMPTY, KEY_STATE_WAIT_RELEASE, KEY_STATE_RELEASE, KEY_STATE_PRESS};$/;"	e	enum:__anon10	file:
KOFFSET	kernel/entry.S	/^#define KOFFSET	0xC0000000$/;"	d
KOFFSET	kernel/inc/memory.h	9;"	d
K_A	game/inc/scan_code.h	32;"	d
K_A	kernel/inc/device/scan_code.h	32;"	d
K_B	game/inc/scan_code.h	52;"	d
K_B	kernel/inc/device/scan_code.h	52;"	d
K_BACKSLASH	game/inc/scan_code.h	46;"	d
K_BACKSLASH	kernel/inc/device/scan_code.h	46;"	d
K_BACKSPACE	game/inc/scan_code.h	15;"	d
K_BACKSPACE	kernel/inc/device/scan_code.h	15;"	d
K_C	game/inc/scan_code.h	49;"	d
K_C	kernel/inc/device/scan_code.h	49;"	d
K_CAPS	game/inc/scan_code.h	62;"	d
K_CAPS	kernel/inc/device/scan_code.h	62;"	d
K_COMMA	game/inc/scan_code.h	55;"	d
K_COMMA	kernel/inc/device/scan_code.h	55;"	d
K_D	game/inc/scan_code.h	35;"	d
K_D	kernel/inc/device/scan_code.h	35;"	d
K_DOT	game/inc/scan_code.h	56;"	d
K_DOT	kernel/inc/device/scan_code.h	56;"	d
K_DOWN	game/inc/scan_code.h	86;"	d
K_DOWN	kernel/inc/device/scan_code.h	86;"	d
K_E	game/inc/scan_code.h	20;"	d
K_E	kernel/inc/device/scan_code.h	20;"	d
K_ENTER	game/inc/scan_code.h	30;"	d
K_ENTER	kernel/inc/device/scan_code.h	30;"	d
K_ERROR	game/inc/scan_code.h	1;"	d
K_ERROR	kernel/inc/device/scan_code.h	1;"	d
K_ESC	game/inc/scan_code.h	2;"	d
K_ESC	kernel/inc/device/scan_code.h	2;"	d
K_F	game/inc/scan_code.h	36;"	d
K_F	kernel/inc/device/scan_code.h	36;"	d
K_F1	game/inc/scan_code.h	63;"	d
K_F1	kernel/inc/device/scan_code.h	63;"	d
K_F10	game/inc/scan_code.h	73;"	d
K_F10	kernel/inc/device/scan_code.h	73;"	d
K_F2	game/inc/scan_code.h	64;"	d
K_F2	kernel/inc/device/scan_code.h	64;"	d
K_F3	game/inc/scan_code.h	65;"	d
K_F3	kernel/inc/device/scan_code.h	65;"	d
K_F4	game/inc/scan_code.h	66;"	d
K_F4	kernel/inc/device/scan_code.h	66;"	d
K_F5	game/inc/scan_code.h	67;"	d
K_F5	kernel/inc/device/scan_code.h	67;"	d
K_F6	game/inc/scan_code.h	69;"	d
K_F6	kernel/inc/device/scan_code.h	69;"	d
K_F7	game/inc/scan_code.h	70;"	d
K_F7	kernel/inc/device/scan_code.h	70;"	d
K_F8	game/inc/scan_code.h	71;"	d
K_F8	kernel/inc/device/scan_code.h	71;"	d
K_F9	game/inc/scan_code.h	72;"	d
K_F9	kernel/inc/device/scan_code.h	72;"	d
K_G	game/inc/scan_code.h	37;"	d
K_G	kernel/inc/device/scan_code.h	37;"	d
K_H	game/inc/scan_code.h	38;"	d
K_H	kernel/inc/device/scan_code.h	38;"	d
K_I	game/inc/scan_code.h	25;"	d
K_I	kernel/inc/device/scan_code.h	25;"	d
K_J	game/inc/scan_code.h	39;"	d
K_J	kernel/inc/device/scan_code.h	39;"	d
K_K	game/inc/scan_code.h	40;"	d
K_K	kernel/inc/device/scan_code.h	40;"	d
K_L	game/inc/scan_code.h	41;"	d
K_L	kernel/inc/device/scan_code.h	41;"	d
K_LEFT	game/inc/scan_code.h	80;"	d
K_LEFT	kernel/inc/device/scan_code.h	80;"	d
K_L_ALT	game/inc/scan_code.h	60;"	d
K_L_ALT	kernel/inc/device/scan_code.h	60;"	d
K_L_BRACKET	game/inc/scan_code.h	28;"	d
K_L_BRACKET	kernel/inc/device/scan_code.h	28;"	d
K_L_CTRL	game/inc/scan_code.h	31;"	d
K_L_CTRL	kernel/inc/device/scan_code.h	31;"	d
K_L_SHIFT	game/inc/scan_code.h	45;"	d
K_L_SHIFT	kernel/inc/device/scan_code.h	45;"	d
K_M	game/inc/scan_code.h	54;"	d
K_M	kernel/inc/device/scan_code.h	54;"	d
K_N	game/inc/scan_code.h	53;"	d
K_N	kernel/inc/device/scan_code.h	53;"	d
K_NUMLOCK	game/inc/scan_code.h	74;"	d
K_NUMLOCK	kernel/inc/device/scan_code.h	74;"	d
K_O	game/inc/scan_code.h	26;"	d
K_O	kernel/inc/device/scan_code.h	26;"	d
K_P	game/inc/scan_code.h	27;"	d
K_P	kernel/inc/device/scan_code.h	27;"	d
K_PAGEDOWN	game/inc/scan_code.h	87;"	d
K_PAGEDOWN	kernel/inc/device/scan_code.h	87;"	d
K_PAGEUP	game/inc/scan_code.h	78;"	d
K_PAGEUP	kernel/inc/device/scan_code.h	78;"	d
K_Q	game/inc/scan_code.h	18;"	d
K_Q	kernel/inc/device/scan_code.h	18;"	d
K_QUOTE	game/inc/scan_code.h	43;"	d
K_QUOTE	kernel/inc/device/scan_code.h	43;"	d
K_R	game/inc/scan_code.h	21;"	d
K_R	kernel/inc/device/scan_code.h	21;"	d
K_RIGHT	game/inc/scan_code.h	82;"	d
K_RIGHT	kernel/inc/device/scan_code.h	82;"	d
K_R_0	game/inc/scan_code.h	88;"	d
K_R_0	kernel/inc/device/scan_code.h	88;"	d
K_R_1	game/inc/scan_code.h	84;"	d
K_R_1	kernel/inc/device/scan_code.h	84;"	d
K_R_5	game/inc/scan_code.h	81;"	d
K_R_5	kernel/inc/device/scan_code.h	81;"	d
K_R_7	game/inc/scan_code.h	76;"	d
K_R_7	kernel/inc/device/scan_code.h	76;"	d
K_R_ALT	game/inc/scan_code.h	90;"	d
K_R_ALT	kernel/inc/device/scan_code.h	90;"	d
K_R_BRACKET	game/inc/scan_code.h	29;"	d
K_R_BRACKET	kernel/inc/device/scan_code.h	29;"	d
K_R_DOT	game/inc/scan_code.h	89;"	d
K_R_DOT	kernel/inc/device/scan_code.h	89;"	d
K_R_MINUS	game/inc/scan_code.h	79;"	d
K_R_MINUS	kernel/inc/device/scan_code.h	79;"	d
K_R_PLUS	game/inc/scan_code.h	83;"	d
K_R_PLUS	kernel/inc/device/scan_code.h	83;"	d
K_R_SHIFT	game/inc/scan_code.h	58;"	d
K_R_SHIFT	kernel/inc/device/scan_code.h	58;"	d
K_R_STAR	game/inc/scan_code.h	59;"	d
K_R_STAR	kernel/inc/device/scan_code.h	59;"	d
K_S	game/inc/scan_code.h	33;"	d
K_S	kernel/inc/device/scan_code.h	33;"	d
K_SCROLL	game/inc/scan_code.h	75;"	d
K_SCROLL	kernel/inc/device/scan_code.h	75;"	d
K_SEMICOLON	game/inc/scan_code.h	42;"	d
K_SEMICOLON	kernel/inc/device/scan_code.h	42;"	d
K_SLASH	game/inc/scan_code.h	57;"	d
K_SLASH	kernel/inc/device/scan_code.h	57;"	d
K_SPACE	game/inc/scan_code.h	61;"	d
K_SPACE	kernel/inc/device/scan_code.h	61;"	d
K_T	game/inc/scan_code.h	22;"	d
K_T	kernel/inc/device/scan_code.h	22;"	d
K_TAB	game/inc/scan_code.h	16;"	d
K_TAB	kernel/inc/device/scan_code.h	16;"	d
K_TILDE	game/inc/scan_code.h	44;"	d
K_TILDE	kernel/inc/device/scan_code.h	44;"	d
K_U	game/inc/scan_code.h	24;"	d
K_U	kernel/inc/device/scan_code.h	24;"	d
K_UP	game/inc/scan_code.h	77;"	d
K_UP	kernel/inc/device/scan_code.h	77;"	d
K_UP_0	game/inc/scan_code.h	12;"	d
K_UP_0	kernel/inc/device/scan_code.h	12;"	d
K_UP_1	game/inc/scan_code.h	3;"	d
K_UP_1	kernel/inc/device/scan_code.h	3;"	d
K_UP_2	game/inc/scan_code.h	4;"	d
K_UP_2	kernel/inc/device/scan_code.h	4;"	d
K_UP_3	game/inc/scan_code.h	5;"	d
K_UP_3	kernel/inc/device/scan_code.h	5;"	d
K_UP_4	game/inc/scan_code.h	6;"	d
K_UP_4	kernel/inc/device/scan_code.h	6;"	d
K_UP_5	game/inc/scan_code.h	7;"	d
K_UP_5	kernel/inc/device/scan_code.h	7;"	d
K_UP_6	game/inc/scan_code.h	8;"	d
K_UP_6	kernel/inc/device/scan_code.h	8;"	d
K_UP_7	game/inc/scan_code.h	9;"	d
K_UP_7	kernel/inc/device/scan_code.h	9;"	d
K_UP_8	game/inc/scan_code.h	10;"	d
K_UP_8	kernel/inc/device/scan_code.h	10;"	d
K_UP_9	game/inc/scan_code.h	11;"	d
K_UP_9	kernel/inc/device/scan_code.h	11;"	d
K_UP_MINUS	game/inc/scan_code.h	13;"	d
K_UP_MINUS	kernel/inc/device/scan_code.h	13;"	d
K_UP_PLUS	game/inc/scan_code.h	14;"	d
K_UP_PLUS	kernel/inc/device/scan_code.h	14;"	d
K_V	game/inc/scan_code.h	50;"	d
K_V	kernel/inc/device/scan_code.h	50;"	d
K_W	game/inc/scan_code.h	19;"	d
K_W	kernel/inc/device/scan_code.h	19;"	d
K_X	game/inc/scan_code.h	48;"	d
K_X	kernel/inc/device/scan_code.h	48;"	d
K_Y	game/inc/scan_code.h	23;"	d
K_Y	kernel/inc/device/scan_code.h	23;"	d
K_Z	game/inc/scan_code.h	47;"	d
K_Z	kernel/inc/device/scan_code.h	47;"	d
LD	Makefile	/^LD      := ld$/;"	m
LIB_C	Makefile	/^LIB_C := $(wildcard $(LIB_DIR)\/*.c)$/;"	m
LIB_DIR	Makefile	/^LIB_DIR        := lib$/;"	m
LIB_O	Makefile	/^LIB_O := $(LIB_C:%.c=$(OBJ_DIR)\/%.o)$/;"	m
LS_HEIGHT	game/inc/video.h	13;"	d
LS_HEIGHT	kernel/inc/device/video.h	15;"	d
LS_WIDTH	game/inc/video.h	12;"	d
LS_WIDTH	kernel/inc/device/video.h	14;"	d
LS_WIDTH_SIZE	game/inc/video.h	14;"	d
LS_WIDTH_SIZE	kernel/inc/device/video.h	16;"	d
MAX	boot/inc/types.h	49;"	d
MAX	inc/types.h	49;"	d
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAXMEM	tools/hh/mmu.h	10;"	d
MIN	boot/inc/types.h	43;"	d
MIN	inc/types.h	43;"	d
ModeInfoBlock	kernel/inc/device/video_mode.h	/^struct ModeInfoBlock {$/;"	s
ModeInfoBlock::VBE_FAR	kernel/inc/device/video_mode.h	/^	uint16_t segmentA, segmentB, VBE_FAR, realFctPtr;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::Wchar	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::Xres	kernel/inc/device/video_mode.h	/^	uint16_t Xres, Yres;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::Ychar	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::Yres	kernel/inc/device/video_mode.h	/^	uint16_t Xres, Yres;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::attributes	kernel/inc/device/video_mode.h	/^	uint16_t attributes;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::bank_size	kernel/inc/device/video_mode.h	/^	uint8_t memory_model, bank_size, image_pages;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::banks	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::blue_mask	kernel/inc/device/video_mode.h	/^	uint8_t blue_mask, blue_position;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::blue_position	kernel/inc/device/video_mode.h	/^	uint8_t blue_mask, blue_position;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::bpp	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::directcolor_attributes	kernel/inc/device/video_mode.h	/^	uint8_t directcolor_attributes;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::granularity	kernel/inc/device/video_mode.h	/^	uint16_t granularity;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::green_mask	kernel/inc/device/video_mode.h	/^	uint8_t green_mask, green_position;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::green_position	kernel/inc/device/video_mode.h	/^	uint8_t green_mask, green_position;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::image_pages	kernel/inc/device/video_mode.h	/^	uint8_t memory_model, bank_size, image_pages;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::memory_model	kernel/inc/device/video_mode.h	/^	uint8_t memory_model, bank_size, image_pages;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::physbase	kernel/inc/device/video_mode.h	/^	uint32_t physbase;  \/\/ your LFB (Linear Framebuffer) address ;)$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::pitch	kernel/inc/device/video_mode.h	/^	uint16_t pitch; \/\/ bytes per scanline$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::planes	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::realFctPtr	kernel/inc/device/video_mode.h	/^	uint16_t segmentA, segmentB, VBE_FAR, realFctPtr;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::red_mask	kernel/inc/device/video_mode.h	/^	uint8_t red_mask, red_position;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::red_position	kernel/inc/device/video_mode.h	/^	uint8_t red_mask, red_position;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::reserved0	kernel/inc/device/video_mode.h	/^	uint8_t reserved0;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::reserved1	kernel/inc/device/video_mode.h	/^	uint32_t reserved1;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::reserved2	kernel/inc/device/video_mode.h	/^	uint16_t reserved2;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::rsv_mask	kernel/inc/device/video_mode.h	/^	uint8_t rsv_mask, rsv_position;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::rsv_position	kernel/inc/device/video_mode.h	/^	uint8_t rsv_mask, rsv_position;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::segmentA	kernel/inc/device/video_mode.h	/^	uint16_t segmentA, segmentB, VBE_FAR, realFctPtr;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::segmentB	kernel/inc/device/video_mode.h	/^	uint16_t segmentA, segmentB, VBE_FAR, realFctPtr;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::winA	kernel/inc/device/video_mode.h	/^    uint8_t winA,winB;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::winB	kernel/inc/device/video_mode.h	/^    uint8_t winA,winB;$/;"	m	struct:ModeInfoBlock	access:public
ModeInfoBlock::winsize	kernel/inc/device/video_mode.h	/^	uint16_t winsize;$/;"	m	struct:ModeInfoBlock	access:public
NPDENTRIES	boot/inc/mmu.h	45;"	d
NPTENTRIES	boot/inc/mmu.h	46;"	d
NR_BULLET	game/src/effect.c	9;"	d	file:
NR_ENEMY	game/src/effect.c	8;"	d	file:
NR_HARD_INTR	kernel/irq/irq_handle.c	5;"	d	file:
NR_IRQ	kernel/irq/idt.c	8;"	d	file:
NR_IRQ_HANDLE	kernel/irq/irq_handle.c	4;"	d	file:
NR_KEYS	game/lib/keyboard.c	6;"	d	file:
NR_KEYS	kernel/device/keyboard.c	5;"	d	file:
NR_PALETTE_ENTRY	cache/palette.c	10;"	d	file:
NR_PCB	kernel/memory/pm.c	8;"	d	file:
NR_PDE	kernel/inc/mmu.h	45;"	d
NR_PHY_PTE	kernel/memory/mm.c	6;"	d	file:
NR_PTE	kernel/inc/mmu.h	46;"	d
NR_SEGMENTS	boot/inc/mmu.h	140;"	d
NR_SEGMENTS	kernel/inc/mmu.h	212;"	d
NR_SEGMENTS	tools/hh/mmu.h	83;"	d
NULL	boot/inc/types.h	5;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
OBJCOPY	Makefile	/^OBJCOPY := objcopy$/;"	m
OBJ_BOOT_DIR	Makefile	/^OBJ_BOOT_DIR   := $(OBJ_DIR)\/$(BOOT_DIR)$/;"	m
OBJ_DIR	Makefile	/^OBJ_DIR        := obj$/;"	m
OBJ_GAME_DIR	Makefile	/^OBJ_GAME_DIR   := $(OBJ_DIR)\/$(GAME_DIR)$/;"	m
OBJ_KERNEL_DIR	Makefile	/^OBJ_KERNEL_DIR := $(OBJ_DIR)\/$(KERNEL_DIR)$/;"	m
OBJ_LIB_DIR	Makefile	/^OBJ_LIB_DIR    := $(OBJ_DIR)\/$(LIB_DIR)$/;"	m
OemStringPtr	kernel/inc/device/video_mode.h	/^	uint16_t OemStringPtr[2];            \/\/ isa vbeFarPtr$/;"	m	struct:VbeInfoBlock	access:public
PCB	kernel/memory/pm.c	/^typedef struct PCB {$/;"	s	file:
PCB	kernel/memory/pm.c	/^} PCB;$/;"	t	typeref:struct:PCB	file:
PCB::PID	kernel/memory/pm.c	/^	int PID;$/;"	m	struct:PCB	file:	access:public
PCB::align_to_page	kernel/memory/pm.c	/^	PDE updir[NR_PDE] align_to_page;$/;"	m	struct:PCB	file:	access:public
PCB::align_to_page	kernel/memory/pm.c	/^	PTE uptable[3][NR_PTE] align_to_page;$/;"	m	struct:PCB	file:	access:public
PCB::kstack	kernel/memory/pm.c	/^	uint8_t kstack[4096];$/;"	m	struct:PCB	file:	access:public
PCB::ucr3	kernel/memory/pm.c	/^	CR3 ucr3;$/;"	m	struct:PCB	file:	access:public
PDE	kernel/inc/memory.h	/^} PDE;$/;"	t	typeref:union:PageDirectoryEntry
PDE_ADDR	kernel/inc/mmu.h	77;"	d
PDX	boot/inc/mmu.h	33;"	d
PDX	kernel/inc/mmu.h	33;"	d
PDXSHIFT	boot/inc/mmu.h	55;"	d
PDXSHIFT	kernel/inc/mmu.h	55;"	d
PGADDR	boot/inc/mmu.h	42;"	d
PGADDR	kernel/inc/mmu.h	42;"	d
PGNUM	boot/inc/mmu.h	30;"	d
PGNUM	kernel/inc/mmu.h	30;"	d
PGOFF	boot/inc/mmu.h	39;"	d
PGOFF	kernel/inc/mmu.h	39;"	d
PGSHIFT	boot/inc/mmu.h	49;"	d
PGSHIFT	kernel/inc/mmu.h	49;"	d
PGSIZE	boot/inc/mmu.h	48;"	d
PGSIZE	kernel/inc/mmu.h	48;"	d
PHY_MEM	kernel/inc/memory.h	10;"	d
PID	kernel/memory/pm.c	/^	int PID;$/;"	m	struct:PCB	file:	access:public
PIT_FREQUENCE	kernel/device/timer.c	6;"	d	file:
PORT	kernel.S	/^#define PORT 0x3f8   \/* COM1 *\/$/;"	d
PORT	kernel/lib/serial.c	3;"	d	file:
PORT_CH_0	kernel/device/timer.c	4;"	d	file:
PORT_CMD	kernel/device/timer.c	5;"	d	file:
PORT_PIC_MASTER	kernel.S	/^#define PORT_PIC_MASTER 0x20$/;"	d
PORT_PIC_MASTER	kernel/irq/i8259.c	3;"	d	file:
PORT_PIC_SLAVE	kernel.S	/^#define PORT_PIC_SLAVE  0xA0$/;"	d
PORT_PIC_SLAVE	kernel/irq/i8259.c	4;"	d	file:
PROGRAM	Makefile	/^PROGRAM := program.bin$/;"	m
PT	kernel/inc/memory.h	/^typedef PTE (*PT) [NR_PTE];$/;"	t
PTE	kernel/inc/memory.h	/^} PTE;$/;"	t	typeref:union:PageTableEntry
PTE_A	boot/inc/mmu.h	63;"	d
PTE_A	kernel/inc/mmu.h	63;"	d
PTE_ADDR	boot/inc/mmu.h	76;"	d
PTE_ADDR	kernel/inc/mmu.h	76;"	d
PTE_AVAIL	boot/inc/mmu.h	70;"	d
PTE_AVAIL	kernel/inc/mmu.h	70;"	d
PTE_D	boot/inc/mmu.h	64;"	d
PTE_D	kernel/inc/mmu.h	64;"	d
PTE_G	boot/inc/mmu.h	66;"	d
PTE_G	kernel/inc/mmu.h	66;"	d
PTE_INFO	kernel/memory/mm.c	/^typedef struct PTE_INFO {$/;"	s	file:
PTE_INFO	kernel/memory/mm.c	/^} PTE_INFO;$/;"	t	typeref:struct:PTE_INFO	file:
PTE_INFO::next	kernel/memory/mm.c	/^	struct PTE_INFO *next;$/;"	m	struct:PTE_INFO	typeref:struct:PTE_INFO::PTE_INFO	file:	access:public
PTE_INFO::physbase	kernel/memory/mm.c	/^	uint32_t physbase;$/;"	m	struct:PTE_INFO	file:	access:public
PTE_INFO::prev	kernel/memory/mm.c	/^	struct PTE_INFO *prev;$/;"	m	struct:PTE_INFO	typeref:struct:PTE_INFO::PTE_INFO	file:	access:public
PTE_P	boot/inc/mmu.h	58;"	d
PTE_P	kernel/inc/mmu.h	58;"	d
PTE_PCD	boot/inc/mmu.h	62;"	d
PTE_PCD	kernel/inc/mmu.h	62;"	d
PTE_PS	boot/inc/mmu.h	65;"	d
PTE_PS	kernel/inc/mmu.h	65;"	d
PTE_PWT	boot/inc/mmu.h	61;"	d
PTE_PWT	kernel/inc/mmu.h	61;"	d
PTE_SYSCALL	boot/inc/mmu.h	73;"	d
PTE_SYSCALL	kernel/inc/mmu.h	73;"	d
PTE_U	boot/inc/mmu.h	60;"	d
PTE_U	kernel/inc/mmu.h	60;"	d
PTE_W	boot/inc/mmu.h	59;"	d
PTE_W	kernel/inc/mmu.h	59;"	d
PTSHIFT	boot/inc/mmu.h	52;"	d
PTSHIFT	kernel/inc/mmu.h	52;"	d
PTSIZE	boot/inc/mmu.h	51;"	d
PTSIZE	kernel/inc/mmu.h	51;"	d
PTX	boot/inc/mmu.h	36;"	d
PTX	kernel/inc/mmu.h	36;"	d
PTXSHIFT	boot/inc/mmu.h	54;"	d
PTXSHIFT	kernel/inc/mmu.h	54;"	d
PageDirectoryEntry	kernel/inc/memory.h	/^typedef union PageDirectoryEntry {$/;"	u
PageDirectoryEntry::__anon5::accessed	kernel/inc/memory.h	/^		uint32_t accessed            : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
PageDirectoryEntry::__anon5::pad0	kernel/inc/memory.h	/^		uint32_t pad0                : 6;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
PageDirectoryEntry::__anon5::page_cache_disable	kernel/inc/memory.h	/^		uint32_t page_cache_disable  : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
PageDirectoryEntry::__anon5::page_frame	kernel/inc/memory.h	/^		uint32_t page_frame          : 20;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
PageDirectoryEntry::__anon5::page_write_through	kernel/inc/memory.h	/^		uint32_t page_write_through  : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
PageDirectoryEntry::__anon5::present	kernel/inc/memory.h	/^		uint32_t present             : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
PageDirectoryEntry::__anon5::read_write	kernel/inc/memory.h	/^		uint32_t read_write          : 1; $/;"	m	struct:PageDirectoryEntry::__anon5	access:public
PageDirectoryEntry::__anon5::user_supervisor	kernel/inc/memory.h	/^		uint32_t user_supervisor     : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
PageDirectoryEntry::val	kernel/inc/memory.h	/^	uint32_t val;$/;"	m	union:PageDirectoryEntry	access:public
PageTableEntry	kernel/inc/memory.h	/^typedef union PageTableEntry {$/;"	u
PageTableEntry::__anon6::accessed	kernel/inc/memory.h	/^		uint32_t accessed            : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::dirty	kernel/inc/memory.h	/^		uint32_t dirty               : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::global	kernel/inc/memory.h	/^		uint32_t global              : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::pad0	kernel/inc/memory.h	/^		uint32_t pad0                : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::pad1	kernel/inc/memory.h	/^		uint32_t pad1                : 3;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::page_cache_disable	kernel/inc/memory.h	/^		uint32_t page_cache_disable  : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::page_frame	kernel/inc/memory.h	/^		uint32_t page_frame          : 20;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::page_write_through	kernel/inc/memory.h	/^		uint32_t page_write_through  : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::present	kernel/inc/memory.h	/^		uint32_t present             : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::read_write	kernel/inc/memory.h	/^		uint32_t read_write          : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::__anon6::user_supervisor	kernel/inc/memory.h	/^		uint32_t user_supervisor     : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
PageTableEntry::val	kernel/inc/memory.h	/^	uint32_t val;$/;"	m	union:PageTableEntry	access:public
Pixels	game/inc/video.h	/^union Pixels {$/;"	u
Pixels	kernel/inc/device/video.h	/^union Pixels {$/;"	u
Pixels::RGB_array	game/inc/video.h	/^	uint8_t RGB_array[3];$/;"	m	union:Pixels	access:public
Pixels::RGB_array	kernel/inc/device/video.h	/^	uint8_t RGB_array[3];$/;"	m	union:Pixels	access:public
Pixels::__anon15::blue	game/inc/video.h	/^		uint8_t blue;$/;"	m	struct:Pixels::__anon15	access:public
Pixels::__anon15::green	game/inc/video.h	/^		uint8_t green;$/;"	m	struct:Pixels::__anon15	access:public
Pixels::__anon15::red	game/inc/video.h	/^		uint8_t red;$/;"	m	struct:Pixels::__anon15	access:public
Pixels::__anon4::blue	kernel/inc/device/video.h	/^		uint8_t blue;$/;"	m	struct:Pixels::__anon4	access:public
Pixels::__anon4::green	kernel/inc/device/video.h	/^		uint8_t green;$/;"	m	struct:Pixels::__anon4	access:public
Pixels::__anon4::red	kernel/inc/device/video.h	/^		uint8_t red;$/;"	m	struct:Pixels::__anon4	access:public
Proghdr	boot/inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr	kernel/inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	boot/inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_align	kernel/inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	boot/inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	kernel/inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	boot/inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	kernel/inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	boot/inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	kernel/inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	boot/inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	kernel/inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	boot/inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	kernel/inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	boot/inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	kernel/inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	boot/inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	kernel/inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	boot/inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc	kernel/inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc	tools/hh/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	boot/inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_base	kernel/inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_base	tools/hh/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	boot/inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	kernel/inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	tools/hh/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
QEMU	Makefile	/^QEMU    := qemu-system-i386$/;"	m
QEMU_DEBUG_OPTIONS	Makefile	/^QEMU_DEBUG_OPTIONS := -S #启动不执行$/;"	m
QEMU_OPTIONS	Makefile	/^QEMU_OPTIONS := -serial stdio #以标准输入输为串口(COM1)$/;"	m
RGB_array	game/inc/video.h	/^	uint8_t RGB_array[3];$/;"	m	union:Pixels	access:public
RGB_array	kernel/inc/device/video.h	/^	uint8_t RGB_array[3];$/;"	m	union:Pixels	access:public
ROUNDDOWN	boot/inc/types.h	58;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	boot/inc/types.h	64;"	d
ROUNDUP	inc/types.h	64;"	d
SCR_DEPTH	game/inc/video.h	8;"	d
SCR_DEPTH	kernel/inc/device/video.h	8;"	d
SCR_HEIGHT	game/inc/video.h	7;"	d
SCR_HEIGHT	kernel/inc/device/video.h	7;"	d
SCR_KSTACK	kernel/memory/pm.c	9;"	d	file:
SCR_SIZE	game/inc/video.h	10;"	d
SCR_SIZE	kernel/inc/device/video.h	10;"	d
SCR_WIDTH	game/inc/video.h	6;"	d
SCR_WIDTH	kernel/inc/device/video.h	6;"	d
SCR_WIDTH_SIZE	game/inc/video.h	9;"	d
SCR_WIDTH_SIZE	kernel/inc/device/video.h	9;"	d
SECTSIZE	boot/boot.c	5;"	d	file:
SECTSIZE	kernel/main.c	9;"	d	file:
SECTSIZE	kernel/memory/pm.c	11;"	d	file:
SEG	boot/inc/mmu.h	164;"	d
SEG	boot/inc/mmu.h	195;"	d
SEG	kernel/inc/mmu.h	145;"	d
SEG	kernel/inc/mmu.h	176;"	d
SEG	tools/hh/mmu.h	/^SEG(SegDesc *ptr, uint32_t type,uint32_t base, uint32_t limit, uint32_t dpl){$/;"	f	signature:(SegDesc *ptr, uint32_t type,uint32_t base, uint32_t limit, uint32_t dpl)
SEG	tools/hh/mmu.h	107;"	d
SEG16	boot/inc/mmu.h	199;"	d
SEG16	kernel/inc/mmu.h	180;"	d
SEG16	tools/hh/mmu.h	/^SEG16(SegDesc *ptr, uint32_t type,uint32_t base, uint32_t limit, uint32_t dpl){$/;"	f	signature:(SegDesc *ptr, uint32_t type,uint32_t base, uint32_t limit, uint32_t dpl)
SEG_32BIT	boot/inc/mmu.h	129;"	d
SEG_4KB_GRANULARITY	boot/inc/mmu.h	130;"	d
SEG_CODEDATA	boot/inc/mmu.h	128;"	d
SEG_EXECUTABLE	boot/inc/mmu.h	138;"	d
SEG_EXECUTABLE	tools/hh/mmu.h	78;"	d
SEG_EXE_CODE	tools/hh/mmu.h	80;"	d
SEG_FAULT	boot/inc/mmu.h	193;"	d
SEG_FAULT	kernel/inc/mmu.h	174;"	d
SEG_FAULT	tools/hh/mmu.h	155;"	d
SEG_KERNEL_CODE	boot/inc/mmu.h	142;"	d
SEG_KERNEL_CODE	kernel/inc/mmu.h	213;"	d
SEG_KERNEL_CODE	tools/hh/mmu.h	84;"	d
SEG_KERNEL_DATA	boot/inc/mmu.h	143;"	d
SEG_KERNEL_DATA	kernel/inc/mmu.h	214;"	d
SEG_KERNEL_DATA	tools/hh/mmu.h	85;"	d
SEG_KERNEL_NULL	boot/inc/mmu.h	141;"	d
SEG_NULL	boot/inc/mmu.h	161;"	d
SEG_NULL	boot/inc/mmu.h	191;"	d
SEG_NULL	kernel/inc/mmu.h	142;"	d
SEG_NULL	kernel/inc/mmu.h	172;"	d
SEG_NULL	tools/hh/mmu.h	104;"	d
SEG_NULL	tools/hh/mmu.h	153;"	d
SEG_READABLE	boot/inc/mmu.h	137;"	d
SEG_READABLE	tools/hh/mmu.h	77;"	d
SEG_RW_DATA	tools/hh/mmu.h	79;"	d
SEG_TSS	tools/hh/mmu.h	88;"	d
SEG_TSS_32BIT	boot/inc/mmu.h	131;"	d
SEG_WRITABLE	boot/inc/mmu.h	136;"	d
SEG_WRITABLE	tools/hh/mmu.h	76;"	d
SELECTOR_INDEX	kernel/inc/mmu.h	225;"	d
SELECTOR_INDEX	tools/hh/mmu.h	95;"	d
SELECTOR_KERNEL	boot/inc/mmu.h	145;"	d
SELECTOR_KERNEL	kernel/inc/mmu.h	222;"	d
SELECTOR_KERNEL	tools/hh/mmu.h	92;"	d
SELECTOR_USER	boot/inc/mmu.h	146;"	d
SELECTOR_USER	kernel/inc/mmu.h	223;"	d
SELECTOR_USER	tools/hh/mmu.h	93;"	d
SEL_KEL	tools/hh/mmu.h	112;"	d
SETCALLGATE	boot/inc/mmu.h	319;"	d
SETCALLGATE	kernel/inc/mmu.h	319;"	d
SETCALLGATE	tools/hh/mmu.h	348;"	d
SETGATE	boot/inc/mmu.h	305;"	d
SETGATE	kernel/inc/mmu.h	305;"	d
SETGATE	tools/hh/mmu.h	334;"	d
STA_A	boot/inc/mmu.h	212;"	d
STA_A	kernel/inc/mmu.h	193;"	d
STA_A	tools/hh/mmu.h	210;"	d
STA_C	boot/inc/mmu.h	209;"	d
STA_C	kernel/inc/mmu.h	190;"	d
STA_C	tools/hh/mmu.h	207;"	d
STA_E	boot/inc/mmu.h	208;"	d
STA_E	kernel/inc/mmu.h	189;"	d
STA_E	tools/hh/mmu.h	206;"	d
STA_R	boot/inc/mmu.h	211;"	d
STA_R	kernel/inc/mmu.h	192;"	d
STA_R	tools/hh/mmu.h	209;"	d
STA_W	boot/inc/mmu.h	210;"	d
STA_W	kernel/inc/mmu.h	191;"	d
STA_W	tools/hh/mmu.h	208;"	d
STA_X	boot/inc/mmu.h	207;"	d
STA_X	kernel/inc/mmu.h	188;"	d
STA_X	tools/hh/mmu.h	205;"	d
STS_CG16	boot/inc/mmu.h	218;"	d
STS_CG16	kernel/inc/mmu.h	199;"	d
STS_CG16	tools/hh/mmu.h	216;"	d
STS_CG32	boot/inc/mmu.h	224;"	d
STS_CG32	kernel/inc/mmu.h	205;"	d
STS_CG32	tools/hh/mmu.h	222;"	d
STS_IG16	boot/inc/mmu.h	220;"	d
STS_IG16	kernel/inc/mmu.h	201;"	d
STS_IG16	tools/hh/mmu.h	218;"	d
STS_IG32	boot/inc/mmu.h	225;"	d
STS_IG32	kernel/inc/mmu.h	206;"	d
STS_IG32	tools/hh/mmu.h	223;"	d
STS_LDT	boot/inc/mmu.h	216;"	d
STS_LDT	kernel/inc/mmu.h	197;"	d
STS_LDT	tools/hh/mmu.h	214;"	d
STS_T16A	boot/inc/mmu.h	215;"	d
STS_T16A	kernel/inc/mmu.h	196;"	d
STS_T16A	tools/hh/mmu.h	213;"	d
STS_T16B	boot/inc/mmu.h	217;"	d
STS_T16B	kernel/inc/mmu.h	198;"	d
STS_T16B	tools/hh/mmu.h	215;"	d
STS_T32A	boot/inc/mmu.h	222;"	d
STS_T32A	kernel/inc/mmu.h	203;"	d
STS_T32A	tools/hh/mmu.h	220;"	d
STS_T32B	boot/inc/mmu.h	223;"	d
STS_T32B	kernel/inc/mmu.h	204;"	d
STS_T32B	tools/hh/mmu.h	221;"	d
STS_TG	boot/inc/mmu.h	219;"	d
STS_TG	kernel/inc/mmu.h	200;"	d
STS_TG	tools/hh/mmu.h	217;"	d
STS_TG16	boot/inc/mmu.h	221;"	d
STS_TG16	kernel/inc/mmu.h	202;"	d
STS_TG16	tools/hh/mmu.h	219;"	d
STS_TG32	boot/inc/mmu.h	226;"	d
STS_TG32	kernel/inc/mmu.h	207;"	d
STS_TG32	tools/hh/mmu.h	224;"	d
SYS_kbd	game/lib/syscall.c	/^enum {SYS_write, SYS_time, SYS_kbd, SYS_video};$/;"	e	enum:__anon13	file:
SYS_kbd	kernel/syscall/do_syscall.c	/^enum {SYS_write, SYS_time, SYS_kbd, SYS_video};$/;"	e	enum:__anon9	file:
SYS_time	game/lib/syscall.c	/^enum {SYS_write, SYS_time, SYS_kbd, SYS_video};$/;"	e	enum:__anon13	file:
SYS_time	kernel/syscall/do_syscall.c	/^enum {SYS_write, SYS_time, SYS_kbd, SYS_video};$/;"	e	enum:__anon9	file:
SYS_video	game/lib/syscall.c	/^enum {SYS_write, SYS_time, SYS_kbd, SYS_video};$/;"	e	enum:__anon13	file:
SYS_video	kernel/syscall/do_syscall.c	/^enum {SYS_write, SYS_time, SYS_kbd, SYS_video};$/;"	e	enum:__anon9	file:
SYS_write	game/lib/syscall.c	/^enum {SYS_write, SYS_time, SYS_kbd, SYS_video};$/;"	e	enum:__anon13	file:
SYS_write	kernel/syscall/do_syscall.c	/^enum {SYS_write, SYS_time, SYS_kbd, SYS_video};$/;"	e	enum:__anon9	file:
Secthdr	boot/inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr	kernel/inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	boot/inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addr	kernel/inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	boot/inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	kernel/inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	boot/inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	kernel/inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	boot/inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	kernel/inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	boot/inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	kernel/inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	boot/inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	kernel/inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	boot/inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	kernel/inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	boot/inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	kernel/inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	boot/inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	kernel/inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	boot/inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	kernel/inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
SegDesc	tools/hh/mmu.h	/^} SegDesc;$/;"	t	typeref:struct:SegmentDescriptor
Segdesc	boot/inc/mmu.h	/^} Segdesc;$/;"	t	typeref:struct:SegmentDescriptor
Segdesc	kernel/inc/mmu.h	/^} Segdesc;$/;"	t	typeref:struct:SegmentDescriptor
SegmentDescriptor	boot/inc/mmu.h	/^typedef struct SegmentDescriptor {$/;"	s
SegmentDescriptor	kernel/inc/mmu.h	/^typedef struct SegmentDescriptor {$/;"	s
SegmentDescriptor	tools/hh/mmu.h	/^typedef struct SegmentDescriptor {$/;"	s
SegmentDescriptor::base_15_0	tools/hh/mmu.h	/^	uint32_t base_15_0           : 16;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::base_23_16	tools/hh/mmu.h	/^	uint32_t base_23_16          : 8;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::base_31_24	tools/hh/mmu.h	/^	uint32_t base_31_24          : 8;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::granularity	tools/hh/mmu.h	/^	uint32_t granularity         : 1;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::limit_15_0	tools/hh/mmu.h	/^	uint32_t limit_15_0          : 16;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::limit_19_16	tools/hh/mmu.h	/^	uint32_t limit_19_16         : 4;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::operation_size	tools/hh/mmu.h	/^	uint32_t operation_size      : 1;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::pad0	tools/hh/mmu.h	/^	uint32_t pad0                : 1;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::present	tools/hh/mmu.h	/^	uint32_t present             : 1;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::privilege_level	tools/hh/mmu.h	/^	uint32_t privilege_level     : 2;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_avl	boot/inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_avl	kernel/inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_base_15_0	boot/inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_base_15_0	kernel/inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_base_23_16	boot/inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_base_23_16	kernel/inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_base_31_24	boot/inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_base_31_24	kernel/inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_db	boot/inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_db	kernel/inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_dpl	boot/inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_dpl	kernel/inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_g	boot/inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_g	kernel/inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_lim_15_0	boot/inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_lim_15_0	kernel/inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_lim_19_16	boot/inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_lim_19_16	kernel/inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_p	boot/inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_p	kernel/inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_rsv1	boot/inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_rsv1	kernel/inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_s	boot/inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_s	kernel/inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_type	boot/inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::sd_type	kernel/inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::segment_type	tools/hh/mmu.h	/^	uint32_t segment_type        : 1;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::soft_use	tools/hh/mmu.h	/^	uint32_t soft_use            : 1;$/;"	m	struct:SegmentDescriptor	access:public
SegmentDescriptor::type	tools/hh/mmu.h	/^	uint32_t type                : 4;$/;"	m	struct:SegmentDescriptor	access:public
Surface	game/inc/video.h	/^struct Surface {$/;"	s
Surface	kernel/inc/device/video.h	/^struct Surface {$/;"	s
Surface::h	game/inc/video.h	/^	int w, h;$/;"	m	struct:Surface	access:public
Surface::h	kernel/inc/device/video.h	/^	int w, h;$/;"	m	struct:Surface	access:public
Surface::pixels	game/inc/video.h	/^	uint8_t *pixels;$/;"	m	struct:Surface	access:public
Surface::pixels	kernel/inc/device/video.h	/^	uint8_t *pixels;$/;"	m	struct:Surface	access:public
Surface::w	game/inc/video.h	/^	int w, h;$/;"	m	struct:Surface	access:public
Surface::w	kernel/inc/device/video.h	/^	int w, h;$/;"	m	struct:Surface	access:public
Surface::x	game/inc/video.h	/^	int x, y;$/;"	m	struct:Surface	access:public
Surface::x	kernel/inc/device/video.h	/^	int x, y;$/;"	m	struct:Surface	access:public
Surface::y	game/inc/video.h	/^	int x, y;$/;"	m	struct:Surface	access:public
Surface::y	kernel/inc/device/video.h	/^	int x, y;$/;"	m	struct:Surface	access:public
TEST_WORK	kernel/main.c	/^void TEST_WORK(){$/;"	f
TRAP_GATE_32	kernel/irq/idt.c	7;"	d	file:
TSS	tools/hh/mmu.h	/^}TSS;$/;"	t	typeref:struct:__anon12
Taskstate	boot/inc/mmu.h	/^} Taskstate;$/;"	t	typeref:struct:TaskstateSegment
Taskstate	kernel/inc/mmu.h	/^} Taskstate;$/;"	t	typeref:struct:TaskstateSegment
Taskstate	tools/hh/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	tools/hh/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	tools/hh/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	tools/hh/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	tools/hh/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	tools/hh/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	tools/hh/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	tools/hh/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	tools/hh/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	tools/hh/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	tools/hh/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	tools/hh/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	tools/hh/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	tools/hh/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	tools/hh/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	tools/hh/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	tools/hh/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	tools/hh/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	tools/hh/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	tools/hh/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	tools/hh/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	tools/hh/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	tools/hh/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	tools/hh/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	tools/hh/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	tools/hh/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	tools/hh/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	tools/hh/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	tools/hh/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	tools/hh/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	tools/hh/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	tools/hh/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	tools/hh/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	tools/hh/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	tools/hh/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	tools/hh/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	tools/hh/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	tools/hh/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TaskstateSegment	boot/inc/mmu.h	/^typedef struct TaskstateSegment {$/;"	s
TaskstateSegment	kernel/inc/mmu.h	/^typedef struct TaskstateSegment {$/;"	s
TaskstateSegment::ts_cr3	boot/inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_cr3	kernel/inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_cs	boot/inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_cs	kernel/inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ds	boot/inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ds	kernel/inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_eax	boot/inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_eax	kernel/inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ebp	boot/inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ebp	kernel/inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ebx	boot/inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ebx	kernel/inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ecx	boot/inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ecx	kernel/inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_edi	boot/inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_edi	kernel/inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_edx	boot/inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_edx	kernel/inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_eflags	boot/inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_eflags	kernel/inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_eip	boot/inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_eip	kernel/inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_es	boot/inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_es	kernel/inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esi	boot/inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esi	kernel/inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esp	boot/inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esp	kernel/inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esp0	boot/inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esp0	kernel/inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esp1	boot/inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esp1	kernel/inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esp2	boot/inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_esp2	kernel/inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_fs	boot/inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_fs	kernel/inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_gs	boot/inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_gs	kernel/inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_iomb	boot/inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_iomb	kernel/inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ldt	boot/inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ldt	kernel/inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_link	boot/inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_link	kernel/inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding1	boot/inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding1	kernel/inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding10	boot/inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding10	kernel/inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding2	boot/inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding2	kernel/inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding3	boot/inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding3	kernel/inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding4	boot/inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding4	kernel/inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding5	boot/inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding5	kernel/inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding6	boot/inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding6	kernel/inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding7	boot/inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding7	kernel/inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding8	boot/inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding8	kernel/inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding9	boot/inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_padding9	kernel/inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ss	boot/inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ss	kernel/inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ss0	boot/inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ss0	kernel/inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ss1	boot/inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ss1	kernel/inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ss2	boot/inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_ss2	kernel/inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_t	boot/inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:TaskstateSegment	access:public
TaskstateSegment::ts_t	kernel/inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:TaskstateSegment	access:public
TotalMemory	kernel/inc/device/video_mode.h	/^	uint16_t TotalMemory;             \/\/ as # of 64KB blocks$/;"	m	struct:VbeInfoBlock	access:public
TrapFrame	kernel/inc/irq.h	/^typedef struct TrapFrame {$/;"	s
TrapFrame	kernel/inc/irq.h	/^} TrapFrame;$/;"	t	typeref:struct:TrapFrame
TrapFrame	tools/hh/mmu.h	/^struct TrapFrame {$/;"	s
TrapFrame	tools/hh/mmu.h	/^typedef struct TrapFrame TrapFrame;$/;"	t	typeref:struct:TrapFrame
TrapFrame::cs	kernel/inc/irq.h	/^	uint32_t error_code, eip, cs, eflags;$/;"	m	struct:TrapFrame	access:public
TrapFrame::cs	tools/hh/mmu.h	/^	uint16_t cs;$/;"	m	struct:TrapFrame	access:public
TrapFrame::ds	tools/hh/mmu.h	/^	uint32_t gs,fs,es,ds;   \/\/ Segment register$/;"	m	struct:TrapFrame	access:public
TrapFrame::eax	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
TrapFrame::eax	tools/hh/mmu.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame	access:public
TrapFrame::ebp	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
TrapFrame::ebp	tools/hh/mmu.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame	access:public
TrapFrame::ebx	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
TrapFrame::ebx	tools/hh/mmu.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame	access:public
TrapFrame::ecx	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
TrapFrame::ecx	tools/hh/mmu.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame	access:public
TrapFrame::edi	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
TrapFrame::edi	tools/hh/mmu.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame	access:public
TrapFrame::edx	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
TrapFrame::edx	tools/hh/mmu.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame	access:public
TrapFrame::eflags	kernel/inc/irq.h	/^	uint32_t error_code, eip, cs, eflags;$/;"	m	struct:TrapFrame	access:public
TrapFrame::eflags	tools/hh/mmu.h	/^	uint32_t eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame	access:public
TrapFrame::eip	kernel/inc/irq.h	/^	uint32_t error_code, eip, cs, eflags;$/;"	m	struct:TrapFrame	access:public
TrapFrame::eip	tools/hh/mmu.h	/^	uint32_t eip;$/;"	m	struct:TrapFrame	access:public
TrapFrame::err	tools/hh/mmu.h	/^	uint32_t err;$/;"	m	struct:TrapFrame	access:public
TrapFrame::error_code	kernel/inc/irq.h	/^	uint32_t error_code, eip, cs, eflags;$/;"	m	struct:TrapFrame	access:public
TrapFrame::es	tools/hh/mmu.h	/^	uint32_t gs,fs,es,ds;   \/\/ Segment register$/;"	m	struct:TrapFrame	access:public
TrapFrame::esi	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
TrapFrame::esi	tools/hh/mmu.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame	access:public
TrapFrame::esp	tools/hh/mmu.h	/^	uint32_t esp; $/;"	m	struct:TrapFrame	access:public
TrapFrame::esp_	tools/hh/mmu.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame	access:public
TrapFrame::fs	tools/hh/mmu.h	/^	uint32_t gs,fs,es,ds;   \/\/ Segment register$/;"	m	struct:TrapFrame	access:public
TrapFrame::gs	tools/hh/mmu.h	/^	uint32_t gs,fs,es,ds;   \/\/ Segment register$/;"	m	struct:TrapFrame	access:public
TrapFrame::irq	kernel/inc/irq.h	/^	int32_t irq;$/;"	m	struct:TrapFrame	access:public
TrapFrame::irq	tools/hh/mmu.h	/^	int irq;$/;"	m	struct:TrapFrame	access:public
TrapFrame::old_esp	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
TrapFrame::padding3	tools/hh/mmu.h	/^	uint16_t padding3;$/;"	m	struct:TrapFrame	access:public
TrapFrame::padding4	tools/hh/mmu.h	/^	uint16_t padding4;$/;"	m	struct:TrapFrame	access:public
TrapFrame::ss	tools/hh/mmu.h	/^	uint16_t ss;$/;"	m	struct:TrapFrame	access:public
USER_SIZE	kernel/inc/memory.h	12;"	d
USER_SIZE	tools/hh/mmu.h	12;"	d
USER_STACK_SIZE	tools/hh/mmu.h	14;"	d
USER_STACK_TOP	tools/hh/mmu.h	13;"	d
VBE_FAR	kernel/inc/device/video_mode.h	/^	uint16_t segmentA, segmentB, VBE_FAR, realFctPtr;$/;"	m	struct:ModeInfoBlock	access:public
VGA_DAC_DATA	cache/palette.c	7;"	d	file:
VGA_DAC_READ_INDEX	cache/palette.c	5;"	d	file:
VGA_DAC_WRITE_INDEX	cache/palette.c	6;"	d	file:
VbeInfoBlock	kernel/inc/device/video_mode.h	/^struct VbeInfoBlock {$/;"	s
VbeInfoBlock::Capabilities	kernel/inc/device/video_mode.h	/^	uint8_t Capabilities[4];$/;"	m	struct:VbeInfoBlock	access:public
VbeInfoBlock::OemStringPtr	kernel/inc/device/video_mode.h	/^	uint16_t OemStringPtr[2];            \/\/ isa vbeFarPtr$/;"	m	struct:VbeInfoBlock	access:public
VbeInfoBlock::TotalMemory	kernel/inc/device/video_mode.h	/^	uint16_t TotalMemory;             \/\/ as # of 64KB blocks$/;"	m	struct:VbeInfoBlock	access:public
VbeInfoBlock::VbeSignature	kernel/inc/device/video_mode.h	/^	char VbeSignature[4];             \/\/ == "VESA"$/;"	m	struct:VbeInfoBlock	access:public
VbeInfoBlock::VbeVersion	kernel/inc/device/video_mode.h	/^	uint16_t VbeVersion;                 \/\/ == 0x0300 for VBE 3.0$/;"	m	struct:VbeInfoBlock	access:public
VbeInfoBlock::VideoModePtr	kernel/inc/device/video_mode.h	/^	uint16_t VideoModePtr[2];         \/\/ isa vbeFarPtr$/;"	m	struct:VbeInfoBlock	access:public
VbeSignature	kernel/inc/device/video_mode.h	/^	char VbeSignature[4];             \/\/ == "VESA"$/;"	m	struct:VbeInfoBlock	access:public
VbeVersion	kernel/inc/device/video_mode.h	/^	uint16_t VbeVersion;                 \/\/ == 0x0300 for VBE 3.0$/;"	m	struct:VbeInfoBlock	access:public
VideoModePtr	kernel/inc/device/video_mode.h	/^	uint16_t VideoModePtr[2];         \/\/ isa vbeFarPtr$/;"	m	struct:VbeInfoBlock	access:public
Wchar	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
Xres	kernel/inc/device/video_mode.h	/^	uint16_t Xres, Yres;$/;"	m	struct:ModeInfoBlock	access:public
Ychar	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
Yres	kernel/inc/device/video_mode.h	/^	uint16_t Xres, Yres;$/;"	m	struct:ModeInfoBlock	access:public
__ASSERT_H__	kernel/inc/assert.h	2;"	d
__COMMON__	game/inc/common.h	2;"	d
__COMMON__	kernel/inc/common.h	2;"	d
__ELF_H__	boot/inc/elf.h	2;"	d
__ELF_H__	kernel/inc/elf.h	2;"	d
__IRQ_H__	kernel/inc/irq.h	2;"	d
__KEYBOARD_H__	game/inc/keyboard.h	2;"	d
__KEYBOARD_H__	kernel/inc/device/keyboard.h	2;"	d
__MEMORY_H_	kernel/inc/memory.h	2;"	d
__MMU_H__	boot/inc/mmu.h	2;"	d
__MMU_H__	kernel/inc/mmu.h	2;"	d
__PALETTE_H__	kernel/inc/device/palette.h	2;"	d
__STDARG_H__	inc/stdarg.h	4;"	d
__STDIO_H__	cache/stdio.h	2;"	d
__STDIO_H__	inc/stdio.h	2;"	d
__STRING_H__	inc/string.h	2;"	d
__SYSCALL_H__	game/inc/syscall.h	2;"	d
__TYPES_H__	boot/inc/types.h	2;"	d
__TYPES_H__	inc/types.h	2;"	d
__VIDEO_H__	game/inc/video.h	2;"	d
__VIDEO_H__	kernel/inc/device/video.h	2;"	d
__X86_H__	boot/inc/x86.h	2;"	d
__X86_H__	game/inc/x86.h	2;"	d
__X86_H__	kernel/inc/x86.h	2;"	d
__anon12::dontcare	tools/hh/mmu.h	/^	char dontcare[88];$/;"	m	struct:__anon12	access:public
__anon12::esp0	tools/hh/mmu.h	/^	uint32_t esp0;         \/\/ Ring 0 Stack pointer and segment selector$/;"	m	struct:__anon12	access:public
__anon12::link	tools/hh/mmu.h	/^	uint32_t link;         \/\/ old ts selector$/;"	m	struct:__anon12	access:public
__anon12::ss0	tools/hh/mmu.h	/^	uint32_t ss0;          \/\/ after an increase in privilege level$/;"	m	struct:__anon12	access:public
_free_pte	kernel.S	/^	_free_pte = &pte_info[KERNEL_SIZE \/ PTSIZE];$/;"	d
_free_pte	kernel.S	/^	_free_pte = temp->next;$/;"	d
_free_pte	kernel.S	/^	_free_pte = temp;$/;"	d
_free_pte	kernel/memory/mm.c	/^static PTE_INFO *_free_pte;$/;"	v	file:
_start	kernel.S	/^_start = va_to_pa(entry)$/;"	d
_start	kernel/entry.S	/^_start = va_to_pa(entry)$/;"	d
_used_pte	kernel.S	/^	_used_pte = &pte_info[0];$/;"	d
_used_pte	kernel.S	/^	_used_pte = temp;$/;"	d
_used_pte	kernel/memory/mm.c	/^static PTE_INFO *_used_pte;$/;"	v	file:
abort	kernel/inc/assert.h	/^int abort(const char *, int);$/;"	p	signature:(const char *, int)
abort	kernel/lib/abort.c	/^int abort(const char* filename, int line) {$/;"	f	signature:(const char* filename, int line)
access_mode	kernel/device/timer.c	/^		uint8_t access_mode  : 2;$/;"	m	struct:CmdByte::__anon11	file:	access:public
accessed	kernel/inc/memory.h	/^		uint32_t accessed            : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
accessed	kernel/inc/memory.h	/^		uint32_t accessed            : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
add_irq_handle	kernel/irq/irq_handle.c	/^void add_irq_handle(int irq, void (*func)(void) ) {$/;"	f	signature:(int irq, void (*func)(void) )
add_irq_handle	kernel/main.c	/^void add_irq_handle(int,void (*)(void));$/;"	p	file:	signature:(int,void (*)(void))
align_to_page	kernel/inc/memory.h	7;"	d
align_to_page	kernel/memory/kvm.c	/^static PDE kpdir[NR_PDE] align_to_page;$/;"	v	file:
align_to_page	kernel/memory/kvm.c	/^static PTE kptable[PHY_MEM \/ PGSIZE] align_to_page;$/;"	v	file:
align_to_page	kernel/memory/pm.c	/^	PDE updir[NR_PDE] align_to_page;$/;"	m	struct:PCB	file:	access:public
align_to_page	kernel/memory/pm.c	/^	PTE uptable[3][NR_PTE] align_to_page;$/;"	m	struct:PCB	file:	access:public
align_to_page	kernel/memory/vmem.c	/^static PTE uptable[NR_PTE] align_to_page;$/;"	v	file:
alignment_mask	kernel/inc/memory.h	/^		uint32_t alignment_mask      : 1;$/;"	m	struct:CR0::__anon7	access:public
altflag	game.S	/^			altflag = 1;$/;"	d
altflag	game.S	/^		altflag = 0;$/;"	d
altflag	kernel.S	/^			altflag = 1;$/;"	d
altflag	kernel.S	/^		altflag = 0;$/;"	d
asm_do_irq	kernel.S	/^asm_do_irq:$/;"	l
asm_do_irq	kernel/irq/do_irq.S	/^asm_do_irq:$/;"	l
assert	kernel/inc/assert.h	15;"	d
attributes	kernel/inc/device/video_mode.h	/^	uint16_t attributes;$/;"	m	struct:ModeInfoBlock	access:public
bank_size	kernel/inc/device/video_mode.h	/^	uint8_t memory_model, bank_size, image_pages;$/;"	m	struct:ModeInfoBlock	access:public
banks	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
base	game.S	/^			base = 10;$/;"	d
base	game.S	/^			base = 16;$/;"	d
base	game.S	/^			base = 8;$/;"	d
base	game.S	/^		base = 10;$/;"	d
base	kernel.S	/^			base = 10;$/;"	d
base	kernel.S	/^			base = 16;$/;"	d
base	kernel.S	/^			base = 8;$/;"	d
base	kernel.S	/^		base = 10;$/;"	d
base_15_0	tools/hh/mmu.h	/^	uint32_t base_15_0           : 16;$/;"	m	struct:SegmentDescriptor	access:public
base_23_16	tools/hh/mmu.h	/^	uint32_t base_23_16          : 8;$/;"	m	struct:SegmentDescriptor	access:public
base_31_24	tools/hh/mmu.h	/^	uint32_t base_31_24          : 8;$/;"	m	struct:SegmentDescriptor	access:public
blue	game/inc/video.h	/^		uint8_t blue;$/;"	m	struct:Pixels::__anon15	access:public
blue	kernel/inc/device/video.h	/^		uint8_t blue;$/;"	m	struct:Pixels::__anon4	access:public
blue_mask	kernel/inc/device/video_mode.h	/^	uint8_t blue_mask, blue_position;$/;"	m	struct:ModeInfoBlock	access:public
blue_position	kernel/inc/device/video_mode.h	/^	uint8_t blue_mask, blue_position;$/;"	m	struct:ModeInfoBlock	access:public
bool	boot/inc/types.h	/^typedef _Bool bool;$/;"	t
bool	game.S	/^bool generate_bullet() {$/;"	l
bool	game.S	/^bool generate_enemy() {$/;"	l
bool	game.S	/^bool process_keys() {$/;"	l
bool	game.S	/^bool process_keys();$/;"	l
bool	game.S	/^bool update_bullet() {$/;"	l
bool	game.S	/^bool update_bullet();$/;"	l
bool	game.S	/^bool update_enemy() {$/;"	l
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bootmain	boot/boot.c	/^int bootmain(void)$/;"	f	signature:(void)
bpp	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
breakpoint	boot/inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	boot/inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
breakpoint	game/inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	game/inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
breakpoint	kernel/inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	kernel/inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
bullet	game/src/effect.c	/^} *bullet_head, *bullet_avail, bullet[NR_BULLET];$/;"	v	typeref:struct:Bullet
bullet_avail	game.S	/^		bullet_avail = bullet_avail->next;$/;"	d
bullet_avail	game.S	/^		bullet_avail = bullet_p;$/;"	d
bullet_avail	game.S	/^	bullet_avail = bullet;$/;"	d
bullet_avail	game/src/effect.c	/^} *bullet_head, *bullet_avail, bullet[NR_BULLET];$/;"	v	typeref:struct:Bullet
bullet_head	game.S	/^		bullet_head = bullet_p->next;$/;"	d
bullet_head	game.S	/^		bullet_head = temp;$/;"	d
bullet_head	game.S	/^	bullet_head = NULL;$/;"	d
bullet_head	game/src/effect.c	/^} *bullet_head, *bullet_avail, bullet[NR_BULLET];$/;"	v	typeref:struct:Bullet
bullet_temp	game.S	/^		bullet_temp = bullet_temp->next;$/;"	d
c	game.S	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	kernel.S	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c0100000	kernel.S	/^c0100000 <abort>:$/;"	l
c0100000	kernel.S	/^c0100000:	55                   	push   %ebp$/;"	l
c0100001	kernel.S	/^c0100001:	89 e5                	mov    %esp,%ebp$/;"	l
c0100003	kernel.S	/^c0100003:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100006	kernel.S	/^c0100006:	fa                   	cli    $/;"	l
c0100007	kernel.S	/^c0100007:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010000a	kernel.S	/^c010000a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010000d	kernel.S	/^c010000d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100010	kernel.S	/^c0100010:	68 00 2b 10 c0       	push   $0xc0102b00$/;"	l
c0100015	kernel.S	/^c0100015:	e8 05 00 00 00       	call   c010001f <printk>$/;"	l
c010001a	kernel.S	/^c010001a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010001d	kernel.S	/^c010001d:	eb fe                	jmp    c010001d <abort+0x1d>$/;"	l
c010001f	kernel.S	/^c010001f <printk>:$/;"	l
c010001f	kernel.S	/^c010001f:	55                   	push   %ebp$/;"	l
c0100020	kernel.S	/^c0100020:	89 e5                	mov    %esp,%ebp$/;"	l
c0100022	kernel.S	/^c0100022:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100025	kernel.S	/^c0100025:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c0100028	kernel.S	/^c0100028:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010002b	kernel.S	/^c010002b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010002e	kernel.S	/^c010002e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100031	kernel.S	/^c0100031:	50                   	push   %eax$/;"	l
c0100032	kernel.S	/^c0100032:	68 00 01 00 00       	push   $0x100$/;"	l
c0100037	kernel.S	/^c0100037:	68 00 50 26 c0       	push   $0xc0265000$/;"	l
c010003c	kernel.S	/^c010003c:	e8 9a 27 00 00       	call   c01027db <vsnprintf>$/;"	l
c0100041	kernel.S	/^c0100041:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100044	kernel.S	/^c0100044:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100047	kernel.S	/^c0100047:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010004e	kernel.S	/^c010004e:	eb 1e                	jmp    c010006e <printk+0x4f>$/;"	l
c0100050	kernel.S	/^c0100050:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100053	kernel.S	/^c0100053:	05 00 50 26 c0       	add    $0xc0265000,%eax$/;"	l
c0100058	kernel.S	/^c0100058:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010005b	kernel.S	/^c010005b:	0f be c0             	movsbl %al,%eax$/;"	l
c010005e	kernel.S	/^c010005e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100061	kernel.S	/^c0100061:	50                   	push   %eax$/;"	l
c0100062	kernel.S	/^c0100062:	e8 c4 00 00 00       	call   c010012b <serial_printc>$/;"	l
c0100067	kernel.S	/^c0100067:	83 c4 10             	add    $0x10,%esp$/;"	l
c010006a	kernel.S	/^c010006a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010006e	kernel.S	/^c010006e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100071	kernel.S	/^c0100071:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100074	kernel.S	/^c0100074:	7c da                	jl     c0100050 <printk+0x31>$/;"	l
c0100076	kernel.S	/^c0100076:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100079	kernel.S	/^c0100079:	c9                   	leave  $/;"	l
c010007a	kernel.S	/^c010007a:	c3                   	ret    $/;"	l
c010007b	kernel.S	/^c010007b <init_serial>:$/;"	l
c010007b	kernel.S	/^c010007b:	55                   	push   %ebp$/;"	l
c010007c	kernel.S	/^c010007c:	89 e5                	mov    %esp,%ebp$/;"	l
c010007e	kernel.S	/^c010007e:	83 ec 30             	sub    $0x30,%esp$/;"	l
c0100081	kernel.S	/^c0100081:	c7 45 fc f9 03 00 00 	movl   $0x3f9,-0x4(%ebp)$/;"	l
c0100088	kernel.S	/^c0100088:	c6 45 dd 00          	movb   $0x0,-0x23(%ebp)$/;"	l
c010008c	kernel.S	/^c010008c:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0100090	kernel.S	/^c0100090:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100093	kernel.S	/^c0100093:	ee                   	out    %al,(%dx)$/;"	l
c0100094	kernel.S	/^c0100094:	c7 45 f8 fb 03 00 00 	movl   $0x3fb,-0x8(%ebp)$/;"	l
c010009b	kernel.S	/^c010009b:	c6 45 de 80          	movb   $0x80,-0x22(%ebp)$/;"	l
c010009f	kernel.S	/^c010009f:	0f b6 45 de          	movzbl -0x22(%ebp),%eax$/;"	l
c01000a3	kernel.S	/^c01000a3:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c01000a6	kernel.S	/^c01000a6:	ee                   	out    %al,(%dx)$/;"	l
c01000a7	kernel.S	/^c01000a7:	c7 45 f4 f8 03 00 00 	movl   $0x3f8,-0xc(%ebp)$/;"	l
c01000ae	kernel.S	/^c01000ae:	c6 45 df 03          	movb   $0x3,-0x21(%ebp)$/;"	l
c01000b2	kernel.S	/^c01000b2:	0f b6 45 df          	movzbl -0x21(%ebp),%eax$/;"	l
c01000b6	kernel.S	/^c01000b6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01000b9	kernel.S	/^c01000b9:	ee                   	out    %al,(%dx)$/;"	l
c01000ba	kernel.S	/^c01000ba:	c7 45 f0 f9 03 00 00 	movl   $0x3f9,-0x10(%ebp)$/;"	l
c01000c1	kernel.S	/^c01000c1:	c6 45 e0 00          	movb   $0x0,-0x20(%ebp)$/;"	l
c01000c5	kernel.S	/^c01000c5:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax$/;"	l
c01000c9	kernel.S	/^c01000c9:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01000cc	kernel.S	/^c01000cc:	ee                   	out    %al,(%dx)$/;"	l
c01000cd	kernel.S	/^c01000cd:	c7 45 ec fb 03 00 00 	movl   $0x3fb,-0x14(%ebp)$/;"	l
c01000d4	kernel.S	/^c01000d4:	c6 45 e1 03          	movb   $0x3,-0x1f(%ebp)$/;"	l
c01000d8	kernel.S	/^c01000d8:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01000dc	kernel.S	/^c01000dc:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01000df	kernel.S	/^c01000df:	ee                   	out    %al,(%dx)$/;"	l
c01000e0	kernel.S	/^c01000e0:	c7 45 e8 fa 03 00 00 	movl   $0x3fa,-0x18(%ebp)$/;"	l
c01000e7	kernel.S	/^c01000e7:	c6 45 e2 c7          	movb   $0xc7,-0x1e(%ebp)$/;"	l
c01000eb	kernel.S	/^c01000eb:	0f b6 45 e2          	movzbl -0x1e(%ebp),%eax$/;"	l
c01000ef	kernel.S	/^c01000ef:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01000f2	kernel.S	/^c01000f2:	ee                   	out    %al,(%dx)$/;"	l
c01000f3	kernel.S	/^c01000f3:	c7 45 e4 fc 03 00 00 	movl   $0x3fc,-0x1c(%ebp)$/;"	l
c01000fa	kernel.S	/^c01000fa:	c6 45 e3 0b          	movb   $0xb,-0x1d(%ebp)$/;"	l
c01000fe	kernel.S	/^c01000fe:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
c0100102	kernel.S	/^c0100102:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100105	kernel.S	/^c0100105:	ee                   	out    %al,(%dx)$/;"	l
c0100106	kernel.S	/^c0100106:	90                   	nop$/;"	l
c0100107	kernel.S	/^c0100107:	c9                   	leave  $/;"	l
c0100108	kernel.S	/^c0100108:	c3                   	ret    $/;"	l
c0100109	kernel.S	/^c0100109 <is_serial_idle>:$/;"	l
c0100109	kernel.S	/^c0100109:	55                   	push   %ebp$/;"	l
c010010a	kernel.S	/^c010010a:	89 e5                	mov    %esp,%ebp$/;"	l
c010010c	kernel.S	/^c010010c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010010f	kernel.S	/^c010010f:	c7 45 fc fd 03 00 00 	movl   $0x3fd,-0x4(%ebp)$/;"	l
c0100116	kernel.S	/^c0100116:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100119	kernel.S	/^c0100119:	89 c2                	mov    %eax,%edx$/;"	l
c010011b	kernel.S	/^c010011b:	ec                   	in     (%dx),%al$/;"	l
c010011c	kernel.S	/^c010011c:	88 45 fb             	mov    %al,-0x5(%ebp)$/;"	l
c010011f	kernel.S	/^c010011f:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax$/;"	l
c0100123	kernel.S	/^c0100123:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100126	kernel.S	/^c0100126:	83 e0 20             	and    $0x20,%eax$/;"	l
c0100129	kernel.S	/^c0100129:	c9                   	leave  $/;"	l
c010012a	kernel.S	/^c010012a:	c3                   	ret    $/;"	l
c010012b	kernel.S	/^c010012b <serial_printc>:$/;"	l
c010012b	kernel.S	/^c010012b:	55                   	push   %ebp$/;"	l
c010012c	kernel.S	/^c010012c:	89 e5                	mov    %esp,%ebp$/;"	l
c010012e	kernel.S	/^c010012e:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0100131	kernel.S	/^c0100131:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100134	kernel.S	/^c0100134:	88 45 ec             	mov    %al,-0x14(%ebp)$/;"	l
c0100137	kernel.S	/^c0100137:	90                   	nop$/;"	l
c0100138	kernel.S	/^c0100138:	e8 cc ff ff ff       	call   c0100109 <is_serial_idle>$/;"	l
c010013d	kernel.S	/^c010013d:	85 c0                	test   %eax,%eax$/;"	l
c010013f	kernel.S	/^c010013f:	74 f7                	je     c0100138 <serial_printc+0xd>$/;"	l
c0100141	kernel.S	/^c0100141:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax$/;"	l
c0100145	kernel.S	/^c0100145:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100148	kernel.S	/^c0100148:	c7 45 fc f8 03 00 00 	movl   $0x3f8,-0x4(%ebp)$/;"	l
c010014f	kernel.S	/^c010014f:	88 45 fb             	mov    %al,-0x5(%ebp)$/;"	l
c0100152	kernel.S	/^c0100152:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax$/;"	l
c0100156	kernel.S	/^c0100156:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100159	kernel.S	/^c0100159:	ee                   	out    %al,(%dx)$/;"	l
c010015a	kernel.S	/^c010015a:	90                   	nop$/;"	l
c010015b	kernel.S	/^c010015b:	c9                   	leave  $/;"	l
c010015c	kernel.S	/^c010015c:	c3                   	ret    $/;"	l
c010015d	kernel.S	/^c010015d <serial_output_test>:$/;"	l
c010015d	kernel.S	/^c010015d:	55                   	push   %ebp$/;"	l
c010015e	kernel.S	/^c010015e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100160	kernel.S	/^c0100160:	83 ec 30             	sub    $0x30,%esp$/;"	l
c0100163	kernel.S	/^c0100163:	c7 45 fc f8 03 00 00 	movl   $0x3f8,-0x4(%ebp)$/;"	l
c010016a	kernel.S	/^c010016a:	c6 45 dd 41          	movb   $0x41,-0x23(%ebp)$/;"	l
c010016e	kernel.S	/^c010016e:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0100172	kernel.S	/^c0100172:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100175	kernel.S	/^c0100175:	ee                   	out    %al,(%dx)$/;"	l
c0100176	kernel.S	/^c0100176:	c7 45 f8 f8 03 00 00 	movl   $0x3f8,-0x8(%ebp)$/;"	l
c010017d	kernel.S	/^c010017d:	c6 45 de 4e          	movb   $0x4e,-0x22(%ebp)$/;"	l
c0100181	kernel.S	/^c0100181:	0f b6 45 de          	movzbl -0x22(%ebp),%eax$/;"	l
c0100185	kernel.S	/^c0100185:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c0100188	kernel.S	/^c0100188:	ee                   	out    %al,(%dx)$/;"	l
c0100189	kernel.S	/^c0100189:	c7 45 f4 f8 03 00 00 	movl   $0x3f8,-0xc(%ebp)$/;"	l
c0100190	kernel.S	/^c0100190:	c6 45 df 44          	movb   $0x44,-0x21(%ebp)$/;"	l
c0100194	kernel.S	/^c0100194:	0f b6 45 df          	movzbl -0x21(%ebp),%eax$/;"	l
c0100198	kernel.S	/^c0100198:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010019b	kernel.S	/^c010019b:	ee                   	out    %al,(%dx)$/;"	l
c010019c	kernel.S	/^c010019c:	c7 45 f0 f8 03 00 00 	movl   $0x3f8,-0x10(%ebp)$/;"	l
c01001a3	kernel.S	/^c01001a3:	c6 45 e0 53          	movb   $0x53,-0x20(%ebp)$/;"	l
c01001a7	kernel.S	/^c01001a7:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax$/;"	l
c01001ab	kernel.S	/^c01001ab:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01001ae	kernel.S	/^c01001ae:	ee                   	out    %al,(%dx)$/;"	l
c01001af	kernel.S	/^c01001af:	c7 45 ec f8 03 00 00 	movl   $0x3f8,-0x14(%ebp)$/;"	l
c01001b6	kernel.S	/^c01001b6:	c6 45 e1 4f          	movb   $0x4f,-0x1f(%ebp)$/;"	l
c01001ba	kernel.S	/^c01001ba:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01001be	kernel.S	/^c01001be:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01001c1	kernel.S	/^c01001c1:	ee                   	out    %al,(%dx)$/;"	l
c01001c2	kernel.S	/^c01001c2:	c7 45 e8 f8 03 00 00 	movl   $0x3f8,-0x18(%ebp)$/;"	l
c01001c9	kernel.S	/^c01001c9:	c6 45 e2 52          	movb   $0x52,-0x1e(%ebp)$/;"	l
c01001cd	kernel.S	/^c01001cd:	0f b6 45 e2          	movzbl -0x1e(%ebp),%eax$/;"	l
c01001d1	kernel.S	/^c01001d1:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01001d4	kernel.S	/^c01001d4:	ee                   	out    %al,(%dx)$/;"	l
c01001d5	kernel.S	/^c01001d5:	c7 45 e4 f8 03 00 00 	movl   $0x3f8,-0x1c(%ebp)$/;"	l
c01001dc	kernel.S	/^c01001dc:	c6 45 e3 41          	movb   $0x41,-0x1d(%ebp)$/;"	l
c01001e0	kernel.S	/^c01001e0:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eax$/;"	l
c01001e4	kernel.S	/^c01001e4:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01001e7	kernel.S	/^c01001e7:	ee                   	out    %al,(%dx)$/;"	l
c01001e8	kernel.S	/^c01001e8:	90                   	nop$/;"	l
c01001e9	kernel.S	/^c01001e9:	c9                   	leave  $/;"	l
c01001ea	kernel.S	/^c01001ea:	c3                   	ret    $/;"	l
c01001eb	kernel.S	/^c01001eb <do_syscall>:$/;"	l
c01001eb	kernel.S	/^c01001eb:	55                   	push   %ebp$/;"	l
c01001ec	kernel.S	/^c01001ec:	89 e5                	mov    %esp,%ebp$/;"	l
c01001ee	kernel.S	/^c01001ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01001f1	kernel.S	/^c01001f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01001f4	kernel.S	/^c01001f4:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01001f7	kernel.S	/^c01001f7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01001fa	kernel.S	/^c01001fa:	74 3f                	je     c010023b <do_syscall+0x50>$/;"	l
c01001fc	kernel.S	/^c01001fc:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01001ff	kernel.S	/^c01001ff:	72 0c                	jb     c010020d <do_syscall+0x22>$/;"	l
c0100201	kernel.S	/^c0100201:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100204	kernel.S	/^c0100204:	74 43                	je     c0100249 <do_syscall+0x5e>$/;"	l
c0100206	kernel.S	/^c0100206:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0100209	kernel.S	/^c0100209:	74 4d                	je     c0100258 <do_syscall+0x6d>$/;"	l
c010020b	kernel.S	/^c010020b:	eb 67                	jmp    c0100274 <do_syscall+0x89>$/;"	l
c010020d	kernel.S	/^c010020d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100210	kernel.S	/^c0100210:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0100213	kernel.S	/^c0100213:	89 c1                	mov    %eax,%ecx$/;"	l
c0100215	kernel.S	/^c0100215:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100218	kernel.S	/^c0100218:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010021b	kernel.S	/^c010021b:	89 c2                	mov    %eax,%edx$/;"	l
c010021d	kernel.S	/^c010021d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100220	kernel.S	/^c0100220:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0100223	kernel.S	/^c0100223:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100226	kernel.S	/^c0100226:	51                   	push   %ecx$/;"	l
c0100227	kernel.S	/^c0100227:	52                   	push   %edx$/;"	l
c0100228	kernel.S	/^c0100228:	50                   	push   %eax$/;"	l
c0100229	kernel.S	/^c0100229:	e8 5a 02 00 00       	call   c0100488 <fs_write>$/;"	l
c010022e	kernel.S	/^c010022e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100231	kernel.S	/^c0100231:	89 c2                	mov    %eax,%edx$/;"	l
c0100233	kernel.S	/^c0100233:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100236	kernel.S	/^c0100236:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0100239	kernel.S	/^c0100239:	eb 62                	jmp    c010029d <do_syscall+0xb2>$/;"	l
c010023b	kernel.S	/^c010023b:	8b 15 18 51 26 c0    	mov    0xc0265118,%edx$/;"	l
c0100241	kernel.S	/^c0100241:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100244	kernel.S	/^c0100244:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0100247	kernel.S	/^c0100247:	eb 54                	jmp    c010029d <do_syscall+0xb2>$/;"	l
c0100249	kernel.S	/^c0100249:	e8 4f 01 00 00       	call   c010039d <handle_keys>$/;"	l
c010024e	kernel.S	/^c010024e:	89 c2                	mov    %eax,%edx$/;"	l
c0100250	kernel.S	/^c0100250:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100253	kernel.S	/^c0100253:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0100256	kernel.S	/^c0100256:	eb 45                	jmp    c010029d <do_syscall+0xb2>$/;"	l
c0100258	kernel.S	/^c0100258:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010025b	kernel.S	/^c010025b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010025e	kernel.S	/^c010025e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100261	kernel.S	/^c0100261:	50                   	push   %eax$/;"	l
c0100262	kernel.S	/^c0100262:	e8 54 00 00 00       	call   c01002bb <load_vmem>$/;"	l
c0100267	kernel.S	/^c0100267:	83 c4 10             	add    $0x10,%esp$/;"	l
c010026a	kernel.S	/^c010026a:	89 c2                	mov    %eax,%edx$/;"	l
c010026c	kernel.S	/^c010026c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010026f	kernel.S	/^c010026f:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0100272	kernel.S	/^c0100272:	eb 29                	jmp    c010029d <do_syscall+0xb2>$/;"	l
c0100274	kernel.S	/^c0100274:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100277	kernel.S	/^c0100277:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010027a	kernel.S	/^c010027a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010027d	kernel.S	/^c010027d:	50                   	push   %eax$/;"	l
c010027e	kernel.S	/^c010027e:	68 10 2b 10 c0       	push   $0xc0102b10$/;"	l
c0100283	kernel.S	/^c0100283:	e8 97 fd ff ff       	call   c010001f <printk>$/;"	l
c0100288	kernel.S	/^c0100288:	83 c4 10             	add    $0x10,%esp$/;"	l
c010028b	kernel.S	/^c010028b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010028e	kernel.S	/^c010028e:	6a 11                	push   $0x11$/;"	l
c0100290	kernel.S	/^c0100290:	68 2f 2b 10 c0       	push   $0xc0102b2f$/;"	l
c0100295	kernel.S	/^c0100295:	e8 66 fd ff ff       	call   c0100000 <abort>$/;"	l
c010029a	kernel.S	/^c010029a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010029d	kernel.S	/^c010029d:	90                   	nop$/;"	l
c010029e	kernel.S	/^c010029e:	c9                   	leave  $/;"	l
c010029f	kernel.S	/^c010029f:	c3                   	ret    $/;"	l
c01002a0	kernel.S	/^c01002a0 <init_vmem_addr>:$/;"	l
c01002a0	kernel.S	/^c01002a0:	55                   	push   %ebp$/;"	l
c01002a1	kernel.S	/^c01002a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01002a3	kernel.S	/^c01002a3:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01002a6	kernel.S	/^c01002a6:	c7 45 fc 00 7e 00 00 	movl   $0x7e00,-0x4(%ebp)$/;"	l
c01002ad	kernel.S	/^c01002ad:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01002b0	kernel.S	/^c01002b0:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01002b3	kernel.S	/^c01002b3:	a3 4c 91 2e c0       	mov    %eax,0xc02e914c$/;"	l
c01002b8	kernel.S	/^c01002b8:	90                   	nop$/;"	l
c01002b9	kernel.S	/^c01002b9:	c9                   	leave  $/;"	l
c01002ba	kernel.S	/^c01002ba:	c3                   	ret    $/;"	l
c01002bb	kernel.S	/^c01002bb <load_vmem>:$/;"	l
c01002bb	kernel.S	/^c01002bb:	55                   	push   %ebp$/;"	l
c01002bc	kernel.S	/^c01002bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01002be	kernel.S	/^c01002be:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002c1	kernel.S	/^c01002c1:	a1 4c 91 2e c0       	mov    0xc02e914c,%eax$/;"	l
c01002c6	kernel.S	/^c01002c6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01002c9	kernel.S	/^c01002c9:	68 00 f9 15 00       	push   $0x15f900$/;"	l
c01002ce	kernel.S	/^c01002ce:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01002d1	kernel.S	/^c01002d1:	50                   	push   %eax$/;"	l
c01002d2	kernel.S	/^c01002d2:	e8 b3 1d 00 00       	call   c010208a <memcpy>$/;"	l
c01002d7	kernel.S	/^c01002d7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002da	kernel.S	/^c01002da:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01002df	kernel.S	/^c01002df:	c9                   	leave  $/;"	l
c01002e0	kernel.S	/^c01002e0:	c3                   	ret    $/;"	l
c01002e1	kernel.S	/^c01002e1 <keyboard_event>:$/;"	l
c01002e1	kernel.S	/^c01002e1:	55                   	push   %ebp$/;"	l
c01002e2	kernel.S	/^c01002e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01002e4	kernel.S	/^c01002e4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01002e7	kernel.S	/^c01002e7:	c7 45 ec 60 00 00 00 	movl   $0x60,-0x14(%ebp)$/;"	l
c01002ee	kernel.S	/^c01002ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01002f1	kernel.S	/^c01002f1:	89 c2                	mov    %eax,%edx$/;"	l
c01002f3	kernel.S	/^c01002f3:	ec                   	in     (%dx),%al$/;"	l
c01002f4	kernel.S	/^c01002f4:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c01002f7	kernel.S	/^c01002f7:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c01002fb	kernel.S	/^c01002fb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01002fe	kernel.S	/^c01002fe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100301	kernel.S	/^c0100301:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100304	kernel.S	/^c0100304:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100307	kernel.S	/^c0100307:	68 78 24 26 c0       	push   $0xc0262478$/;"	l
c010030c	kernel.S	/^c010030c:	e8 0e fd ff ff       	call   c010001f <printk>$/;"	l
c0100311	kernel.S	/^c0100311:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100314	kernel.S	/^c0100314:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010031b	kernel.S	/^c010031b:	eb 77                	jmp    c0100394 <keyboard_event+0xb3>$/;"	l
c010031d	kernel.S	/^c010031d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100320	kernel.S	/^c0100320:	8b 04 85 60 24 26 c0 	mov    -0x3fd9dba0(,%eax,4),%eax$/;"	l
c0100327	kernel.S	/^c0100327:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010032a	kernel.S	/^c010032a:	75 42                	jne    c010036e <keyboard_event+0x8d>$/;"	l
c010032c	kernel.S	/^c010032c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010032f	kernel.S	/^c010032f:	8b 04 85 00 51 26 c0 	mov    -0x3fd9af00(,%eax,4),%eax$/;"	l
c0100336	kernel.S	/^c0100336:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0100339	kernel.S	/^c0100339:	74 20                	je     c010035b <keyboard_event+0x7a>$/;"	l
c010033b	kernel.S	/^c010033b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010033e	kernel.S	/^c010033e:	7f 06                	jg     c0100346 <keyboard_event+0x65>$/;"	l
c0100340	kernel.S	/^c0100340:	85 c0                	test   %eax,%eax$/;"	l
c0100342	kernel.S	/^c0100342:	74 07                	je     c010034b <keyboard_event+0x6a>$/;"	l
c0100344	kernel.S	/^c0100344:	eb 25                	jmp    c010036b <keyboard_event+0x8a>$/;"	l
c0100346	kernel.S	/^c0100346:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0100349	kernel.S	/^c0100349:	7f 20                	jg     c010036b <keyboard_event+0x8a>$/;"	l
c010034b	kernel.S	/^c010034b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010034e	kernel.S	/^c010034e:	c7 04 85 00 51 26 c0 	movl   $0x3,-0x3fd9af00(,%eax,4)$/;"	l
c0100355	kernel.S	/^c0100355:	03 00 00 00 $/;"	l
c0100359	kernel.S	/^c0100359:	eb 11                	jmp    c010036c <keyboard_event+0x8b>$/;"	l
c010035b	kernel.S	/^c010035b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010035e	kernel.S	/^c010035e:	c7 04 85 00 51 26 c0 	movl   $0x1,-0x3fd9af00(,%eax,4)$/;"	l
c0100365	kernel.S	/^c0100365:	01 00 00 00 $/;"	l
c0100369	kernel.S	/^c0100369:	eb 01                	jmp    c010036c <keyboard_event+0x8b>$/;"	l
c010036b	kernel.S	/^c010036b:	90                   	nop$/;"	l
c010036c	kernel.S	/^c010036c:	eb 2c                	jmp    c010039a <keyboard_event+0xb9>$/;"	l
c010036e	kernel.S	/^c010036e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100371	kernel.S	/^c0100371:	8b 04 85 60 24 26 c0 	mov    -0x3fd9dba0(,%eax,4),%eax$/;"	l
c0100378	kernel.S	/^c0100378:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
c010037b	kernel.S	/^c010037b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010037e	kernel.S	/^c010037e:	75 10                	jne    c0100390 <keyboard_event+0xaf>$/;"	l
c0100380	kernel.S	/^c0100380:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100383	kernel.S	/^c0100383:	c7 04 85 00 51 26 c0 	movl   $0x2,-0x3fd9af00(,%eax,4)$/;"	l
c010038a	kernel.S	/^c010038a:	02 00 00 00 $/;"	l
c010038e	kernel.S	/^c010038e:	eb 0a                	jmp    c010039a <keyboard_event+0xb9>$/;"	l
c0100390	kernel.S	/^c0100390:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100394	kernel.S	/^c0100394:	83 7d f4 05          	cmpl   $0x5,-0xc(%ebp)$/;"	l
c0100398	kernel.S	/^c0100398:	7e 83                	jle    c010031d <keyboard_event+0x3c>$/;"	l
c010039a	kernel.S	/^c010039a:	90                   	nop$/;"	l
c010039b	kernel.S	/^c010039b:	c9                   	leave  $/;"	l
c010039c	kernel.S	/^c010039c:	c3                   	ret    $/;"	l
c010039d	kernel.S	/^c010039d <handle_keys>:$/;"	l
c010039d	kernel.S	/^c010039d:	55                   	push   %ebp$/;"	l
c010039e	kernel.S	/^c010039e:	89 e5                	mov    %esp,%ebp$/;"	l
c01003a0	kernel.S	/^c01003a0:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01003a3	kernel.S	/^c01003a3:	fa                   	cli    $/;"	l
c01003a4	kernel.S	/^c01003a4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01003ab	kernel.S	/^c01003ab:	eb 5b                	jmp    c0100408 <handle_keys+0x6b>$/;"	l
c01003ad	kernel.S	/^c01003ad:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01003b0	kernel.S	/^c01003b0:	8b 04 85 00 51 26 c0 	mov    -0x3fd9af00(,%eax,4),%eax$/;"	l
c01003b7	kernel.S	/^c01003b7:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01003ba	kernel.S	/^c01003ba:	75 1b                	jne    c01003d7 <handle_keys+0x3a>$/;"	l
c01003bc	kernel.S	/^c01003bc:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01003bf	kernel.S	/^c01003bf:	c7 04 85 00 51 26 c0 	movl   $0x1,-0x3fd9af00(,%eax,4)$/;"	l
c01003c6	kernel.S	/^c01003c6:	01 00 00 00 $/;"	l
c01003ca	kernel.S	/^c01003ca:	fb                   	sti    $/;"	l
c01003cb	kernel.S	/^c01003cb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01003ce	kernel.S	/^c01003ce:	8b 04 85 60 24 26 c0 	mov    -0x3fd9dba0(,%eax,4),%eax$/;"	l
c01003d5	kernel.S	/^c01003d5:	eb 3d                	jmp    c0100414 <handle_keys+0x77>$/;"	l
c01003d7	kernel.S	/^c01003d7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01003da	kernel.S	/^c01003da:	8b 04 85 00 51 26 c0 	mov    -0x3fd9af00(,%eax,4),%eax$/;"	l
c01003e1	kernel.S	/^c01003e1:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01003e4	kernel.S	/^c01003e4:	75 1e                	jne    c0100404 <handle_keys+0x67>$/;"	l
c01003e6	kernel.S	/^c01003e6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01003e9	kernel.S	/^c01003e9:	c7 04 85 00 51 26 c0 	movl   $0x0,-0x3fd9af00(,%eax,4)$/;"	l
c01003f0	kernel.S	/^c01003f0:	00 00 00 00 $/;"	l
c01003f4	kernel.S	/^c01003f4:	fb                   	sti    $/;"	l
c01003f5	kernel.S	/^c01003f5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01003f8	kernel.S	/^c01003f8:	8b 04 85 60 24 26 c0 	mov    -0x3fd9dba0(,%eax,4),%eax$/;"	l
c01003ff	kernel.S	/^c01003ff:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
c0100402	kernel.S	/^c0100402:	eb 10                	jmp    c0100414 <handle_keys+0x77>$/;"	l
c0100404	kernel.S	/^c0100404:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0100408	kernel.S	/^c0100408:	83 7d fc 05          	cmpl   $0x5,-0x4(%ebp)$/;"	l
c010040c	kernel.S	/^c010040c:	7e 9f                	jle    c01003ad <handle_keys+0x10>$/;"	l
c010040e	kernel.S	/^c010040e:	fb                   	sti    $/;"	l
c010040f	kernel.S	/^c010040f:	b8 ff 00 00 00       	mov    $0xff,%eax$/;"	l
c0100414	kernel.S	/^c0100414:	c9                   	leave  $/;"	l
c0100415	kernel.S	/^c0100415:	c3                   	ret    $/;"	l
c0100416	kernel.S	/^c0100416 <init_timer>:$/;"	l
c0100416	kernel.S	/^c0100416:	55                   	push   %ebp$/;"	l
c0100417	kernel.S	/^c0100417:	89 e5                	mov    %esp,%ebp$/;"	l
c0100419	kernel.S	/^c0100419:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010041c	kernel.S	/^c010041c:	c7 45 fc a9 04 00 00 	movl   $0x4a9,-0x4(%ebp)$/;"	l
c0100423	kernel.S	/^c0100423:	0f b6 05 00 40 26 c0 	movzbl 0xc0264000,%eax$/;"	l
c010042a	kernel.S	/^c010042a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010042d	kernel.S	/^c010042d:	c7 45 f8 43 00 00 00 	movl   $0x43,-0x8(%ebp)$/;"	l
c0100434	kernel.S	/^c0100434:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0100437	kernel.S	/^c0100437:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010043b	kernel.S	/^c010043b:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010043e	kernel.S	/^c010043e:	ee                   	out    %al,(%dx)$/;"	l
c010043f	kernel.S	/^c010043f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100442	kernel.S	/^c0100442:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100445	kernel.S	/^c0100445:	c7 45 f4 40 00 00 00 	movl   $0x40,-0xc(%ebp)$/;"	l
c010044c	kernel.S	/^c010044c:	88 45 ee             	mov    %al,-0x12(%ebp)$/;"	l
c010044f	kernel.S	/^c010044f:	0f b6 45 ee          	movzbl -0x12(%ebp),%eax$/;"	l
c0100453	kernel.S	/^c0100453:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100456	kernel.S	/^c0100456:	ee                   	out    %al,(%dx)$/;"	l
c0100457	kernel.S	/^c0100457:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010045a	kernel.S	/^c010045a:	c1 f8 08             	sar    $0x8,%eax$/;"	l
c010045d	kernel.S	/^c010045d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100460	kernel.S	/^c0100460:	c7 45 f0 40 00 00 00 	movl   $0x40,-0x10(%ebp)$/;"	l
c0100467	kernel.S	/^c0100467:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c010046a	kernel.S	/^c010046a:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c010046e	kernel.S	/^c010046e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100471	kernel.S	/^c0100471:	ee                   	out    %al,(%dx)$/;"	l
c0100472	kernel.S	/^c0100472:	90                   	nop$/;"	l
c0100473	kernel.S	/^c0100473:	c9                   	leave  $/;"	l
c0100474	kernel.S	/^c0100474:	c3                   	ret    $/;"	l
c0100475	kernel.S	/^c0100475 <timer_event>:$/;"	l
c0100475	kernel.S	/^c0100475:	55                   	push   %ebp$/;"	l
c0100476	kernel.S	/^c0100476:	89 e5                	mov    %esp,%ebp$/;"	l
c0100478	kernel.S	/^c0100478:	a1 18 51 26 c0       	mov    0xc0265118,%eax$/;"	l
c010047d	kernel.S	/^c010047d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100480	kernel.S	/^c0100480:	a3 18 51 26 c0       	mov    %eax,0xc0265118$/;"	l
c0100485	kernel.S	/^c0100485:	90                   	nop$/;"	l
c0100486	kernel.S	/^c0100486:	5d                   	pop    %ebp$/;"	l
c0100487	kernel.S	/^c0100487:	c3                   	ret    $/;"	l
c0100488	kernel.S	/^c0100488 <fs_write>:$/;"	l
c0100488	kernel.S	/^c0100488:	55                   	push   %ebp$/;"	l
c0100489	kernel.S	/^c0100489:	89 e5                	mov    %esp,%ebp$/;"	l
c010048b	kernel.S	/^c010048b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010048e	kernel.S	/^c010048e:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c0100492	kernel.S	/^c0100492:	74 12                	je     c01004a6 <fs_write+0x1e>$/;"	l
c0100494	kernel.S	/^c0100494:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100497	kernel.S	/^c0100497:	6a 06                	push   $0x6$/;"	l
c0100499	kernel.S	/^c0100499:	68 89 24 26 c0       	push   $0xc0262489$/;"	l
c010049e	kernel.S	/^c010049e:	e8 5d fb ff ff       	call   c0100000 <abort>$/;"	l
c01004a3	kernel.S	/^c01004a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01004a6	kernel.S	/^c01004a6:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)$/;"	l
c01004ad	kernel.S	/^c01004ad:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c01004b1	kernel.S	/^c01004b1:	75 37                	jne    c01004ea <fs_write+0x62>$/;"	l
c01004b3	kernel.S	/^c01004b3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01004b6	kernel.S	/^c01004b6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01004b9	kernel.S	/^c01004b9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01004c0	kernel.S	/^c01004c0:	eb 1e                	jmp    c01004e0 <fs_write+0x58>$/;"	l
c01004c2	kernel.S	/^c01004c2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01004c5	kernel.S	/^c01004c5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004c8	kernel.S	/^c01004c8:	01 d0                	add    %edx,%eax$/;"	l
c01004ca	kernel.S	/^c01004ca:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01004cd	kernel.S	/^c01004cd:	0f be c0             	movsbl %al,%eax$/;"	l
c01004d0	kernel.S	/^c01004d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01004d3	kernel.S	/^c01004d3:	50                   	push   %eax$/;"	l
c01004d4	kernel.S	/^c01004d4:	e8 52 fc ff ff       	call   c010012b <serial_printc>$/;"	l
c01004d9	kernel.S	/^c01004d9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01004dc	kernel.S	/^c01004dc:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c01004e0	kernel.S	/^c01004e0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004e3	kernel.S	/^c01004e3:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01004e6	kernel.S	/^c01004e6:	7c da                	jl     c01004c2 <fs_write+0x3a>$/;"	l
c01004e8	kernel.S	/^c01004e8:	eb 12                	jmp    c01004fc <fs_write+0x74>$/;"	l
c01004ea	kernel.S	/^c01004ea:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01004ed	kernel.S	/^c01004ed:	6a 10                	push   $0x10$/;"	l
c01004ef	kernel.S	/^c01004ef:	68 89 24 26 c0       	push   $0xc0262489$/;"	l
c01004f4	kernel.S	/^c01004f4:	e8 07 fb ff ff       	call   c0100000 <abort>$/;"	l
c01004f9	kernel.S	/^c01004f9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01004fc	kernel.S	/^c01004fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004ff	kernel.S	/^c01004ff:	c9                   	leave  $/;"	l
c0100500	kernel.S	/^c0100500:	c3                   	ret    $/;"	l
c0100501	kernel.S	/^c0100501 <init_pte_info>:$/;"	l
c0100501	kernel.S	/^c0100501:	55                   	push   %ebp$/;"	l
c0100502	kernel.S	/^c0100502:	89 e5                	mov    %esp,%ebp$/;"	l
c0100504	kernel.S	/^c0100504:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100507	kernel.S	/^c0100507:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010050e	kernel.S	/^c010050e:	e9 ad 00 00 00       	jmp    c01005c0 <init_pte_info+0xbf>$/;"	l
c0100513	kernel.S	/^c0100513:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100516	kernel.S	/^c0100516:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0100519	kernel.S	/^c0100519:	89 c1                	mov    %eax,%ecx$/;"	l
c010051b	kernel.S	/^c010051b:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010051e	kernel.S	/^c010051e:	89 d0                	mov    %edx,%eax$/;"	l
c0100520	kernel.S	/^c0100520:	01 c0                	add    %eax,%eax$/;"	l
c0100522	kernel.S	/^c0100522:	01 d0                	add    %edx,%eax$/;"	l
c0100524	kernel.S	/^c0100524:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100527	kernel.S	/^c0100527:	05 20 51 26 c0       	add    $0xc0265120,%eax$/;"	l
c010052c	kernel.S	/^c010052c:	89 08                	mov    %ecx,(%eax)$/;"	l
c010052e	kernel.S	/^c010052e:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0100532	kernel.S	/^c0100532:	7e 2a                	jle    c010055e <init_pte_info+0x5d>$/;"	l
c0100534	kernel.S	/^c0100534:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100537	kernel.S	/^c0100537:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010053a	kernel.S	/^c010053a:	89 d0                	mov    %edx,%eax$/;"	l
c010053c	kernel.S	/^c010053c:	01 c0                	add    %eax,%eax$/;"	l
c010053e	kernel.S	/^c010053e:	01 d0                	add    %edx,%eax$/;"	l
c0100540	kernel.S	/^c0100540:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100543	kernel.S	/^c0100543:	8d 88 20 51 26 c0    	lea    -0x3fd9aee0(%eax),%ecx$/;"	l
c0100549	kernel.S	/^c0100549:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010054c	kernel.S	/^c010054c:	89 d0                	mov    %edx,%eax$/;"	l
c010054e	kernel.S	/^c010054e:	01 c0                	add    %eax,%eax$/;"	l
c0100550	kernel.S	/^c0100550:	01 d0                	add    %edx,%eax$/;"	l
c0100552	kernel.S	/^c0100552:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100555	kernel.S	/^c0100555:	05 24 51 26 c0       	add    $0xc0265124,%eax$/;"	l
c010055a	kernel.S	/^c010055a:	89 08                	mov    %ecx,(%eax)$/;"	l
c010055c	kernel.S	/^c010055c:	eb 17                	jmp    c0100575 <init_pte_info+0x74>$/;"	l
c010055e	kernel.S	/^c010055e:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100561	kernel.S	/^c0100561:	89 d0                	mov    %edx,%eax$/;"	l
c0100563	kernel.S	/^c0100563:	01 c0                	add    %eax,%eax$/;"	l
c0100565	kernel.S	/^c0100565:	01 d0                	add    %edx,%eax$/;"	l
c0100567	kernel.S	/^c0100567:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010056a	kernel.S	/^c010056a:	05 24 51 26 c0       	add    $0xc0265124,%eax$/;"	l
c010056f	kernel.S	/^c010056f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0100575	kernel.S	/^c0100575:	83 7d fc 02          	cmpl   $0x2,-0x4(%ebp)$/;"	l
c0100579	kernel.S	/^c0100579:	7f 2a                	jg     c01005a5 <init_pte_info+0xa4>$/;"	l
c010057b	kernel.S	/^c010057b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010057e	kernel.S	/^c010057e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100581	kernel.S	/^c0100581:	89 d0                	mov    %edx,%eax$/;"	l
c0100583	kernel.S	/^c0100583:	01 c0                	add    %eax,%eax$/;"	l
c0100585	kernel.S	/^c0100585:	01 d0                	add    %edx,%eax$/;"	l
c0100587	kernel.S	/^c0100587:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010058a	kernel.S	/^c010058a:	8d 88 20 51 26 c0    	lea    -0x3fd9aee0(%eax),%ecx$/;"	l
c0100590	kernel.S	/^c0100590:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100593	kernel.S	/^c0100593:	89 d0                	mov    %edx,%eax$/;"	l
c0100595	kernel.S	/^c0100595:	01 c0                	add    %eax,%eax$/;"	l
c0100597	kernel.S	/^c0100597:	01 d0                	add    %edx,%eax$/;"	l
c0100599	kernel.S	/^c0100599:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010059c	kernel.S	/^c010059c:	05 28 51 26 c0       	add    $0xc0265128,%eax$/;"	l
c01005a1	kernel.S	/^c01005a1:	89 08                	mov    %ecx,(%eax)$/;"	l
c01005a3	kernel.S	/^c01005a3:	eb 17                	jmp    c01005bc <init_pte_info+0xbb>$/;"	l
c01005a5	kernel.S	/^c01005a5:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005a8	kernel.S	/^c01005a8:	89 d0                	mov    %edx,%eax$/;"	l
c01005aa	kernel.S	/^c01005aa:	01 c0                	add    %eax,%eax$/;"	l
c01005ac	kernel.S	/^c01005ac:	01 d0                	add    %edx,%eax$/;"	l
c01005ae	kernel.S	/^c01005ae:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01005b1	kernel.S	/^c01005b1:	05 28 51 26 c0       	add    $0xc0265128,%eax$/;"	l
c01005b6	kernel.S	/^c01005b6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01005bc	kernel.S	/^c01005bc:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01005c0	kernel.S	/^c01005c0:	83 7d fc 03          	cmpl   $0x3,-0x4(%ebp)$/;"	l
c01005c4	kernel.S	/^c01005c4:	0f 8e 49 ff ff ff    	jle    c0100513 <init_pte_info+0x12>$/;"	l
c01005ca	kernel.S	/^c01005ca:	c7 45 fc 04 00 00 00 	movl   $0x4,-0x4(%ebp)$/;"	l
c01005d1	kernel.S	/^c01005d1:	e9 ad 00 00 00       	jmp    c0100683 <init_pte_info+0x182>$/;"	l
c01005d6	kernel.S	/^c01005d6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01005d9	kernel.S	/^c01005d9:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c01005dc	kernel.S	/^c01005dc:	89 c1                	mov    %eax,%ecx$/;"	l
c01005de	kernel.S	/^c01005de:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005e1	kernel.S	/^c01005e1:	89 d0                	mov    %edx,%eax$/;"	l
c01005e3	kernel.S	/^c01005e3:	01 c0                	add    %eax,%eax$/;"	l
c01005e5	kernel.S	/^c01005e5:	01 d0                	add    %edx,%eax$/;"	l
c01005e7	kernel.S	/^c01005e7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01005ea	kernel.S	/^c01005ea:	05 20 51 26 c0       	add    $0xc0265120,%eax$/;"	l
c01005ef	kernel.S	/^c01005ef:	89 08                	mov    %ecx,(%eax)$/;"	l
c01005f1	kernel.S	/^c01005f1:	83 7d fc 04          	cmpl   $0x4,-0x4(%ebp)$/;"	l
c01005f5	kernel.S	/^c01005f5:	7e 2a                	jle    c0100621 <init_pte_info+0x120>$/;"	l
c01005f7	kernel.S	/^c01005f7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01005fa	kernel.S	/^c01005fa:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01005fd	kernel.S	/^c01005fd:	89 d0                	mov    %edx,%eax$/;"	l
c01005ff	kernel.S	/^c01005ff:	01 c0                	add    %eax,%eax$/;"	l
c0100601	kernel.S	/^c0100601:	01 d0                	add    %edx,%eax$/;"	l
c0100603	kernel.S	/^c0100603:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100606	kernel.S	/^c0100606:	8d 88 20 51 26 c0    	lea    -0x3fd9aee0(%eax),%ecx$/;"	l
c010060c	kernel.S	/^c010060c:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010060f	kernel.S	/^c010060f:	89 d0                	mov    %edx,%eax$/;"	l
c0100611	kernel.S	/^c0100611:	01 c0                	add    %eax,%eax$/;"	l
c0100613	kernel.S	/^c0100613:	01 d0                	add    %edx,%eax$/;"	l
c0100615	kernel.S	/^c0100615:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100618	kernel.S	/^c0100618:	05 24 51 26 c0       	add    $0xc0265124,%eax$/;"	l
c010061d	kernel.S	/^c010061d:	89 08                	mov    %ecx,(%eax)$/;"	l
c010061f	kernel.S	/^c010061f:	eb 17                	jmp    c0100638 <init_pte_info+0x137>$/;"	l
c0100621	kernel.S	/^c0100621:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100624	kernel.S	/^c0100624:	89 d0                	mov    %edx,%eax$/;"	l
c0100626	kernel.S	/^c0100626:	01 c0                	add    %eax,%eax$/;"	l
c0100628	kernel.S	/^c0100628:	01 d0                	add    %edx,%eax$/;"	l
c010062a	kernel.S	/^c010062a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010062d	kernel.S	/^c010062d:	05 24 51 26 c0       	add    $0xc0265124,%eax$/;"	l
c0100632	kernel.S	/^c0100632:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0100638	kernel.S	/^c0100638:	83 7d fc 1e          	cmpl   $0x1e,-0x4(%ebp)$/;"	l
c010063c	kernel.S	/^c010063c:	7f 2a                	jg     c0100668 <init_pte_info+0x167>$/;"	l
c010063e	kernel.S	/^c010063e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100641	kernel.S	/^c0100641:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100644	kernel.S	/^c0100644:	89 d0                	mov    %edx,%eax$/;"	l
c0100646	kernel.S	/^c0100646:	01 c0                	add    %eax,%eax$/;"	l
c0100648	kernel.S	/^c0100648:	01 d0                	add    %edx,%eax$/;"	l
c010064a	kernel.S	/^c010064a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010064d	kernel.S	/^c010064d:	8d 88 20 51 26 c0    	lea    -0x3fd9aee0(%eax),%ecx$/;"	l
c0100653	kernel.S	/^c0100653:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100656	kernel.S	/^c0100656:	89 d0                	mov    %edx,%eax$/;"	l
c0100658	kernel.S	/^c0100658:	01 c0                	add    %eax,%eax$/;"	l
c010065a	kernel.S	/^c010065a:	01 d0                	add    %edx,%eax$/;"	l
c010065c	kernel.S	/^c010065c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010065f	kernel.S	/^c010065f:	05 28 51 26 c0       	add    $0xc0265128,%eax$/;"	l
c0100664	kernel.S	/^c0100664:	89 08                	mov    %ecx,(%eax)$/;"	l
c0100666	kernel.S	/^c0100666:	eb 17                	jmp    c010067f <init_pte_info+0x17e>$/;"	l
c0100668	kernel.S	/^c0100668:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010066b	kernel.S	/^c010066b:	89 d0                	mov    %edx,%eax$/;"	l
c010066d	kernel.S	/^c010066d:	01 c0                	add    %eax,%eax$/;"	l
c010066f	kernel.S	/^c010066f:	01 d0                	add    %edx,%eax$/;"	l
c0100671	kernel.S	/^c0100671:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100674	kernel.S	/^c0100674:	05 28 51 26 c0       	add    $0xc0265128,%eax$/;"	l
c0100679	kernel.S	/^c0100679:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010067f	kernel.S	/^c010067f:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0100683	kernel.S	/^c0100683:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%ebp)$/;"	l
c0100687	kernel.S	/^c0100687:	0f 8e 49 ff ff ff    	jle    c01005d6 <init_pte_info+0xd5>$/;"	l
c010068d	kernel.S	/^c010068d:	c7 05 a0 52 26 c0 20 	movl   $0xc0265120,0xc02652a0$/;"	l
c0100694	kernel.S	/^c0100694:	51 26 c0 $/;"	l
c0100697	kernel.S	/^c0100697:	c7 05 a4 52 26 c0 50 	movl   $0xc0265150,0xc02652a4$/;"	l
c010069e	kernel.S	/^c010069e:	51 26 c0 $/;"	l
c01006a1	kernel.S	/^c01006a1:	90                   	nop$/;"	l
c01006a2	kernel.S	/^c01006a2:	c9                   	leave  $/;"	l
c01006a3	kernel.S	/^c01006a3:	c3                   	ret    $/;"	l
c01006a4	kernel.S	/^c01006a4 <get_pte>:$/;"	l
c01006a4	kernel.S	/^c01006a4:	55                   	push   %ebp$/;"	l
c01006a5	kernel.S	/^c01006a5:	89 e5                	mov    %esp,%ebp$/;"	l
c01006a7	kernel.S	/^c01006a7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01006aa	kernel.S	/^c01006aa:	a1 a4 52 26 c0       	mov    0xc02652a4,%eax$/;"	l
c01006af	kernel.S	/^c01006af:	85 c0                	test   %eax,%eax$/;"	l
c01006b1	kernel.S	/^c01006b1:	75 22                	jne    c01006d5 <get_pte+0x31>$/;"	l
c01006b3	kernel.S	/^c01006b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01006b6	kernel.S	/^c01006b6:	68 98 24 26 c0       	push   $0xc0262498$/;"	l
c01006bb	kernel.S	/^c01006bb:	e8 5f f9 ff ff       	call   c010001f <printk>$/;"	l
c01006c0	kernel.S	/^c01006c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01006c3	kernel.S	/^c01006c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01006c6	kernel.S	/^c01006c6:	6a 27                	push   $0x27$/;"	l
c01006c8	kernel.S	/^c01006c8:	68 ab 24 26 c0       	push   $0xc02624ab$/;"	l
c01006cd	kernel.S	/^c01006cd:	e8 2e f9 ff ff       	call   c0100000 <abort>$/;"	l
c01006d2	kernel.S	/^c01006d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01006d5	kernel.S	/^c01006d5:	a1 a4 52 26 c0       	mov    0xc02652a4,%eax$/;"	l
c01006da	kernel.S	/^c01006da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01006dd	kernel.S	/^c01006dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006e0	kernel.S	/^c01006e0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01006e3	kernel.S	/^c01006e3:	a3 a4 52 26 c0       	mov    %eax,0xc02652a4$/;"	l
c01006e8	kernel.S	/^c01006e8:	a1 a4 52 26 c0       	mov    0xc02652a4,%eax$/;"	l
c01006ed	kernel.S	/^c01006ed:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c01006f4	kernel.S	/^c01006f4:	a1 a0 52 26 c0       	mov    0xc02652a0,%eax$/;"	l
c01006f9	kernel.S	/^c01006f9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01006fc	kernel.S	/^c01006fc:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01006ff	kernel.S	/^c01006ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100702	kernel.S	/^c0100702:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0100709	kernel.S	/^c0100709:	8b 15 a0 52 26 c0    	mov    0xc02652a0,%edx$/;"	l
c010070f	kernel.S	/^c010070f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100712	kernel.S	/^c0100712:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0100715	kernel.S	/^c0100715:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100718	kernel.S	/^c0100718:	a3 a0 52 26 c0       	mov    %eax,0xc02652a0$/;"	l
c010071d	kernel.S	/^c010071d:	a1 a0 52 26 c0       	mov    0xc02652a0,%eax$/;"	l
c0100722	kernel.S	/^c0100722:	8b 00                	mov    (%eax),%eax$/;"	l
c0100724	kernel.S	/^c0100724:	c9                   	leave  $/;"	l
c0100725	kernel.S	/^c0100725:	c3                   	ret    $/;"	l
c0100726	kernel.S	/^c0100726 <free_pte>:$/;"	l
c0100726	kernel.S	/^c0100726:	55                   	push   %ebp$/;"	l
c0100727	kernel.S	/^c0100727:	89 e5                	mov    %esp,%ebp$/;"	l
c0100729	kernel.S	/^c0100729:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010072c	kernel.S	/^c010072c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100730	kernel.S	/^c0100730:	78 06                	js     c0100738 <free_pte+0x12>$/;"	l
c0100732	kernel.S	/^c0100732:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c0100736	kernel.S	/^c0100736:	7e 12                	jle    c010074a <free_pte+0x24>$/;"	l
c0100738	kernel.S	/^c0100738:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010073b	kernel.S	/^c010073b:	6a 34                	push   $0x34$/;"	l
c010073d	kernel.S	/^c010073d:	68 ab 24 26 c0       	push   $0xc02624ab$/;"	l
c0100742	kernel.S	/^c0100742:	e8 b9 f8 ff ff       	call   c0100000 <abort>$/;"	l
c0100747	kernel.S	/^c0100747:	83 c4 10             	add    $0x10,%esp$/;"	l
c010074a	kernel.S	/^c010074a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010074d	kernel.S	/^c010074d:	89 d0                	mov    %edx,%eax$/;"	l
c010074f	kernel.S	/^c010074f:	01 c0                	add    %eax,%eax$/;"	l
c0100751	kernel.S	/^c0100751:	01 d0                	add    %edx,%eax$/;"	l
c0100753	kernel.S	/^c0100753:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100756	kernel.S	/^c0100756:	05 20 51 26 c0       	add    $0xc0265120,%eax$/;"	l
c010075b	kernel.S	/^c010075b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010075e	kernel.S	/^c010075e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100761	kernel.S	/^c0100761:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0100764	kernel.S	/^c0100764:	85 c0                	test   %eax,%eax$/;"	l
c0100766	kernel.S	/^c0100766:	74 0f                	je     c0100777 <free_pte+0x51>$/;"	l
c0100768	kernel.S	/^c0100768:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010076b	kernel.S	/^c010076b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010076e	kernel.S	/^c010076e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100771	kernel.S	/^c0100771:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c0100774	kernel.S	/^c0100774:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0100777	kernel.S	/^c0100777:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010077a	kernel.S	/^c010077a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010077d	kernel.S	/^c010077d:	85 c0                	test   %eax,%eax$/;"	l
c010077f	kernel.S	/^c010077f:	74 0f                	je     c0100790 <free_pte+0x6a>$/;"	l
c0100781	kernel.S	/^c0100781:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100784	kernel.S	/^c0100784:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100787	kernel.S	/^c0100787:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010078a	kernel.S	/^c010078a:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c010078d	kernel.S	/^c010078d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0100790	kernel.S	/^c0100790:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100793	kernel.S	/^c0100793:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010079a	kernel.S	/^c010079a:	8b 15 a4 52 26 c0    	mov    0xc02652a4,%edx$/;"	l
c01007a0	kernel.S	/^c01007a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007a3	kernel.S	/^c01007a3:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01007a6	kernel.S	/^c01007a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007a9	kernel.S	/^c01007a9:	a3 a4 52 26 c0       	mov    %eax,0xc02652a4$/;"	l
c01007ae	kernel.S	/^c01007ae:	90                   	nop$/;"	l
c01007af	kernel.S	/^c01007af:	c9                   	leave  $/;"	l
c01007b0	kernel.S	/^c01007b0:	c3                   	ret    $/;"	l
c01007b1	kernel.S	/^c01007b1 <init_pcb>:$/;"	l
c01007b1	kernel.S	/^c01007b1:	55                   	push   %ebp$/;"	l
c01007b2	kernel.S	/^c01007b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01007b4	kernel.S	/^c01007b4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01007b7	kernel.S	/^c01007b7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01007be	kernel.S	/^c01007be:	e9 04 01 00 00       	jmp    c01008c7 <init_pcb+0x116>$/;"	l
c01007c3	kernel.S	/^c01007c3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01007c6	kernel.S	/^c01007c6:	89 d0                	mov    %edx,%eax$/;"	l
c01007c8	kernel.S	/^c01007c8:	01 c0                	add    %eax,%eax$/;"	l
c01007ca	kernel.S	/^c01007ca:	01 d0                	add    %edx,%eax$/;"	l
c01007cc	kernel.S	/^c01007cc:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c01007cf	kernel.S	/^c01007cf:	8d 90 00 60 26 c0    	lea    -0x3fd9a000(%eax),%edx$/;"	l
c01007d5	kernel.S	/^c01007d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007d8	kernel.S	/^c01007d8:	89 02                	mov    %eax,(%edx)$/;"	l
c01007da	kernel.S	/^c01007da:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01007dd	kernel.S	/^c01007dd:	89 d0                	mov    %edx,%eax$/;"	l
c01007df	kernel.S	/^c01007df:	01 c0                	add    %eax,%eax$/;"	l
c01007e1	kernel.S	/^c01007e1:	01 d0                	add    %edx,%eax$/;"	l
c01007e3	kernel.S	/^c01007e3:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c01007e6	kernel.S	/^c01007e6:	05 04 60 26 c0       	add    $0xc0266004,%eax$/;"	l
c01007eb	kernel.S	/^c01007eb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01007f1	kernel.S	/^c01007f1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01007f4	kernel.S	/^c01007f4:	89 d0                	mov    %edx,%eax$/;"	l
c01007f6	kernel.S	/^c01007f6:	01 c0                	add    %eax,%eax$/;"	l
c01007f8	kernel.S	/^c01007f8:	01 d0                	add    %edx,%eax$/;"	l
c01007fa	kernel.S	/^c01007fa:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c01007fd	kernel.S	/^c01007fd:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0100802	kernel.S	/^c0100802:	05 00 60 26 c0       	add    $0xc0266000,%eax$/;"	l
c0100807	kernel.S	/^c0100807:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010080c	kernel.S	/^c010080c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010080f	kernel.S	/^c010080f:	25 ff ff 0f 00       	and    $0xfffff,%eax$/;"	l
c0100814	kernel.S	/^c0100814:	89 c1                	mov    %eax,%ecx$/;"	l
c0100816	kernel.S	/^c0100816:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100819	kernel.S	/^c0100819:	89 d0                	mov    %edx,%eax$/;"	l
c010081b	kernel.S	/^c010081b:	01 c0                	add    %eax,%eax$/;"	l
c010081d	kernel.S	/^c010081d:	01 d0                	add    %edx,%eax$/;"	l
c010081f	kernel.S	/^c010081f:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c0100822	kernel.S	/^c0100822:	05 00 60 26 c0       	add    $0xc0266000,%eax$/;"	l
c0100827	kernel.S	/^c0100827:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
c010082a	kernel.S	/^c010082a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010082d	kernel.S	/^c010082d:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
c0100833	kernel.S	/^c0100833:	09 ca                	or     %ecx,%edx$/;"	l
c0100835	kernel.S	/^c0100835:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0100838	kernel.S	/^c0100838:	e8 0e 07 00 00       	call   c0100f4b <get_kpdir>$/;"	l
c010083d	kernel.S	/^c010083d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100840	kernel.S	/^c0100840:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100843	kernel.S	/^c0100843:	89 d0                	mov    %edx,%eax$/;"	l
c0100845	kernel.S	/^c0100845:	01 c0                	add    %eax,%eax$/;"	l
c0100847	kernel.S	/^c0100847:	01 d0                	add    %edx,%eax$/;"	l
c0100849	kernel.S	/^c0100849:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c010084c	kernel.S	/^c010084c:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0100851	kernel.S	/^c0100851:	05 00 60 26 c0       	add    $0xc0266000,%eax$/;"	l
c0100856	kernel.S	/^c0100856:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100859	kernel.S	/^c0100859:	68 00 10 00 00       	push   $0x1000$/;"	l
c010085e	kernel.S	/^c010085e:	6a 00                	push   $0x0$/;"	l
c0100860	kernel.S	/^c0100860:	50                   	push   %eax$/;"	l
c0100861	kernel.S	/^c0100861:	e8 dc 16 00 00       	call   c0101f42 <memset>$/;"	l
c0100866	kernel.S	/^c0100866:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100869	kernel.S	/^c0100869:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010086c	kernel.S	/^c010086c:	8d 88 00 0c 00 00    	lea    0xc00(%eax),%ecx$/;"	l
c0100872	kernel.S	/^c0100872:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100875	kernel.S	/^c0100875:	89 d0                	mov    %edx,%eax$/;"	l
c0100877	kernel.S	/^c0100877:	01 c0                	add    %eax,%eax$/;"	l
c0100879	kernel.S	/^c0100879:	01 d0                	add    %edx,%eax$/;"	l
c010087b	kernel.S	/^c010087b:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c010087e	kernel.S	/^c010087e:	05 00 1c 00 00       	add    $0x1c00,%eax$/;"	l
c0100883	kernel.S	/^c0100883:	05 00 60 26 c0       	add    $0xc0266000,%eax$/;"	l
c0100888	kernel.S	/^c0100888:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010088b	kernel.S	/^c010088b:	68 80 00 00 00       	push   $0x80$/;"	l
c0100890	kernel.S	/^c0100890:	51                   	push   %ecx$/;"	l
c0100891	kernel.S	/^c0100891:	50                   	push   %eax$/;"	l
c0100892	kernel.S	/^c0100892:	e8 f3 17 00 00       	call   c010208a <memcpy>$/;"	l
c0100897	kernel.S	/^c0100897:	83 c4 10             	add    $0x10,%esp$/;"	l
c010089a	kernel.S	/^c010089a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010089d	kernel.S	/^c010089d:	89 d0                	mov    %edx,%eax$/;"	l
c010089f	kernel.S	/^c010089f:	01 c0                	add    %eax,%eax$/;"	l
c01008a1	kernel.S	/^c01008a1:	01 d0                	add    %edx,%eax$/;"	l
c01008a3	kernel.S	/^c01008a3:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c01008a6	kernel.S	/^c01008a6:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c01008ab	kernel.S	/^c01008ab:	05 00 60 26 c0       	add    $0xc0266000,%eax$/;"	l
c01008b0	kernel.S	/^c01008b0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01008b3	kernel.S	/^c01008b3:	68 00 30 00 00       	push   $0x3000$/;"	l
c01008b8	kernel.S	/^c01008b8:	6a 00                	push   $0x0$/;"	l
c01008ba	kernel.S	/^c01008ba:	50                   	push   %eax$/;"	l
c01008bb	kernel.S	/^c01008bb:	e8 82 16 00 00       	call   c0101f42 <memset>$/;"	l
c01008c0	kernel.S	/^c01008c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01008c3	kernel.S	/^c01008c3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01008c7	kernel.S	/^c01008c7:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c01008cb	kernel.S	/^c01008cb:	0f 8e f2 fe ff ff    	jle    c01007c3 <init_pcb+0x12>$/;"	l
c01008d1	kernel.S	/^c01008d1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01008d4	kernel.S	/^c01008d4:	6a 10                	push   $0x10$/;"	l
c01008d6	kernel.S	/^c01008d6:	6a 00                	push   $0x0$/;"	l
c01008d8	kernel.S	/^c01008d8:	68 50 91 2e c0       	push   $0xc02e9150$/;"	l
c01008dd	kernel.S	/^c01008dd:	e8 60 16 00 00       	call   c0101f42 <memset>$/;"	l
c01008e2	kernel.S	/^c01008e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01008e5	kernel.S	/^c01008e5:	90                   	nop$/;"	l
c01008e6	kernel.S	/^c01008e6:	c9                   	leave  $/;"	l
c01008e7	kernel.S	/^c01008e7:	c3                   	ret    $/;"	l
c01008e8	kernel.S	/^c01008e8 <get_pcb>:$/;"	l
c01008e8	kernel.S	/^c01008e8:	55                   	push   %ebp$/;"	l
c01008e9	kernel.S	/^c01008e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01008eb	kernel.S	/^c01008eb:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01008ee	kernel.S	/^c01008ee:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01008f5	kernel.S	/^c01008f5:	eb 26                	jmp    c010091d <get_pcb+0x35>$/;"	l
c01008f7	kernel.S	/^c01008f7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01008fa	kernel.S	/^c01008fa:	05 50 91 2e c0       	add    $0xc02e9150,%eax$/;"	l
c01008ff	kernel.S	/^c01008ff:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100902	kernel.S	/^c0100902:	83 f0 01             	xor    $0x1,%eax$/;"	l
c0100905	kernel.S	/^c0100905:	84 c0                	test   %al,%al$/;"	l
c0100907	kernel.S	/^c0100907:	74 10                	je     c0100919 <get_pcb+0x31>$/;"	l
c0100909	kernel.S	/^c0100909:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010090c	kernel.S	/^c010090c:	05 50 91 2e c0       	add    $0xc02e9150,%eax$/;"	l
c0100911	kernel.S	/^c0100911:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c0100914	kernel.S	/^c0100914:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100917	kernel.S	/^c0100917:	eb 0f                	jmp    c0100928 <get_pcb+0x40>$/;"	l
c0100919	kernel.S	/^c0100919:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010091d	kernel.S	/^c010091d:	83 7d fc 0f          	cmpl   $0xf,-0x4(%ebp)$/;"	l
c0100921	kernel.S	/^c0100921:	7e d4                	jle    c01008f7 <get_pcb+0xf>$/;"	l
c0100923	kernel.S	/^c0100923:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100928	kernel.S	/^c0100928:	c9                   	leave  $/;"	l
c0100929	kernel.S	/^c0100929:	c3                   	ret    $/;"	l
c010092a	kernel.S	/^c010092a <free_pcb>:$/;"	l
c010092a	kernel.S	/^c010092a:	55                   	push   %ebp$/;"	l
c010092b	kernel.S	/^c010092b:	89 e5                	mov    %esp,%ebp$/;"	l
c010092d	kernel.S	/^c010092d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100930	kernel.S	/^c0100930:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100934	kernel.S	/^c0100934:	78 06                	js     c010093c <free_pcb+0x12>$/;"	l
c0100936	kernel.S	/^c0100936:	83 7d 08 0f          	cmpl   $0xf,0x8(%ebp)$/;"	l
c010093a	kernel.S	/^c010093a:	7e 12                	jle    c010094e <free_pcb+0x24>$/;"	l
c010093c	kernel.S	/^c010093c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010093f	kernel.S	/^c010093f:	6a 3d                	push   $0x3d$/;"	l
c0100941	kernel.S	/^c0100941:	68 c0 24 26 c0       	push   $0xc02624c0$/;"	l
c0100946	kernel.S	/^c0100946:	e8 b5 f6 ff ff       	call   c0100000 <abort>$/;"	l
c010094b	kernel.S	/^c010094b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010094e	kernel.S	/^c010094e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100951	kernel.S	/^c0100951:	05 50 91 2e c0       	add    $0xc02e9150,%eax$/;"	l
c0100956	kernel.S	/^c0100956:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100959	kernel.S	/^c0100959:	90                   	nop$/;"	l
c010095a	kernel.S	/^c010095a:	c9                   	leave  $/;"	l
c010095b	kernel.S	/^c010095b:	c3                   	ret    $/;"	l
c010095c	kernel.S	/^c010095c <create_process>:$/;"	l
c010095c	kernel.S	/^c010095c:	55                   	push   %ebp$/;"	l
c010095d	kernel.S	/^c010095d:	89 e5                	mov    %esp,%ebp$/;"	l
c010095f	kernel.S	/^c010095f:	56                   	push   %esi$/;"	l
c0100960	kernel.S	/^c0100960:	53                   	push   %ebx$/;"	l
c0100961	kernel.S	/^c0100961:	81 ec 40 10 00 00    	sub    $0x1040,%esp$/;"	l
c0100967	kernel.S	/^c0100967:	e8 7c ff ff ff       	call   c01008e8 <get_pcb>$/;"	l
c010096c	kernel.S	/^c010096c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010096f	kernel.S	/^c010096f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0100973	kernel.S	/^c0100973:	79 22                	jns    c0100997 <create_process+0x3b>$/;"	l
c0100975	kernel.S	/^c0100975:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100978	kernel.S	/^c0100978:	68 d3 24 26 c0       	push   $0xc02624d3$/;"	l
c010097d	kernel.S	/^c010097d:	e8 9d f6 ff ff       	call   c010001f <printk>$/;"	l
c0100982	kernel.S	/^c0100982:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100985	kernel.S	/^c0100985:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100988	kernel.S	/^c0100988:	6a 45                	push   $0x45$/;"	l
c010098a	kernel.S	/^c010098a:	68 c0 24 26 c0       	push   $0xc02624c0$/;"	l
c010098f	kernel.S	/^c010098f:	e8 6c f6 ff ff       	call   c0100000 <abort>$/;"	l
c0100994	kernel.S	/^c0100994:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100997	kernel.S	/^c0100997:	8d 85 c4 ef ff ff    	lea    -0x103c(%ebp),%eax$/;"	l
c010099d	kernel.S	/^c010099d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01009a0	kernel.S	/^c01009a0:	8d 85 c4 ef ff ff    	lea    -0x103c(%ebp),%eax$/;"	l
c01009a6	kernel.S	/^c01009a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01009a9	kernel.S	/^c01009a9:	50                   	push   %eax$/;"	l
c01009aa	kernel.S	/^c01009aa:	68 eb 24 26 c0       	push   $0xc02624eb$/;"	l
c01009af	kernel.S	/^c01009af:	e8 6b f6 ff ff       	call   c010001f <printk>$/;"	l
c01009b4	kernel.S	/^c01009b4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01009b7	kernel.S	/^c01009b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01009ba	kernel.S	/^c01009ba:	68 00 00 a0 00       	push   $0xa00000$/;"	l
c01009bf	kernel.S	/^c01009bf:	68 00 10 00 00       	push   $0x1000$/;"	l
c01009c4	kernel.S	/^c01009c4:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c01009c7	kernel.S	/^c01009c7:	e8 10 05 00 00       	call   c0100edc <readseg>$/;"	l
c01009cc	kernel.S	/^c01009cc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01009cf	kernel.S	/^c01009cf:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01009d2	kernel.S	/^c01009d2:	8b 50 1c             	mov    0x1c(%eax),%edx$/;"	l
c01009d5	kernel.S	/^c01009d5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01009d8	kernel.S	/^c01009d8:	01 d0                	add    %edx,%eax$/;"	l
c01009da	kernel.S	/^c01009da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01009dd	kernel.S	/^c01009dd:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01009e0	kernel.S	/^c01009e0:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c01009e4	kernel.S	/^c01009e4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01009e7	kernel.S	/^c01009e7:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c01009ea	kernel.S	/^c01009ea:	89 c2                	mov    %eax,%edx$/;"	l
c01009ec	kernel.S	/^c01009ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009ef	kernel.S	/^c01009ef:	01 d0                	add    %edx,%eax$/;"	l
c01009f1	kernel.S	/^c01009f1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01009f4	kernel.S	/^c01009f4:	e9 c2 01 00 00       	jmp    c0100bbb <create_process+0x25f>$/;"	l
c01009f9	kernel.S	/^c01009f9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009fc	kernel.S	/^c01009fc:	8b 00                	mov    (%eax),%eax$/;"	l
c01009fe	kernel.S	/^c01009fe:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0100a01	kernel.S	/^c0100a01:	0f 85 af 01 00 00    	jne    c0100bb6 <create_process+0x25a>$/;"	l
c0100a07	kernel.S	/^c0100a07:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a0a	kernel.S	/^c0100a0a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100a0d	kernel.S	/^c0100a0d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100a10	kernel.S	/^c0100a10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a13	kernel.S	/^c0100a13:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c0100a16	kernel.S	/^c0100a16:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a19	kernel.S	/^c0100a19:	01 d0                	add    %edx,%eax$/;"	l
c0100a1b	kernel.S	/^c0100a1b:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100a1e	kernel.S	/^c0100a1e:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0100a21	kernel.S	/^c0100a21:	89 c2                	mov    %eax,%edx$/;"	l
c0100a23	kernel.S	/^c0100a23:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a26	kernel.S	/^c0100a26:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0100a29	kernel.S	/^c0100a29:	29 c2                	sub    %eax,%edx$/;"	l
c0100a2b	kernel.S	/^c0100a2b:	89 d0                	mov    %edx,%eax$/;"	l
c0100a2d	kernel.S	/^c0100a2d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a30	kernel.S	/^c0100a30:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100a33	kernel.S	/^c0100a33:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a36	kernel.S	/^c0100a36:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c0100a39	kernel.S	/^c0100a39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a3c	kernel.S	/^c0100a3c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0100a3f	kernel.S	/^c0100a3f:	52                   	push   %edx$/;"	l
c0100a40	kernel.S	/^c0100a40:	50                   	push   %eax$/;"	l
c0100a41	kernel.S	/^c0100a41:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0100a44	kernel.S	/^c0100a44:	68 fe 24 26 c0       	push   $0xc02624fe$/;"	l
c0100a49	kernel.S	/^c0100a49:	e8 d1 f5 ff ff       	call   c010001f <printk>$/;"	l
c0100a4e	kernel.S	/^c0100a4e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a51	kernel.S	/^c0100a51:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a54	kernel.S	/^c0100a54:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0100a57	kernel.S	/^c0100a57:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100a5a	kernel.S	/^c0100a5a:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
c0100a5d	kernel.S	/^c0100a5d:	50                   	push   %eax$/;"	l
c0100a5e	kernel.S	/^c0100a5e:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0100a61	kernel.S	/^c0100a61:	e8 c6 01 00 00       	call   c0100c2c <mm_malloc>$/;"	l
c0100a66	kernel.S	/^c0100a66:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a69	kernel.S	/^c0100a69:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0100a70	kernel.S	/^c0100a70:	e9 33 01 00 00       	jmp    c0100ba8 <create_process+0x24c>$/;"	l
c0100a75	kernel.S	/^c0100a75:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a78	kernel.S	/^c0100a78:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0100a7b	kernel.S	/^c0100a7b:	89 c2                	mov    %eax,%edx$/;"	l
c0100a7d	kernel.S	/^c0100a7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100a80	kernel.S	/^c0100a80:	01 d0                	add    %edx,%eax$/;"	l
c0100a82	kernel.S	/^c0100a82:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0100a85	kernel.S	/^c0100a85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a88	kernel.S	/^c0100a88:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0100a8b	kernel.S	/^c0100a8b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a8e	kernel.S	/^c0100a8e:	01 d0                	add    %edx,%eax$/;"	l
c0100a90	kernel.S	/^c0100a90:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100a93	kernel.S	/^c0100a93:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0100a96	kernel.S	/^c0100a96:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0100a99	kernel.S	/^c0100a99:	72 7d                	jb     c0100b18 <create_process+0x1bc>$/;"	l
c0100a9b	kernel.S	/^c0100a9b:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100a9e	kernel.S	/^c0100a9e:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0100aa1	kernel.S	/^c0100aa1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100aa4	kernel.S	/^c0100aa4:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100aa7	kernel.S	/^c0100aa7:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100aaa	kernel.S	/^c0100aaa:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0100aad	kernel.S	/^c0100aad:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100ab0	kernel.S	/^c0100ab0:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100ab3	kernel.S	/^c0100ab3:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100ab6	kernel.S	/^c0100ab6:	76 06                	jbe    c0100abe <create_process+0x162>$/;"	l
c0100ab8	kernel.S	/^c0100ab8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100abb	kernel.S	/^c0100abb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100abe	kernel.S	/^c0100abe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ac1	kernel.S	/^c0100ac1:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0100ac4	kernel.S	/^c0100ac4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100ac7	kernel.S	/^c0100ac7:	01 d0                	add    %edx,%eax$/;"	l
c0100ac9	kernel.S	/^c0100ac9:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0100acc	kernel.S	/^c0100acc:	73 0e                	jae    c0100adc <create_process+0x180>$/;"	l
c0100ace	kernel.S	/^c0100ace:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ad1	kernel.S	/^c0100ad1:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0100ad4	kernel.S	/^c0100ad4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100ad7	kernel.S	/^c0100ad7:	01 d0                	add    %edx,%eax$/;"	l
c0100ad9	kernel.S	/^c0100ad9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100adc	kernel.S	/^c0100adc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100adf	kernel.S	/^c0100adf:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0100ae2	kernel.S	/^c0100ae2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ae5	kernel.S	/^c0100ae5:	01 d0                	add    %edx,%eax$/;"	l
c0100ae7	kernel.S	/^c0100ae7:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
c0100aea	kernel.S	/^c0100aea:	05 00 00 a0 00       	add    $0xa00000,%eax$/;"	l
c0100aef	kernel.S	/^c0100aef:	89 c6                	mov    %eax,%esi$/;"	l
c0100af1	kernel.S	/^c0100af1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100af4	kernel.S	/^c0100af4:	2b 45 ec             	sub    -0x14(%ebp),%eax$/;"	l
c0100af7	kernel.S	/^c0100af7:	89 c3                	mov    %eax,%ebx$/;"	l
c0100af9	kernel.S	/^c0100af9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100afc	kernel.S	/^c0100afc:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0100aff	kernel.S	/^c0100aff:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0100b02	kernel.S	/^c0100b02:	e8 69 02 00 00       	call   c0100d70 <page_trans>$/;"	l
c0100b07	kernel.S	/^c0100b07:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b0a	kernel.S	/^c0100b0a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100b0d	kernel.S	/^c0100b0d:	56                   	push   %esi$/;"	l
c0100b0e	kernel.S	/^c0100b0e:	53                   	push   %ebx$/;"	l
c0100b0f	kernel.S	/^c0100b0f:	50                   	push   %eax$/;"	l
c0100b10	kernel.S	/^c0100b10:	e8 c7 03 00 00       	call   c0100edc <readseg>$/;"	l
c0100b15	kernel.S	/^c0100b15:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b18	kernel.S	/^c0100b18:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b1b	kernel.S	/^c0100b1b:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0100b1e	kernel.S	/^c0100b1e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100b21	kernel.S	/^c0100b21:	01 d0                	add    %edx,%eax$/;"	l
c0100b23	kernel.S	/^c0100b23:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0100b26	kernel.S	/^c0100b26:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0100b29	kernel.S	/^c0100b29:	77 79                	ja     c0100ba4 <create_process+0x248>$/;"	l
c0100b2b	kernel.S	/^c0100b2b:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100b2e	kernel.S	/^c0100b2e:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0100b31	kernel.S	/^c0100b31:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100b34	kernel.S	/^c0100b34:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100b37	kernel.S	/^c0100b37:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100b3a	kernel.S	/^c0100b3a:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0100b3d	kernel.S	/^c0100b3d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100b40	kernel.S	/^c0100b40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b43	kernel.S	/^c0100b43:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0100b46	kernel.S	/^c0100b46:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100b49	kernel.S	/^c0100b49:	01 d0                	add    %edx,%eax$/;"	l
c0100b4b	kernel.S	/^c0100b4b:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
c0100b4e	kernel.S	/^c0100b4e:	76 0e                	jbe    c0100b5e <create_process+0x202>$/;"	l
c0100b50	kernel.S	/^c0100b50:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b53	kernel.S	/^c0100b53:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0100b56	kernel.S	/^c0100b56:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100b59	kernel.S	/^c0100b59:	01 d0                	add    %edx,%eax$/;"	l
c0100b5b	kernel.S	/^c0100b5b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100b5e	kernel.S	/^c0100b5e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b61	kernel.S	/^c0100b61:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c0100b64	kernel.S	/^c0100b64:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100b67	kernel.S	/^c0100b67:	01 d0                	add    %edx,%eax$/;"	l
c0100b69	kernel.S	/^c0100b69:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0100b6c	kernel.S	/^c0100b6c:	73 0e                	jae    c0100b7c <create_process+0x220>$/;"	l
c0100b6e	kernel.S	/^c0100b6e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b71	kernel.S	/^c0100b71:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c0100b74	kernel.S	/^c0100b74:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100b77	kernel.S	/^c0100b77:	01 d0                	add    %edx,%eax$/;"	l
c0100b79	kernel.S	/^c0100b79:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100b7c	kernel.S	/^c0100b7c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100b7f	kernel.S	/^c0100b7f:	2b 45 e4             	sub    -0x1c(%ebp),%eax$/;"	l
c0100b82	kernel.S	/^c0100b82:	89 c3                	mov    %eax,%ebx$/;"	l
c0100b84	kernel.S	/^c0100b84:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b87	kernel.S	/^c0100b87:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0100b8a	kernel.S	/^c0100b8a:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0100b8d	kernel.S	/^c0100b8d:	e8 de 01 00 00       	call   c0100d70 <page_trans>$/;"	l
c0100b92	kernel.S	/^c0100b92:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b95	kernel.S	/^c0100b95:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100b98	kernel.S	/^c0100b98:	53                   	push   %ebx$/;"	l
c0100b99	kernel.S	/^c0100b99:	6a 00                	push   $0x0$/;"	l
c0100b9b	kernel.S	/^c0100b9b:	50                   	push   %eax$/;"	l
c0100b9c	kernel.S	/^c0100b9c:	e8 a1 13 00 00       	call   c0101f42 <memset>$/;"	l
c0100ba1	kernel.S	/^c0100ba1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100ba4	kernel.S	/^c0100ba4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0100ba8	kernel.S	/^c0100ba8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100bab	kernel.S	/^c0100bab:	3b 45 cc             	cmp    -0x34(%ebp),%eax$/;"	l
c0100bae	kernel.S	/^c0100bae:	0f 8c c1 fe ff ff    	jl     c0100a75 <create_process+0x119>$/;"	l
c0100bb4	kernel.S	/^c0100bb4:	eb 01                	jmp    c0100bb7 <create_process+0x25b>$/;"	l
c0100bb6	kernel.S	/^c0100bb6:	90                   	nop$/;"	l
c0100bb7	kernel.S	/^c0100bb7:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0100bbb	kernel.S	/^c0100bbb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bbe	kernel.S	/^c0100bbe:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0100bc1	kernel.S	/^c0100bc1:	0f 82 32 fe ff ff    	jb     c01009f9 <create_process+0x9d>$/;"	l
c0100bc7	kernel.S	/^c0100bc7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0100bca	kernel.S	/^c0100bca:	89 d0                	mov    %edx,%eax$/;"	l
c0100bcc	kernel.S	/^c0100bcc:	01 c0                	add    %eax,%eax$/;"	l
c0100bce	kernel.S	/^c0100bce:	01 d0                	add    %edx,%eax$/;"	l
c0100bd0	kernel.S	/^c0100bd0:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c0100bd3	kernel.S	/^c0100bd3:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0100bd8	kernel.S	/^c0100bd8:	8d 88 00 60 26 c0    	lea    -0x3fd9a000(%eax),%ecx$/;"	l
c0100bde	kernel.S	/^c0100bde:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0100be1	kernel.S	/^c0100be1:	89 d0                	mov    %edx,%eax$/;"	l
c0100be3	kernel.S	/^c0100be3:	01 c0                	add    %eax,%eax$/;"	l
c0100be5	kernel.S	/^c0100be5:	01 d0                	add    %edx,%eax$/;"	l
c0100be7	kernel.S	/^c0100be7:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c0100bea	kernel.S	/^c0100bea:	05 04 60 26 c0       	add    $0xc0266004,%eax$/;"	l
c0100bef	kernel.S	/^c0100bef:	8b 00                	mov    (%eax),%eax$/;"	l
c0100bf1	kernel.S	/^c0100bf1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100bf4	kernel.S	/^c0100bf4:	51                   	push   %ecx$/;"	l
c0100bf5	kernel.S	/^c0100bf5:	50                   	push   %eax$/;"	l
c0100bf6	kernel.S	/^c0100bf6:	68 10 25 26 c0       	push   $0xc0262510$/;"	l
c0100bfb	kernel.S	/^c0100bfb:	e8 1f f4 ff ff       	call   c010001f <printk>$/;"	l
c0100c00	kernel.S	/^c0100c00:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c03	kernel.S	/^c0100c03:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0100c06	kernel.S	/^c0100c06:	89 d0                	mov    %edx,%eax$/;"	l
c0100c08	kernel.S	/^c0100c08:	01 c0                	add    %eax,%eax$/;"	l
c0100c0a	kernel.S	/^c0100c0a:	01 d0                	add    %edx,%eax$/;"	l
c0100c0c	kernel.S	/^c0100c0c:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c0100c0f	kernel.S	/^c0100c0f:	05 04 60 26 c0       	add    $0xc0266004,%eax$/;"	l
c0100c14	kernel.S	/^c0100c14:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c16	kernel.S	/^c0100c16:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0100c19	kernel.S	/^c0100c19:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0100c1c	kernel.S	/^c0100c1c:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0100c1f	kernel.S	/^c0100c1f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100c22	kernel.S	/^c0100c22:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0100c25	kernel.S	/^c0100c25:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c0100c28	kernel.S	/^c0100c28:	5b                   	pop    %ebx$/;"	l
c0100c29	kernel.S	/^c0100c29:	5e                   	pop    %esi$/;"	l
c0100c2a	kernel.S	/^c0100c2a:	5d                   	pop    %ebp$/;"	l
c0100c2b	kernel.S	/^c0100c2b:	c3                   	ret    $/;"	l
c0100c2c	kernel.S	/^c0100c2c <mm_malloc>:$/;"	l
c0100c2c	kernel.S	/^c0100c2c:	55                   	push   %ebp$/;"	l
c0100c2d	kernel.S	/^c0100c2d:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c2f	kernel.S	/^c0100c2f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0100c32	kernel.S	/^c0100c32:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
c0100c36	kernel.S	/^c0100c36:	7e 25                	jle    c0100c5d <mm_malloc+0x31>$/;"	l
c0100c38	kernel.S	/^c0100c38:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c3b	kernel.S	/^c0100c3b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100c3e	kernel.S	/^c0100c3e:	68 28 25 26 c0       	push   $0xc0262528$/;"	l
c0100c43	kernel.S	/^c0100c43:	e8 d7 f3 ff ff       	call   c010001f <printk>$/;"	l
c0100c48	kernel.S	/^c0100c48:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c4b	kernel.S	/^c0100c4b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c4e	kernel.S	/^c0100c4e:	6a 7a                	push   $0x7a$/;"	l
c0100c50	kernel.S	/^c0100c50:	68 c0 24 26 c0       	push   $0xc02624c0$/;"	l
c0100c55	kernel.S	/^c0100c55:	e8 a6 f3 ff ff       	call   c0100000 <abort>$/;"	l
c0100c5a	kernel.S	/^c0100c5a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c5d	kernel.S	/^c0100c5d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100c60	kernel.S	/^c0100c60:	89 d0                	mov    %edx,%eax$/;"	l
c0100c62	kernel.S	/^c0100c62:	01 c0                	add    %eax,%eax$/;"	l
c0100c64	kernel.S	/^c0100c64:	01 d0                	add    %edx,%eax$/;"	l
c0100c66	kernel.S	/^c0100c66:	c1 e0 0d             	shl    $0xd,%eax$/;"	l
c0100c69	kernel.S	/^c0100c69:	05 00 60 26 c0       	add    $0xc0266000,%eax$/;"	l
c0100c6e	kernel.S	/^c0100c6e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0100c71	kernel.S	/^c0100c71:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100c78	kernel.S	/^c0100c78:	eb 7b                	jmp    c0100cf5 <mm_malloc+0xc9>$/;"	l
c0100c7a	kernel.S	/^c0100c7a:	e8 25 fa ff ff       	call   c01006a4 <get_pte>$/;"	l
c0100c7f	kernel.S	/^c0100c7f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100c82	kernel.S	/^c0100c82:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c85	kernel.S	/^c0100c85:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100c88	kernel.S	/^c0100c88:	01 d0                	add    %edx,%eax$/;"	l
c0100c8a	kernel.S	/^c0100c8a:	05 00 04 00 00       	add    $0x400,%eax$/;"	l
c0100c8f	kernel.S	/^c0100c8f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100c96	kernel.S	/^c0100c96:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100c99	kernel.S	/^c0100c99:	01 d0                	add    %edx,%eax$/;"	l
c0100c9b	kernel.S	/^c0100c9b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0100c9e	kernel.S	/^c0100c9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ca1	kernel.S	/^c0100ca1:	83 c0 02             	add    $0x2,%eax$/;"	l
c0100ca4	kernel.S	/^c0100ca4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0100ca7	kernel.S	/^c0100ca7:	89 c2                	mov    %eax,%edx$/;"	l
c0100ca9	kernel.S	/^c0100ca9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100cac	kernel.S	/^c0100cac:	01 d0                	add    %edx,%eax$/;"	l
c0100cae	kernel.S	/^c0100cae:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100cb1	kernel.S	/^c0100cb1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100cb4	kernel.S	/^c0100cb4:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0100cb9	kernel.S	/^c0100cb9:	83 c8 07             	or     $0x7,%eax$/;"	l
c0100cbc	kernel.S	/^c0100cbc:	89 c2                	mov    %eax,%edx$/;"	l
c0100cbe	kernel.S	/^c0100cbe:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100cc1	kernel.S	/^c0100cc1:	89 10                	mov    %edx,(%eax)$/;"	l
c0100cc3	kernel.S	/^c0100cc3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0100cca	kernel.S	/^c0100cca:	eb 1c                	jmp    c0100ce8 <mm_malloc+0xbc>$/;"	l
c0100ccc	kernel.S	/^c0100ccc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ccf	kernel.S	/^c0100ccf:	83 c8 07             	or     $0x7,%eax$/;"	l
c0100cd2	kernel.S	/^c0100cd2:	89 c2                	mov    %eax,%edx$/;"	l
c0100cd4	kernel.S	/^c0100cd4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100cd7	kernel.S	/^c0100cd7:	89 10                	mov    %edx,(%eax)$/;"	l
c0100cd9	kernel.S	/^c0100cd9:	83 45 e8 04          	addl   $0x4,-0x18(%ebp)$/;"	l
c0100cdd	kernel.S	/^c0100cdd:	81 45 ec 00 10 00 00 	addl   $0x1000,-0x14(%ebp)$/;"	l
c0100ce4	kernel.S	/^c0100ce4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0100ce8	kernel.S	/^c0100ce8:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
c0100cef	kernel.S	/^c0100cef:	7e db                	jle    c0100ccc <mm_malloc+0xa0>$/;"	l
c0100cf1	kernel.S	/^c0100cf1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100cf5	kernel.S	/^c0100cf5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100cf8	kernel.S	/^c0100cf8:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0100cfb	kernel.S	/^c0100cfb:	0f 8c 79 ff ff ff    	jl     c0100c7a <mm_malloc+0x4e>$/;"	l
c0100d01	kernel.S	/^c0100d01:	c7 45 e4 00 00 c0 bf 	movl   $0xbfc00000,-0x1c(%ebp)$/;"	l
c0100d08	kernel.S	/^c0100d08:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100d0b	kernel.S	/^c0100d0b:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0100d0e	kernel.S	/^c0100d0e:	05 00 04 00 00       	add    $0x400,%eax$/;"	l
c0100d13	kernel.S	/^c0100d13:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100d1a	kernel.S	/^c0100d1a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100d1d	kernel.S	/^c0100d1d:	01 d0                	add    %edx,%eax$/;"	l
c0100d1f	kernel.S	/^c0100d1f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0100d22	kernel.S	/^c0100d22:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100d25	kernel.S	/^c0100d25:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
c0100d2a	kernel.S	/^c0100d2a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100d2d	kernel.S	/^c0100d2d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100d30	kernel.S	/^c0100d30:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0100d35	kernel.S	/^c0100d35:	83 c8 07             	or     $0x7,%eax$/;"	l
c0100d38	kernel.S	/^c0100d38:	89 c2                	mov    %eax,%edx$/;"	l
c0100d3a	kernel.S	/^c0100d3a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100d3d	kernel.S	/^c0100d3d:	89 10                	mov    %edx,(%eax)$/;"	l
c0100d3f	kernel.S	/^c0100d3f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0100d46	kernel.S	/^c0100d46:	eb 1c                	jmp    c0100d64 <mm_malloc+0x138>$/;"	l
c0100d48	kernel.S	/^c0100d48:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100d4b	kernel.S	/^c0100d4b:	83 c8 07             	or     $0x7,%eax$/;"	l
c0100d4e	kernel.S	/^c0100d4e:	89 c2                	mov    %eax,%edx$/;"	l
c0100d50	kernel.S	/^c0100d50:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100d53	kernel.S	/^c0100d53:	89 10                	mov    %edx,(%eax)$/;"	l
c0100d55	kernel.S	/^c0100d55:	83 45 e0 04          	addl   $0x4,-0x20(%ebp)$/;"	l
c0100d59	kernel.S	/^c0100d59:	81 45 e4 00 10 00 00 	addl   $0x1000,-0x1c(%ebp)$/;"	l
c0100d60	kernel.S	/^c0100d60:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0100d64	kernel.S	/^c0100d64:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
c0100d6b	kernel.S	/^c0100d6b:	7e db                	jle    c0100d48 <mm_malloc+0x11c>$/;"	l
c0100d6d	kernel.S	/^c0100d6d:	90                   	nop$/;"	l
c0100d6e	kernel.S	/^c0100d6e:	c9                   	leave  $/;"	l
c0100d6f	kernel.S	/^c0100d6f:	c3                   	ret    $/;"	l
c0100d70	kernel.S	/^c0100d70 <page_trans>:$/;"	l
c0100d70	kernel.S	/^c0100d70:	55                   	push   %ebp$/;"	l
c0100d71	kernel.S	/^c0100d71:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d73	kernel.S	/^c0100d73:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100d76	kernel.S	/^c0100d76:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100d79	kernel.S	/^c0100d79:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0100d7c	kernel.S	/^c0100d7c:	89 c1                	mov    %eax,%ecx$/;"	l
c0100d7e	kernel.S	/^c0100d7e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100d81	kernel.S	/^c0100d81:	89 d0                	mov    %edx,%eax$/;"	l
c0100d83	kernel.S	/^c0100d83:	01 c0                	add    %eax,%eax$/;"	l
c0100d85	kernel.S	/^c0100d85:	01 d0                	add    %edx,%eax$/;"	l
c0100d87	kernel.S	/^c0100d87:	c1 e0 0b             	shl    $0xb,%eax$/;"	l
c0100d8a	kernel.S	/^c0100d8a:	01 c8                	add    %ecx,%eax$/;"	l
c0100d8c	kernel.S	/^c0100d8c:	05 00 04 00 00       	add    $0x400,%eax$/;"	l
c0100d91	kernel.S	/^c0100d91:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d94	kernel.S	/^c0100d94:	05 00 60 26 c0       	add    $0xc0266000,%eax$/;"	l
c0100d99	kernel.S	/^c0100d99:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100d9c	kernel.S	/^c0100d9c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100d9f	kernel.S	/^c0100d9f:	8b 00                	mov    (%eax),%eax$/;"	l
c0100da1	kernel.S	/^c0100da1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0100da4	kernel.S	/^c0100da4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0100da7	kernel.S	/^c0100da7:	89 c2                	mov    %eax,%edx$/;"	l
c0100da9	kernel.S	/^c0100da9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100dac	kernel.S	/^c0100dac:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0100daf	kernel.S	/^c0100daf:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
c0100db4	kernel.S	/^c0100db4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100db7	kernel.S	/^c0100db7:	01 d0                	add    %edx,%eax$/;"	l
c0100db9	kernel.S	/^c0100db9:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0100dbc	kernel.S	/^c0100dbc:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0100dbf	kernel.S	/^c0100dbf:	8b 00                	mov    (%eax),%eax$/;"	l
c0100dc1	kernel.S	/^c0100dc1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0100dc4	kernel.S	/^c0100dc4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0100dc7	kernel.S	/^c0100dc7:	89 c2                	mov    %eax,%edx$/;"	l
c0100dc9	kernel.S	/^c0100dc9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100dcc	kernel.S	/^c0100dcc:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0100dd1	kernel.S	/^c0100dd1:	01 d0                	add    %edx,%eax$/;"	l
c0100dd3	kernel.S	/^c0100dd3:	c9                   	leave  $/;"	l
c0100dd4	kernel.S	/^c0100dd4:	c3                   	ret    $/;"	l
c0100dd5	kernel.S	/^c0100dd5 <waitdisk>:$/;"	l
c0100dd5	kernel.S	/^c0100dd5:	55                   	push   %ebp$/;"	l
c0100dd6	kernel.S	/^c0100dd6:	89 e5                	mov    %esp,%ebp$/;"	l
c0100dd8	kernel.S	/^c0100dd8:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100ddb	kernel.S	/^c0100ddb:	90                   	nop$/;"	l
c0100ddc	kernel.S	/^c0100ddc:	c7 45 fc f7 01 00 00 	movl   $0x1f7,-0x4(%ebp)$/;"	l
c0100de3	kernel.S	/^c0100de3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100de6	kernel.S	/^c0100de6:	89 c2                	mov    %eax,%edx$/;"	l
c0100de8	kernel.S	/^c0100de8:	ec                   	in     (%dx),%al$/;"	l
c0100de9	kernel.S	/^c0100de9:	88 45 fb             	mov    %al,-0x5(%ebp)$/;"	l
c0100dec	kernel.S	/^c0100dec:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax$/;"	l
c0100df0	kernel.S	/^c0100df0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100df3	kernel.S	/^c0100df3:	25 c0 00 00 00       	and    $0xc0,%eax$/;"	l
c0100df8	kernel.S	/^c0100df8:	83 f8 40             	cmp    $0x40,%eax$/;"	l
c0100dfb	kernel.S	/^c0100dfb:	75 df                	jne    c0100ddc <waitdisk+0x7>$/;"	l
c0100dfd	kernel.S	/^c0100dfd:	90                   	nop$/;"	l
c0100dfe	kernel.S	/^c0100dfe:	c9                   	leave  $/;"	l
c0100dff	kernel.S	/^c0100dff:	c3                   	ret    $/;"	l
c0100e00	kernel.S	/^c0100e00 <readsect>:$/;"	l
c0100e00	kernel.S	/^c0100e00:	55                   	push   %ebp$/;"	l
c0100e01	kernel.S	/^c0100e01:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e03	kernel.S	/^c0100e03:	57                   	push   %edi$/;"	l
c0100e04	kernel.S	/^c0100e04:	53                   	push   %ebx$/;"	l
c0100e05	kernel.S	/^c0100e05:	83 ec 30             	sub    $0x30,%esp$/;"	l
c0100e08	kernel.S	/^c0100e08:	e8 c8 ff ff ff       	call   c0100dd5 <waitdisk>$/;"	l
c0100e0d	kernel.S	/^c0100e0d:	c7 45 f4 f2 01 00 00 	movl   $0x1f2,-0xc(%ebp)$/;"	l
c0100e14	kernel.S	/^c0100e14:	c6 45 ce 01          	movb   $0x1,-0x32(%ebp)$/;"	l
c0100e18	kernel.S	/^c0100e18:	0f b6 45 ce          	movzbl -0x32(%ebp),%eax$/;"	l
c0100e1c	kernel.S	/^c0100e1c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100e1f	kernel.S	/^c0100e1f:	ee                   	out    %al,(%dx)$/;"	l
c0100e20	kernel.S	/^c0100e20:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e23	kernel.S	/^c0100e23:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100e26	kernel.S	/^c0100e26:	c7 45 f0 f3 01 00 00 	movl   $0x1f3,-0x10(%ebp)$/;"	l
c0100e2d	kernel.S	/^c0100e2d:	88 45 cf             	mov    %al,-0x31(%ebp)$/;"	l
c0100e30	kernel.S	/^c0100e30:	0f b6 45 cf          	movzbl -0x31(%ebp),%eax$/;"	l
c0100e34	kernel.S	/^c0100e34:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100e37	kernel.S	/^c0100e37:	ee                   	out    %al,(%dx)$/;"	l
c0100e38	kernel.S	/^c0100e38:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e3b	kernel.S	/^c0100e3b:	c1 f8 08             	sar    $0x8,%eax$/;"	l
c0100e3e	kernel.S	/^c0100e3e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100e41	kernel.S	/^c0100e41:	c7 45 ec f4 01 00 00 	movl   $0x1f4,-0x14(%ebp)$/;"	l
c0100e48	kernel.S	/^c0100e48:	88 45 d0             	mov    %al,-0x30(%ebp)$/;"	l
c0100e4b	kernel.S	/^c0100e4b:	0f b6 45 d0          	movzbl -0x30(%ebp),%eax$/;"	l
c0100e4f	kernel.S	/^c0100e4f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0100e52	kernel.S	/^c0100e52:	ee                   	out    %al,(%dx)$/;"	l
c0100e53	kernel.S	/^c0100e53:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e56	kernel.S	/^c0100e56:	c1 f8 10             	sar    $0x10,%eax$/;"	l
c0100e59	kernel.S	/^c0100e59:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100e5c	kernel.S	/^c0100e5c:	c7 45 e8 f5 01 00 00 	movl   $0x1f5,-0x18(%ebp)$/;"	l
c0100e63	kernel.S	/^c0100e63:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0100e66	kernel.S	/^c0100e66:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0100e6a	kernel.S	/^c0100e6a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0100e6d	kernel.S	/^c0100e6d:	ee                   	out    %al,(%dx)$/;"	l
c0100e6e	kernel.S	/^c0100e6e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e71	kernel.S	/^c0100e71:	c1 f8 18             	sar    $0x18,%eax$/;"	l
c0100e74	kernel.S	/^c0100e74:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0100e77	kernel.S	/^c0100e77:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100e7a	kernel.S	/^c0100e7a:	c7 45 e4 f6 01 00 00 	movl   $0x1f6,-0x1c(%ebp)$/;"	l
c0100e81	kernel.S	/^c0100e81:	88 45 d2             	mov    %al,-0x2e(%ebp)$/;"	l
c0100e84	kernel.S	/^c0100e84:	0f b6 45 d2          	movzbl -0x2e(%ebp),%eax$/;"	l
c0100e88	kernel.S	/^c0100e88:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100e8b	kernel.S	/^c0100e8b:	ee                   	out    %al,(%dx)$/;"	l
c0100e8c	kernel.S	/^c0100e8c:	c7 45 e0 f7 01 00 00 	movl   $0x1f7,-0x20(%ebp)$/;"	l
c0100e93	kernel.S	/^c0100e93:	c6 45 d3 20          	movb   $0x20,-0x2d(%ebp)$/;"	l
c0100e97	kernel.S	/^c0100e97:	0f b6 45 d3          	movzbl -0x2d(%ebp),%eax$/;"	l
c0100e9b	kernel.S	/^c0100e9b:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100e9e	kernel.S	/^c0100e9e:	ee                   	out    %al,(%dx)$/;"	l
c0100e9f	kernel.S	/^c0100e9f:	e8 31 ff ff ff       	call   c0100dd5 <waitdisk>$/;"	l
c0100ea4	kernel.S	/^c0100ea4:	c7 45 dc f0 01 00 00 	movl   $0x1f0,-0x24(%ebp)$/;"	l
c0100eab	kernel.S	/^c0100eab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100eae	kernel.S	/^c0100eae:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0100eb1	kernel.S	/^c0100eb1:	c7 45 d4 80 00 00 00 	movl   $0x80,-0x2c(%ebp)$/;"	l
c0100eb8	kernel.S	/^c0100eb8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0100ebb	kernel.S	/^c0100ebb:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0100ebe	kernel.S	/^c0100ebe:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100ec1	kernel.S	/^c0100ec1:	89 cb                	mov    %ecx,%ebx$/;"	l
c0100ec3	kernel.S	/^c0100ec3:	89 df                	mov    %ebx,%edi$/;"	l
c0100ec5	kernel.S	/^c0100ec5:	89 c1                	mov    %eax,%ecx$/;"	l
c0100ec7	kernel.S	/^c0100ec7:	fc                   	cld    $/;"	l
c0100ec8	kernel.S	/^c0100ec8:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0100eca	kernel.S	/^c0100eca:	89 c8                	mov    %ecx,%eax$/;"	l
c0100ecc	kernel.S	/^c0100ecc:	89 fb                	mov    %edi,%ebx$/;"	l
c0100ece	kernel.S	/^c0100ece:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
c0100ed1	kernel.S	/^c0100ed1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0100ed4	kernel.S	/^c0100ed4:	90                   	nop$/;"	l
c0100ed5	kernel.S	/^c0100ed5:	83 c4 30             	add    $0x30,%esp$/;"	l
c0100ed8	kernel.S	/^c0100ed8:	5b                   	pop    %ebx$/;"	l
c0100ed9	kernel.S	/^c0100ed9:	5f                   	pop    %edi$/;"	l
c0100eda	kernel.S	/^c0100eda:	5d                   	pop    %ebp$/;"	l
c0100edb	kernel.S	/^c0100edb:	c3                   	ret    $/;"	l
c0100edc	kernel.S	/^c0100edc <readseg>:$/;"	l
c0100edc	kernel.S	/^c0100edc:	55                   	push   %ebp$/;"	l
c0100edd	kernel.S	/^c0100edd:	89 e5                	mov    %esp,%ebp$/;"	l
c0100edf	kernel.S	/^c0100edf:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100ee2	kernel.S	/^c0100ee2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0100ee5	kernel.S	/^c0100ee5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ee8	kernel.S	/^c0100ee8:	01 d0                	add    %edx,%eax$/;"	l
c0100eea	kernel.S	/^c0100eea:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100eed	kernel.S	/^c0100eed:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100ef0	kernel.S	/^c0100ef0:	99                   	cltd   $/;"	l
c0100ef1	kernel.S	/^c0100ef1:	c1 ea 17             	shr    $0x17,%edx$/;"	l
c0100ef4	kernel.S	/^c0100ef4:	01 d0                	add    %edx,%eax$/;"	l
c0100ef6	kernel.S	/^c0100ef6:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
c0100efb	kernel.S	/^c0100efb:	29 d0                	sub    %edx,%eax$/;"	l
c0100efd	kernel.S	/^c0100efd:	f7 d8                	neg    %eax$/;"	l
c0100eff	kernel.S	/^c0100eff:	01 45 08             	add    %eax,0x8(%ebp)$/;"	l
c0100f02	kernel.S	/^c0100f02:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100f05	kernel.S	/^c0100f05:	8d 90 ff 01 00 00    	lea    0x1ff(%eax),%edx$/;"	l
c0100f0b	kernel.S	/^c0100f0b:	85 c0                	test   %eax,%eax$/;"	l
c0100f0d	kernel.S	/^c0100f0d:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100f10	kernel.S	/^c0100f10:	c1 f8 09             	sar    $0x9,%eax$/;"	l
c0100f13	kernel.S	/^c0100f13:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100f16	kernel.S	/^c0100f16:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0100f19	kernel.S	/^c0100f19:	eb 19                	jmp    c0100f34 <readseg+0x58>$/;"	l
c0100f1b	kernel.S	/^c0100f1b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100f1e	kernel.S	/^c0100f1e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100f21	kernel.S	/^c0100f21:	e8 da fe ff ff       	call   c0100e00 <readsect>$/;"	l
c0100f26	kernel.S	/^c0100f26:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100f29	kernel.S	/^c0100f29:	81 45 08 00 02 00 00 	addl   $0x200,0x8(%ebp)$/;"	l
c0100f30	kernel.S	/^c0100f30:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0100f34	kernel.S	/^c0100f34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100f37	kernel.S	/^c0100f37:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100f3a	kernel.S	/^c0100f3a:	72 df                	jb     c0100f1b <readseg+0x3f>$/;"	l
c0100f3c	kernel.S	/^c0100f3c:	90                   	nop$/;"	l
c0100f3d	kernel.S	/^c0100f3d:	c9                   	leave  $/;"	l
c0100f3e	kernel.S	/^c0100f3e:	c3                   	ret    $/;"	l
c0100f3f	kernel.S	/^c0100f3f <lgdt>:$/;"	l
c0100f3f	kernel.S	/^c0100f3f:	55                   	push   %ebp$/;"	l
c0100f40	kernel.S	/^c0100f40:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f42	kernel.S	/^c0100f42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100f45	kernel.S	/^c0100f45:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0100f48	kernel.S	/^c0100f48:	90                   	nop$/;"	l
c0100f49	kernel.S	/^c0100f49:	5d                   	pop    %ebp$/;"	l
c0100f4a	kernel.S	/^c0100f4a:	c3                   	ret    $/;"	l
c0100f4b	kernel.S	/^c0100f4b <get_kpdir>:$/;"	l
c0100f4b	kernel.S	/^c0100f4b:	55                   	push   %ebp$/;"	l
c0100f4c	kernel.S	/^c0100f4c:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f4e	kernel.S	/^c0100f4e:	b8 00 60 2c c0       	mov    $0xc02c6000,%eax$/;"	l
c0100f53	kernel.S	/^c0100f53:	5d                   	pop    %ebp$/;"	l
c0100f54	kernel.S	/^c0100f54:	c3                   	ret    $/;"	l
c0100f55	kernel.S	/^c0100f55 <init_page>:$/;"	l
c0100f55	kernel.S	/^c0100f55:	55                   	push   %ebp$/;"	l
c0100f56	kernel.S	/^c0100f56:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f58	kernel.S	/^c0100f58:	57                   	push   %edi$/;"	l
c0100f59	kernel.S	/^c0100f59:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0100f5c	kernel.S	/^c0100f5c:	b8 00 60 2c c0       	mov    $0xc02c6000,%eax$/;"	l
c0100f61	kernel.S	/^c0100f61:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0100f66	kernel.S	/^c0100f66:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100f69	kernel.S	/^c0100f69:	b8 00 70 2c c0       	mov    $0xc02c7000,%eax$/;"	l
c0100f6e	kernel.S	/^c0100f6e:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0100f73	kernel.S	/^c0100f73:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100f76	kernel.S	/^c0100f76:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100f79	kernel.S	/^c0100f79:	68 00 10 00 00       	push   $0x1000$/;"	l
c0100f7e	kernel.S	/^c0100f7e:	6a 00                	push   $0x0$/;"	l
c0100f80	kernel.S	/^c0100f80:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0100f83	kernel.S	/^c0100f83:	e8 ba 0f 00 00       	call   c0101f42 <memset>$/;"	l
c0100f88	kernel.S	/^c0100f88:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100f8b	kernel.S	/^c0100f8b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0100f92	kernel.S	/^c0100f92:	eb 4a                	jmp    c0100fde <init_page+0x89>$/;"	l
c0100f94	kernel.S	/^c0100f94:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100f97	kernel.S	/^c0100f97:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100f9e	kernel.S	/^c0100f9e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100fa1	kernel.S	/^c0100fa1:	01 d0                	add    %edx,%eax$/;"	l
c0100fa3	kernel.S	/^c0100fa3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100fa6	kernel.S	/^c0100fa6:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
c0100fac	kernel.S	/^c0100fac:	83 ca 07             	or     $0x7,%edx$/;"	l
c0100faf	kernel.S	/^c0100faf:	89 10                	mov    %edx,(%eax)$/;"	l
c0100fb1	kernel.S	/^c0100fb1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100fb4	kernel.S	/^c0100fb4:	05 00 03 00 00       	add    $0x300,%eax$/;"	l
c0100fb9	kernel.S	/^c0100fb9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100fc0	kernel.S	/^c0100fc0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100fc3	kernel.S	/^c0100fc3:	01 d0                	add    %edx,%eax$/;"	l
c0100fc5	kernel.S	/^c0100fc5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100fc8	kernel.S	/^c0100fc8:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
c0100fce	kernel.S	/^c0100fce:	83 ca 07             	or     $0x7,%edx$/;"	l
c0100fd1	kernel.S	/^c0100fd1:	89 10                	mov    %edx,(%eax)$/;"	l
c0100fd3	kernel.S	/^c0100fd3:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0100fda	kernel.S	/^c0100fda:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0100fde	kernel.S	/^c0100fde:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c0100fe2	kernel.S	/^c0100fe2:	76 b0                	jbe    c0100f94 <init_page+0x3f>$/;"	l
c0100fe4	kernel.S	/^c0100fe4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100fe7	kernel.S	/^c0100fe7:	8d 50 fc             	lea    -0x4(%eax),%edx$/;"	l
c0100fea	kernel.S	/^c0100fea:	b8 07 f0 ff 07       	mov    $0x7fff007,%eax$/;"	l
c0100fef	kernel.S	/^c0100fef:	89 d7                	mov    %edx,%edi$/;"	l
c0100ff1	kernel.S	/^c0100ff1:	fd                   	std    $/;"	l
c0100ff2	kernel.S	/^c0100ff2:	ab                   	stos   %eax,%es:(%edi)$/;"	l
c0100ff3	kernel.S	/^c0100ff3:	2d 00 10 00 00       	sub    $0x1000,%eax$/;"	l
c0100ff8	kernel.S	/^c0100ff8:	7d f8                	jge    c0100ff2 <init_page+0x9d>$/;"	l
c0100ffa	kernel.S	/^c0100ffa:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
c0101001	kernel.S	/^c0101001:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101004	kernel.S	/^c0101004:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0101007	kernel.S	/^c0101007:	25 ff ff 0f 00       	and    $0xfffff,%eax$/;"	l
c010100c	kernel.S	/^c010100c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010100f	kernel.S	/^c010100f:	89 c2                	mov    %eax,%edx$/;"	l
c0101011	kernel.S	/^c0101011:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0101014	kernel.S	/^c0101014:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0101019	kernel.S	/^c0101019:	09 d0                	or     %edx,%eax$/;"	l
c010101b	kernel.S	/^c010101b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010101e	kernel.S	/^c010101e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0101021	kernel.S	/^c0101021:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0101024	kernel.S	/^c0101024:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0101027	kernel.S	/^c0101027:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010102a	kernel.S	/^c010102a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c010102d	kernel.S	/^c010102d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0101030	kernel.S	/^c0101030:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101033	kernel.S	/^c0101033:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0101036	kernel.S	/^c0101036:	0f b6 45 df          	movzbl -0x21(%ebp),%eax$/;"	l
c010103a	kernel.S	/^c010103a:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c010103d	kernel.S	/^c010103d:	88 45 df             	mov    %al,-0x21(%ebp)$/;"	l
c0101040	kernel.S	/^c0101040:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101043	kernel.S	/^c0101043:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0101046	kernel.S	/^c0101046:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0101049	kernel.S	/^c0101049:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c010104c	kernel.S	/^c010104c:	90                   	nop$/;"	l
c010104d	kernel.S	/^c010104d:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
c0101050	kernel.S	/^c0101050:	c9                   	leave  $/;"	l
c0101051	kernel.S	/^c0101051:	c3                   	ret    $/;"	l
c0101052	kernel.S	/^c0101052 <set_segment>:$/;"	l
c0101052	kernel.S	/^c0101052:	55                   	push   %ebp$/;"	l
c0101053	kernel.S	/^c0101053:	89 e5                	mov    %esp,%ebp$/;"	l
c0101055	kernel.S	/^c0101055:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101058	kernel.S	/^c0101058:	66 c7 00 ff ff       	movw   $0xffff,(%eax)$/;"	l
c010105d	kernel.S	/^c010105d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101060	kernel.S	/^c0101060:	66 c7 40 02 00 00    	movw   $0x0,0x2(%eax)$/;"	l
c0101066	kernel.S	/^c0101066:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101069	kernel.S	/^c0101069:	c6 40 04 00          	movb   $0x0,0x4(%eax)$/;"	l
c010106d	kernel.S	/^c010106d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101070	kernel.S	/^c0101070:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101073	kernel.S	/^c0101073:	89 c2                	mov    %eax,%edx$/;"	l
c0101075	kernel.S	/^c0101075:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101078	kernel.S	/^c0101078:	89 d1                	mov    %edx,%ecx$/;"	l
c010107a	kernel.S	/^c010107a:	83 e1 0f             	and    $0xf,%ecx$/;"	l
c010107d	kernel.S	/^c010107d:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c0101081	kernel.S	/^c0101081:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c0101084	kernel.S	/^c0101084:	09 ca                	or     %ecx,%edx$/;"	l
c0101086	kernel.S	/^c0101086:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c0101089	kernel.S	/^c0101089:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010108c	kernel.S	/^c010108c:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c0101090	kernel.S	/^c0101090:	83 ca 10             	or     $0x10,%edx$/;"	l
c0101093	kernel.S	/^c0101093:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c0101096	kernel.S	/^c0101096:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101099	kernel.S	/^c0101099:	83 e0 03             	and    $0x3,%eax$/;"	l
c010109c	kernel.S	/^c010109c:	89 c2                	mov    %eax,%edx$/;"	l
c010109e	kernel.S	/^c010109e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010a1	kernel.S	/^c01010a1:	83 e2 03             	and    $0x3,%edx$/;"	l
c01010a4	kernel.S	/^c01010a4:	89 d1                	mov    %edx,%ecx$/;"	l
c01010a6	kernel.S	/^c01010a6:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
c01010a9	kernel.S	/^c01010a9:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c01010ad	kernel.S	/^c01010ad:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c01010b0	kernel.S	/^c01010b0:	09 ca                	or     %ecx,%edx$/;"	l
c01010b2	kernel.S	/^c01010b2:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c01010b5	kernel.S	/^c01010b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010b8	kernel.S	/^c01010b8:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c01010bc	kernel.S	/^c01010bc:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01010bf	kernel.S	/^c01010bf:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c01010c2	kernel.S	/^c01010c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010c5	kernel.S	/^c01010c5:	0f b6 50 06          	movzbl 0x6(%eax),%edx$/;"	l
c01010c9	kernel.S	/^c01010c9:	83 ca 0f             	or     $0xf,%edx$/;"	l
c01010cc	kernel.S	/^c01010cc:	88 50 06             	mov    %dl,0x6(%eax)$/;"	l
c01010cf	kernel.S	/^c01010cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010d2	kernel.S	/^c01010d2:	0f b6 50 06          	movzbl 0x6(%eax),%edx$/;"	l
c01010d6	kernel.S	/^c01010d6:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01010d9	kernel.S	/^c01010d9:	88 50 06             	mov    %dl,0x6(%eax)$/;"	l
c01010dc	kernel.S	/^c01010dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010df	kernel.S	/^c01010df:	0f b6 50 06          	movzbl 0x6(%eax),%edx$/;"	l
c01010e3	kernel.S	/^c01010e3:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c01010e6	kernel.S	/^c01010e6:	88 50 06             	mov    %dl,0x6(%eax)$/;"	l
c01010e9	kernel.S	/^c01010e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010ec	kernel.S	/^c01010ec:	0f b6 50 06          	movzbl 0x6(%eax),%edx$/;"	l
c01010f0	kernel.S	/^c01010f0:	83 ca 40             	or     $0x40,%edx$/;"	l
c01010f3	kernel.S	/^c01010f3:	88 50 06             	mov    %dl,0x6(%eax)$/;"	l
c01010f6	kernel.S	/^c01010f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010f9	kernel.S	/^c01010f9:	0f b6 50 06          	movzbl 0x6(%eax),%edx$/;"	l
c01010fd	kernel.S	/^c01010fd:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0101100	kernel.S	/^c0101100:	88 50 06             	mov    %dl,0x6(%eax)$/;"	l
c0101103	kernel.S	/^c0101103:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101106	kernel.S	/^c0101106:	c6 40 07 00          	movb   $0x0,0x7(%eax)$/;"	l
c010110a	kernel.S	/^c010110a:	90                   	nop$/;"	l
c010110b	kernel.S	/^c010110b:	5d                   	pop    %ebp$/;"	l
c010110c	kernel.S	/^c010110c:	c3                   	ret    $/;"	l
c010110d	kernel.S	/^c010110d <write_gdtr>:$/;"	l
c010110d	kernel.S	/^c010110d:	55                   	push   %ebp$/;"	l
c010110e	kernel.S	/^c010110e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101110	kernel.S	/^c0101110:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101113	kernel.S	/^c0101113:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101116	kernel.S	/^c0101116:	66 a3 80 70 2e c0    	mov    %ax,0xc02e7080$/;"	l
c010111c	kernel.S	/^c010111c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010111f	kernel.S	/^c010111f:	66 a3 82 70 2e c0    	mov    %ax,0xc02e7082$/;"	l
c0101125	kernel.S	/^c0101125:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101128	kernel.S	/^c0101128:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010112b	kernel.S	/^c010112b:	66 a3 84 70 2e c0    	mov    %ax,0xc02e7084$/;"	l
c0101131	kernel.S	/^c0101131:	68 80 70 2e c0       	push   $0xc02e7080$/;"	l
c0101136	kernel.S	/^c0101136:	e8 04 fe ff ff       	call   c0100f3f <lgdt>$/;"	l
c010113b	kernel.S	/^c010113b:	83 c4 04             	add    $0x4,%esp$/;"	l
c010113e	kernel.S	/^c010113e:	90                   	nop$/;"	l
c010113f	kernel.S	/^c010113f:	c9                   	leave  $/;"	l
c0101140	kernel.S	/^c0101140:	c3                   	ret    $/;"	l
c0101141	kernel.S	/^c0101141 <init_segment>:$/;"	l
c0101141	kernel.S	/^c0101141:	55                   	push   %ebp$/;"	l
c0101142	kernel.S	/^c0101142:	89 e5                	mov    %esp,%ebp$/;"	l
c0101144	kernel.S	/^c0101144:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101147	kernel.S	/^c0101147:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010114a	kernel.S	/^c010114a:	68 80 00 00 00       	push   $0x80$/;"	l
c010114f	kernel.S	/^c010114f:	6a 00                	push   $0x0$/;"	l
c0101151	kernel.S	/^c0101151:	68 00 70 2e c0       	push   $0xc02e7000$/;"	l
c0101156	kernel.S	/^c0101156:	e8 e7 0d 00 00       	call   c0101f42 <memset>$/;"	l
c010115b	kernel.S	/^c010115b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010115e	kernel.S	/^c010115e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101161	kernel.S	/^c0101161:	6a 0a                	push   $0xa$/;"	l
c0101163	kernel.S	/^c0101163:	6a 00                	push   $0x0$/;"	l
c0101165	kernel.S	/^c0101165:	68 08 70 2e c0       	push   $0xc02e7008$/;"	l
c010116a	kernel.S	/^c010116a:	e8 e3 fe ff ff       	call   c0101052 <set_segment>$/;"	l
c010116f	kernel.S	/^c010116f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101172	kernel.S	/^c0101172:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101175	kernel.S	/^c0101175:	6a 02                	push   $0x2$/;"	l
c0101177	kernel.S	/^c0101177:	6a 00                	push   $0x0$/;"	l
c0101179	kernel.S	/^c0101179:	68 10 70 2e c0       	push   $0xc02e7010$/;"	l
c010117e	kernel.S	/^c010117e:	e8 cf fe ff ff       	call   c0101052 <set_segment>$/;"	l
c0101183	kernel.S	/^c0101183:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101186	kernel.S	/^c0101186:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101189	kernel.S	/^c0101189:	68 80 00 00 00       	push   $0x80$/;"	l
c010118e	kernel.S	/^c010118e:	68 00 70 2e c0       	push   $0xc02e7000$/;"	l
c0101193	kernel.S	/^c0101193:	e8 75 ff ff ff       	call   c010110d <write_gdtr>$/;"	l
c0101198	kernel.S	/^c0101198:	83 c4 10             	add    $0x10,%esp$/;"	l
c010119b	kernel.S	/^c010119b:	90                   	nop$/;"	l
c010119c	kernel.S	/^c010119c:	c9                   	leave  $/;"	l
c010119d	kernel.S	/^c010119d:	c3                   	ret    $/;"	l
c010119e	kernel.S	/^c010119e <init_vmem>:$/;"	l
c010119e	kernel.S	/^c010119e:	55                   	push   %ebp$/;"	l
c010119f	kernel.S	/^c010119f:	89 e5                	mov    %esp,%ebp$/;"	l
c01011a1	kernel.S	/^c01011a1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01011a4	kernel.S	/^c01011a4:	a1 4c 91 2e c0       	mov    0xc02e914c,%eax$/;"	l
c01011a9	kernel.S	/^c01011a9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01011ac	kernel.S	/^c01011ac:	e8 9a fd ff ff       	call   c0100f4b <get_kpdir>$/;"	l
c01011b1	kernel.S	/^c01011b1:	89 c2                	mov    %eax,%edx$/;"	l
c01011b3	kernel.S	/^c01011b3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011b6	kernel.S	/^c01011b6:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c01011b9	kernel.S	/^c01011b9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01011bc	kernel.S	/^c01011bc:	01 d0                	add    %edx,%eax$/;"	l
c01011be	kernel.S	/^c01011be:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01011c1	kernel.S	/^c01011c1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011c4	kernel.S	/^c01011c4:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01011c7	kernel.S	/^c01011c7:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
c01011cc	kernel.S	/^c01011cc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01011cf	kernel.S	/^c01011cf:	ba 00 80 2e c0       	mov    $0xc02e8000,%edx$/;"	l
c01011d4	kernel.S	/^c01011d4:	01 d0                	add    %edx,%eax$/;"	l
c01011d6	kernel.S	/^c01011d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01011d9	kernel.S	/^c01011d9:	b8 00 80 2e c0       	mov    $0xc02e8000,%eax$/;"	l
c01011de	kernel.S	/^c01011de:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01011e3	kernel.S	/^c01011e3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01011e8	kernel.S	/^c01011e8:	83 c8 07             	or     $0x7,%eax$/;"	l
c01011eb	kernel.S	/^c01011eb:	89 c2                	mov    %eax,%edx$/;"	l
c01011ed	kernel.S	/^c01011ed:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01011f0	kernel.S	/^c01011f0:	89 10                	mov    %edx,(%eax)$/;"	l
c01011f2	kernel.S	/^c01011f2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011f5	kernel.S	/^c01011f5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01011f8	kernel.S	/^c01011f8:	eb 1d                	jmp    c0101217 <init_vmem+0x79>$/;"	l
c01011fa	kernel.S	/^c01011fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01011fd	kernel.S	/^c01011fd:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0101202	kernel.S	/^c0101202:	83 c8 07             	or     $0x7,%eax$/;"	l
c0101205	kernel.S	/^c0101205:	89 c2                	mov    %eax,%edx$/;"	l
c0101207	kernel.S	/^c0101207:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010120a	kernel.S	/^c010120a:	89 10                	mov    %edx,(%eax)$/;"	l
c010120c	kernel.S	/^c010120c:	83 45 f4 04          	addl   $0x4,-0xc(%ebp)$/;"	l
c0101210	kernel.S	/^c0101210:	81 45 f0 00 10 00 00 	addl   $0x1000,-0x10(%ebp)$/;"	l
c0101217	kernel.S	/^c0101217:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010121a	kernel.S	/^c010121a:	05 00 f9 15 00       	add    $0x15f900,%eax$/;"	l
c010121f	kernel.S	/^c010121f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0101222	kernel.S	/^c0101222:	77 d6                	ja     c01011fa <init_vmem+0x5c>$/;"	l
c0101224	kernel.S	/^c0101224:	a1 4c 91 2e c0       	mov    0xc02e914c,%eax$/;"	l
c0101229	kernel.S	/^c0101229:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010122c	kernel.S	/^c010122c:	68 00 f9 15 00       	push   $0x15f900$/;"	l
c0101231	kernel.S	/^c0101231:	68 60 2b 10 c0       	push   $0xc0102b60$/;"	l
c0101236	kernel.S	/^c0101236:	50                   	push   %eax$/;"	l
c0101237	kernel.S	/^c0101237:	e8 4e 0e 00 00       	call   c010208a <memcpy>$/;"	l
c010123c	kernel.S	/^c010123c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010123f	kernel.S	/^c010123f:	90                   	nop$/;"	l
c0101240	kernel.S	/^c0101240:	c9                   	leave  $/;"	l
c0101241	kernel.S	/^c0101241:	c3                   	ret    $/;"	l
c0101242	kernel.S	/^c0101242 <init>:$/;"	l
c0101242	kernel.S	/^c0101242:	55                   	push   %ebp$/;"	l
c0101243	kernel.S	/^c0101243:	89 e5                	mov    %esp,%ebp$/;"	l
c0101245	kernel.S	/^c0101245:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101248	kernel.S	/^c0101248:	e8 08 fd ff ff       	call   c0100f55 <init_page>$/;"	l
c010124d	kernel.S	/^c010124d:	81 c4 00 00 00 c0    	add    $0xc0000000,%esp$/;"	l
c0101253	kernel.S	/^c0101253:	b8 02 13 10 c0       	mov    $0xc0101302,%eax$/;"	l
c0101258	kernel.S	/^c0101258:	ff e0                	jmp    *%eax$/;"	l
c010125a	kernel.S	/^c010125a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010125d	kernel.S	/^c010125d:	68 47 25 26 c0       	push   $0xc0262547$/;"	l
c0101262	kernel.S	/^c0101262:	e8 b8 ed ff ff       	call   c010001f <printk>$/;"	l
c0101267	kernel.S	/^c0101267:	83 c4 10             	add    $0x10,%esp$/;"	l
c010126a	kernel.S	/^c010126a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010126d	kernel.S	/^c010126d:	6a 20                	push   $0x20$/;"	l
c010126f	kernel.S	/^c010126f:	68 5b 25 26 c0       	push   $0xc026255b$/;"	l
c0101274	kernel.S	/^c0101274:	e8 87 ed ff ff       	call   c0100000 <abort>$/;"	l
c0101279	kernel.S	/^c0101279:	83 c4 10             	add    $0x10,%esp$/;"	l
c010127c	kernel.S	/^c010127c:	90                   	nop$/;"	l
c010127d	kernel.S	/^c010127d:	c9                   	leave  $/;"	l
c010127e	kernel.S	/^c010127e:	c3                   	ret    $/;"	l
c010127f	kernel.S	/^c010127f <INIT_WORK>:$/;"	l
c010127f	kernel.S	/^c010127f:	55                   	push   %ebp$/;"	l
c0101280	kernel.S	/^c0101280:	89 e5                	mov    %esp,%ebp$/;"	l
c0101282	kernel.S	/^c0101282:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101285	kernel.S	/^c0101285:	e8 b7 fe ff ff       	call   c0101141 <init_segment>$/;"	l
c010128a	kernel.S	/^c010128a:	e8 22 f5 ff ff       	call   c01007b1 <init_pcb>$/;"	l
c010128f	kernel.S	/^c010128f:	e8 6d f2 ff ff       	call   c0100501 <init_pte_info>$/;"	l
c0101294	kernel.S	/^c0101294:	e8 07 f0 ff ff       	call   c01002a0 <init_vmem_addr>$/;"	l
c0101299	kernel.S	/^c0101299:	e8 dd ed ff ff       	call   c010007b <init_serial>$/;"	l
c010129e	kernel.S	/^c010129e:	a1 4c 91 2e c0       	mov    0xc02e914c,%eax$/;"	l
c01012a3	kernel.S	/^c01012a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01012a6	kernel.S	/^c01012a6:	50                   	push   %eax$/;"	l
c01012a7	kernel.S	/^c01012a7:	68 69 25 26 c0       	push   $0xc0262569$/;"	l
c01012ac	kernel.S	/^c01012ac:	e8 6e ed ff ff       	call   c010001f <printk>$/;"	l
c01012b1	kernel.S	/^c01012b1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01012b4	kernel.S	/^c01012b4:	e8 06 05 00 00       	call   c01017bf <init_i8259>$/;"	l
c01012b9	kernel.S	/^c01012b9:	e8 66 07 00 00       	call   c0101a24 <init_idt>$/;"	l
c01012be	kernel.S	/^c01012be:	e8 53 f1 ff ff       	call   c0100416 <init_timer>$/;"	l
c01012c3	kernel.S	/^c01012c3:	e8 d6 fe ff ff       	call   c010119e <init_vmem>$/;"	l
c01012c8	kernel.S	/^c01012c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01012cb	kernel.S	/^c01012cb:	68 75 04 10 c0       	push   $0xc0100475$/;"	l
c01012d0	kernel.S	/^c01012d0:	6a 00                	push   $0x0$/;"	l
c01012d2	kernel.S	/^c01012d2:	e8 88 02 00 00       	call   c010155f <add_irq_handle>$/;"	l
c01012d7	kernel.S	/^c01012d7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01012da	kernel.S	/^c01012da:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01012dd	kernel.S	/^c01012dd:	68 e1 02 10 c0       	push   $0xc01002e1$/;"	l
c01012e2	kernel.S	/^c01012e2:	6a 01                	push   $0x1$/;"	l
c01012e4	kernel.S	/^c01012e4:	e8 76 02 00 00       	call   c010155f <add_irq_handle>$/;"	l
c01012e9	kernel.S	/^c01012e9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01012ec	kernel.S	/^c01012ec:	90                   	nop$/;"	l
c01012ed	kernel.S	/^c01012ed:	c9                   	leave  $/;"	l
c01012ee	kernel.S	/^c01012ee:	c3                   	ret    $/;"	l
c01012ef	kernel.S	/^c01012ef <TEST_WORK>:$/;"	l
c01012ef	kernel.S	/^c01012ef:	55                   	push   %ebp$/;"	l
c01012f0	kernel.S	/^c01012f0:	89 e5                	mov    %esp,%ebp$/;"	l
c01012f2	kernel.S	/^c01012f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01012f5	kernel.S	/^c01012f5:	e8 63 ee ff ff       	call   c010015d <serial_output_test>$/;"	l
c01012fa	kernel.S	/^c01012fa:	e8 87 00 00 00       	call   c0101386 <printk_test>$/;"	l
c01012ff	kernel.S	/^c01012ff:	90                   	nop$/;"	l
c0101300	kernel.S	/^c0101300:	c9                   	leave  $/;"	l
c0101301	kernel.S	/^c0101301:	c3                   	ret    $/;"	l
c0101302	kernel.S	/^c0101302 <main>:$/;"	l
c0101302	kernel.S	/^c0101302:	8d 4c 24 04          	lea    0x4(%esp),%ecx$/;"	l
c0101306	kernel.S	/^c0101306:	83 e4 f0             	and    $0xfffffff0,%esp$/;"	l
c0101309	kernel.S	/^c0101309:	ff 71 fc             	pushl  -0x4(%ecx)$/;"	l
c010130c	kernel.S	/^c010130c:	55                   	push   %ebp$/;"	l
c010130d	kernel.S	/^c010130d:	89 e5                	mov    %esp,%ebp$/;"	l
c010130f	kernel.S	/^c010130f:	51                   	push   %ecx$/;"	l
c0101310	kernel.S	/^c0101310:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0101313	kernel.S	/^c0101313:	e8 67 ff ff ff       	call   c010127f <INIT_WORK>$/;"	l
c0101318	kernel.S	/^c0101318:	e8 d2 ff ff ff       	call   c01012ef <TEST_WORK>$/;"	l
c010131d	kernel.S	/^c010131d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101320	kernel.S	/^c0101320:	68 77 25 26 c0       	push   $0xc0262577$/;"	l
c0101325	kernel.S	/^c0101325:	e8 f5 ec ff ff       	call   c010001f <printk>$/;"	l
c010132a	kernel.S	/^c010132a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010132d	kernel.S	/^c010132d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101330	kernel.S	/^c0101330:	68 00 00 a0 00       	push   $0xa00000$/;"	l
c0101335	kernel.S	/^c0101335:	e8 22 f6 ff ff       	call   c010095c <create_process>$/;"	l
c010133a	kernel.S	/^c010133a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010133d	kernel.S	/^c010133d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101340	kernel.S	/^c0101340:	bc 00 00 00 c0       	mov    $0xc0000000,%esp$/;"	l
c0101345	kernel.S	/^c0101345:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010134a	kernel.S	/^c010134a:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010134d	kernel.S	/^c010134d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101350	kernel.S	/^c0101350:	68 87 25 26 c0       	push   $0xc0262587$/;"	l
c0101355	kernel.S	/^c0101355:	e8 c5 ec ff ff       	call   c010001f <printk>$/;"	l
c010135a	kernel.S	/^c010135a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010135d	kernel.S	/^c010135d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101360	kernel.S	/^c0101360:	ff d0                	call   *%eax$/;"	l
c0101362	kernel.S	/^c0101362:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101365	kernel.S	/^c0101365:	68 9a 25 26 c0       	push   $0xc026259a$/;"	l
c010136a	kernel.S	/^c010136a:	e8 b0 ec ff ff       	call   c010001f <printk>$/;"	l
c010136f	kernel.S	/^c010136f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101372	kernel.S	/^c0101372:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101375	kernel.S	/^c0101375:	6a 64                	push   $0x64$/;"	l
c0101377	kernel.S	/^c0101377:	68 5b 25 26 c0       	push   $0xc026255b$/;"	l
c010137c	kernel.S	/^c010137c:	e8 7f ec ff ff       	call   c0100000 <abort>$/;"	l
c0101381	kernel.S	/^c0101381:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101384	kernel.S	/^c0101384:	eb fe                	jmp    c0101384 <main+0x82>$/;"	l
c0101386	kernel.S	/^c0101386 <printk_test>:$/;"	l
c0101386	kernel.S	/^c0101386:	55                   	push   %ebp$/;"	l
c0101387	kernel.S	/^c0101387:	89 e5                	mov    %esp,%ebp$/;"	l
c0101389	kernel.S	/^c0101389:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010138c	kernel.S	/^c010138c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010138f	kernel.S	/^c010138f:	68 b4 25 26 c0       	push   $0xc02625b4$/;"	l
c0101394	kernel.S	/^c0101394:	e8 86 ec ff ff       	call   c010001f <printk>$/;"	l
c0101399	kernel.S	/^c0101399:	83 c4 10             	add    $0x10,%esp$/;"	l
c010139c	kernel.S	/^c010139c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010139f	kernel.S	/^c010139f:	68 ca 25 26 c0       	push   $0xc02625ca$/;"	l
c01013a4	kernel.S	/^c01013a4:	e8 76 ec ff ff       	call   c010001f <printk>$/;"	l
c01013a9	kernel.S	/^c01013a9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01013ac	kernel.S	/^c01013ac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01013af	kernel.S	/^c01013af:	68 e4 25 26 c0       	push   $0xc02625e4$/;"	l
c01013b4	kernel.S	/^c01013b4:	e8 66 ec ff ff       	call   c010001f <printk>$/;"	l
c01013b9	kernel.S	/^c01013b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01013bc	kernel.S	/^c01013bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01013bf	kernel.S	/^c01013bf:	68 20 26 26 c0       	push   $0xc0262620$/;"	l
c01013c4	kernel.S	/^c01013c4:	e8 56 ec ff ff       	call   c010001f <printk>$/;"	l
c01013c9	kernel.S	/^c01013c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01013cc	kernel.S	/^c01013cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01013cf	kernel.S	/^c01013cf:	68 54 26 26 c0       	push   $0xc0262654$/;"	l
c01013d4	kernel.S	/^c01013d4:	e8 46 ec ff ff       	call   c010001f <printk>$/;"	l
c01013d9	kernel.S	/^c01013d9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01013dc	kernel.S	/^c01013dc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01013df	kernel.S	/^c01013df:	68 d0 26 26 c0       	push   $0xc02626d0$/;"	l
c01013e4	kernel.S	/^c01013e4:	e8 36 ec ff ff       	call   c010001f <printk>$/;"	l
c01013e9	kernel.S	/^c01013e9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01013ec	kernel.S	/^c01013ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01013ef	kernel.S	/^c01013ef:	68 f1 26 26 c0       	push   $0xc02626f1$/;"	l
c01013f4	kernel.S	/^c01013f4:	e8 26 ec ff ff       	call   c010001f <printk>$/;"	l
c01013f9	kernel.S	/^c01013f9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01013fc	kernel.S	/^c01013fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01013ff	kernel.S	/^c01013ff:	68 10 27 26 c0       	push   $0xc0262710$/;"	l
c0101404	kernel.S	/^c0101404:	e8 16 ec ff ff       	call   c010001f <printk>$/;"	l
c0101409	kernel.S	/^c0101409:	83 c4 10             	add    $0x10,%esp$/;"	l
c010140c	kernel.S	/^c010140c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010140f	kernel.S	/^c010140f:	68 e4 25 26 c0       	push   $0xc02625e4$/;"	l
c0101414	kernel.S	/^c0101414:	e8 06 ec ff ff       	call   c010001f <printk>$/;"	l
c0101419	kernel.S	/^c0101419:	83 c4 10             	add    $0x10,%esp$/;"	l
c010141c	kernel.S	/^c010141c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010141f	kernel.S	/^c010141f:	68 8f 27 26 c0       	push   $0xc026278f$/;"	l
c0101424	kernel.S	/^c0101424:	e8 f6 eb ff ff       	call   c010001f <printk>$/;"	l
c0101429	kernel.S	/^c0101429:	83 c4 10             	add    $0x10,%esp$/;"	l
c010142c	kernel.S	/^c010142c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010142f	kernel.S	/^c010142f:	68 a0 27 26 c0       	push   $0xc02627a0$/;"	l
c0101434	kernel.S	/^c0101434:	e8 e6 eb ff ff       	call   c010001f <printk>$/;"	l
c0101439	kernel.S	/^c0101439:	83 c4 10             	add    $0x10,%esp$/;"	l
c010143c	kernel.S	/^c010143c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010143f	kernel.S	/^c010143f:	68 d9 27 26 c0       	push   $0xc02627d9$/;"	l
c0101444	kernel.S	/^c0101444:	6a 74                	push   $0x74$/;"	l
c0101446	kernel.S	/^c0101446:	68 db 27 26 c0       	push   $0xc02627db$/;"	l
c010144b	kernel.S	/^c010144b:	68 df 27 26 c0       	push   $0xc02627df$/;"	l
c0101450	kernel.S	/^c0101450:	68 e0 27 26 c0       	push   $0xc02627e0$/;"	l
c0101455	kernel.S	/^c0101455:	68 e7 27 26 c0       	push   $0xc02627e7$/;"	l
c010145a	kernel.S	/^c010145a:	e8 c0 eb ff ff       	call   c010001f <printk>$/;"	l
c010145f	kernel.S	/^c010145f:	83 c4 20             	add    $0x20,%esp$/;"	l
c0101462	kernel.S	/^c0101462:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101465	kernel.S	/^c0101465:	6a 62                	push   $0x62$/;"	l
c0101467	kernel.S	/^c0101467:	6a 61                	push   $0x61$/;"	l
c0101469	kernel.S	/^c0101469:	6a 6c                	push   $0x6c$/;"	l
c010146b	kernel.S	/^c010146b:	6a 53                	push   $0x53$/;"	l
c010146d	kernel.S	/^c010146d:	6a 4f                	push   $0x4f$/;"	l
c010146f	kernel.S	/^c010146f:	68 f9 27 26 c0       	push   $0xc02627f9$/;"	l
c0101474	kernel.S	/^c0101474:	e8 a6 eb ff ff       	call   c010001f <printk>$/;"	l
c0101479	kernel.S	/^c0101479:	83 c4 20             	add    $0x20,%esp$/;"	l
c010147c	kernel.S	/^c010147c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010147f	kernel.S	/^c010147f:	68 00 00 10 00       	push   $0x100000$/;"	l
c0101484	kernel.S	/^c0101484:	68 08 28 26 c0       	push   $0xc0262808$/;"	l
c0101489	kernel.S	/^c0101489:	68 00 00 10 00       	push   $0x100000$/;"	l
c010148e	kernel.S	/^c010148e:	68 40 28 26 c0       	push   $0xc0262840$/;"	l
c0101493	kernel.S	/^c0101493:	68 6d 28 26 c0       	push   $0xc026286d$/;"	l
c0101498	kernel.S	/^c0101498:	68 76 28 26 c0       	push   $0xc0262876$/;"	l
c010149d	kernel.S	/^c010149d:	68 7c 28 26 c0       	push   $0xc026287c$/;"	l
c01014a2	kernel.S	/^c01014a2:	e8 78 eb ff ff       	call   c010001f <printk>$/;"	l
c01014a7	kernel.S	/^c01014a7:	83 c4 20             	add    $0x20,%esp$/;"	l
c01014aa	kernel.S	/^c01014aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01014ad	kernel.S	/^c01014ad:	68 d0 26 26 c0       	push   $0xc02626d0$/;"	l
c01014b2	kernel.S	/^c01014b2:	e8 68 eb ff ff       	call   c010001f <printk>$/;"	l
c01014b7	kernel.S	/^c01014b7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01014ba	kernel.S	/^c01014ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01014bd	kernel.S	/^c01014bd:	68 f1 26 26 c0       	push   $0xc02626f1$/;"	l
c01014c2	kernel.S	/^c01014c2:	e8 58 eb ff ff       	call   c010001f <printk>$/;"	l
c01014c7	kernel.S	/^c01014c7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01014ca	kernel.S	/^c01014ca:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01014cd	kernel.S	/^c01014cd:	68 18 db 00 00       	push   $0xdb18$/;"	l
c01014d2	kernel.S	/^c01014d2:	68 c8 01 00 00       	push   $0x1c8$/;"	l
c01014d7	kernel.S	/^c01014d7:	6a 7b                	push   $0x7b$/;"	l
c01014d9	kernel.S	/^c01014d9:	6a 02                	push   $0x2$/;"	l
c01014db	kernel.S	/^c01014db:	6a 01                	push   $0x1$/;"	l
c01014dd	kernel.S	/^c01014dd:	6a 01                	push   $0x1$/;"	l
c01014df	kernel.S	/^c01014df:	68 a1 28 26 c0       	push   $0xc02628a1$/;"	l
c01014e4	kernel.S	/^c01014e4:	e8 36 eb ff ff       	call   c010001f <printk>$/;"	l
c01014e9	kernel.S	/^c01014e9:	83 c4 20             	add    $0x20,%esp$/;"	l
c01014ec	kernel.S	/^c01014ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01014ef	kernel.S	/^c01014ef:	68 8e 8e 01 00       	push   $0x18e8e$/;"	l
c01014f4	kernel.S	/^c01014f4:	68 00 80 ff ff       	push   $0xffff8000$/;"	l
c01014f9	kernel.S	/^c01014f9:	68 01 df ce ab       	push   $0xabcedf01$/;"	l
c01014fe	kernel.S	/^c01014fe:	68 00 00 00 80       	push   $0x80000000$/;"	l
c0101503	kernel.S	/^c0101503:	6a ff                	push   $0xffffffff$/;"	l
c0101505	kernel.S	/^c0101505:	6a 00                	push   $0x0$/;"	l
c0101507	kernel.S	/^c0101507:	68 bd 28 26 c0       	push   $0xc02628bd$/;"	l
c010150c	kernel.S	/^c010150c:	e8 0e eb ff ff       	call   c010001f <printk>$/;"	l
c0101511	kernel.S	/^c0101511:	83 c4 20             	add    $0x20,%esp$/;"	l
c0101514	kernel.S	/^c0101514:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101517	kernel.S	/^c0101517:	68 8e 8e 01 00       	push   $0x18e8e$/;"	l
c010151c	kernel.S	/^c010151c:	68 00 80 ff ff       	push   $0xffff8000$/;"	l
c0101521	kernel.S	/^c0101521:	68 01 df ce ab       	push   $0xabcedf01$/;"	l
c0101526	kernel.S	/^c0101526:	68 00 00 00 80       	push   $0x80000000$/;"	l
c010152b	kernel.S	/^c010152b:	6a ff                	push   $0xffffffff$/;"	l
c010152d	kernel.S	/^c010152d:	6a 00                	push   $0x0$/;"	l
c010152f	kernel.S	/^c010152f:	68 d5 28 26 c0       	push   $0xc02628d5$/;"	l
c0101534	kernel.S	/^c0101534:	e8 e6 ea ff ff       	call   c010001f <printk>$/;"	l
c0101539	kernel.S	/^c0101539:	83 c4 20             	add    $0x20,%esp$/;"	l
c010153c	kernel.S	/^c010153c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010153f	kernel.S	/^c010153f:	68 a0 27 26 c0       	push   $0xc02627a0$/;"	l
c0101544	kernel.S	/^c0101544:	e8 d6 ea ff ff       	call   c010001f <printk>$/;"	l
c0101549	kernel.S	/^c0101549:	83 c4 10             	add    $0x10,%esp$/;"	l
c010154c	kernel.S	/^c010154c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010154f	kernel.S	/^c010154f:	68 ed 28 26 c0       	push   $0xc02628ed$/;"	l
c0101554	kernel.S	/^c0101554:	e8 c6 ea ff ff       	call   c010001f <printk>$/;"	l
c0101559	kernel.S	/^c0101559:	83 c4 10             	add    $0x10,%esp$/;"	l
c010155c	kernel.S	/^c010155c:	90                   	nop$/;"	l
c010155d	kernel.S	/^c010155d:	c9                   	leave  $/;"	l
c010155e	kernel.S	/^c010155e:	c3                   	ret    $/;"	l
c010155f	kernel.S	/^c010155f <add_irq_handle>:$/;"	l
c010155f	kernel.S	/^c010155f:	55                   	push   %ebp$/;"	l
c0101560	kernel.S	/^c0101560:	89 e5                	mov    %esp,%ebp$/;"	l
c0101562	kernel.S	/^c0101562:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101565	kernel.S	/^c0101565:	83 7d 08 0f          	cmpl   $0xf,0x8(%ebp)$/;"	l
c0101569	kernel.S	/^c0101569:	7e 12                	jle    c010157d <add_irq_handle+0x1e>$/;"	l
c010156b	kernel.S	/^c010156b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010156e	kernel.S	/^c010156e:	6a 13                	push   $0x13$/;"	l
c0101570	kernel.S	/^c0101570:	68 08 29 26 c0       	push   $0xc0262908$/;"	l
c0101575	kernel.S	/^c0101575:	e8 86 ea ff ff       	call   c0100000 <abort>$/;"	l
c010157a	kernel.S	/^c010157a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010157d	kernel.S	/^c010157d:	a1 40 91 2e c0       	mov    0xc02e9140,%eax$/;"	l
c0101582	kernel.S	/^c0101582:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c0101585	kernel.S	/^c0101585:	7e 12                	jle    c0101599 <add_irq_handle+0x3a>$/;"	l
c0101587	kernel.S	/^c0101587:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010158a	kernel.S	/^c010158a:	6a 14                	push   $0x14$/;"	l
c010158c	kernel.S	/^c010158c:	68 08 29 26 c0       	push   $0xc0262908$/;"	l
c0101591	kernel.S	/^c0101591:	e8 6a ea ff ff       	call   c0100000 <abort>$/;"	l
c0101596	kernel.S	/^c0101596:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101599	kernel.S	/^c0101599:	a1 40 91 2e c0       	mov    0xc02e9140,%eax$/;"	l
c010159e	kernel.S	/^c010159e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01015a1	kernel.S	/^c01015a1:	89 15 40 91 2e c0    	mov    %edx,0xc02e9140$/;"	l
c01015a7	kernel.S	/^c01015a7:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01015aa	kernel.S	/^c01015aa:	05 00 90 2e c0       	add    $0xc02e9000,%eax$/;"	l
c01015af	kernel.S	/^c01015af:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01015b2	kernel.S	/^c01015b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01015b5	kernel.S	/^c01015b5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01015b8	kernel.S	/^c01015b8:	89 10                	mov    %edx,(%eax)$/;"	l
c01015ba	kernel.S	/^c01015ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01015bd	kernel.S	/^c01015bd:	8b 14 85 00 91 2e c0 	mov    -0x3fd16f00(,%eax,4),%edx$/;"	l
c01015c4	kernel.S	/^c01015c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01015c7	kernel.S	/^c01015c7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01015ca	kernel.S	/^c01015ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01015cd	kernel.S	/^c01015cd:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01015d0	kernel.S	/^c01015d0:	89 14 85 00 91 2e c0 	mov    %edx,-0x3fd16f00(,%eax,4)$/;"	l
c01015d7	kernel.S	/^c01015d7:	90                   	nop$/;"	l
c01015d8	kernel.S	/^c01015d8:	c9                   	leave  $/;"	l
c01015d9	kernel.S	/^c01015d9:	c3                   	ret    $/;"	l
c01015da	kernel.S	/^c01015da <irq_handle>:$/;"	l
c01015da	kernel.S	/^c01015da:	55                   	push   %ebp$/;"	l
c01015db	kernel.S	/^c01015db:	89 e5                	mov    %esp,%ebp$/;"	l
c01015dd	kernel.S	/^c01015dd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01015e0	kernel.S	/^c01015e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01015e3	kernel.S	/^c01015e3:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c01015e6	kernel.S	/^c01015e6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01015e9	kernel.S	/^c01015e9:	81 7d f0 80 00 00 00 	cmpl   $0x80,-0x10(%ebp)$/;"	l
c01015f0	kernel.S	/^c01015f0:	75 13                	jne    c0101605 <irq_handle+0x2b>$/;"	l
c01015f2	kernel.S	/^c01015f2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01015f5	kernel.S	/^c01015f5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01015f8	kernel.S	/^c01015f8:	e8 ee eb ff ff       	call   c01001eb <do_syscall>$/;"	l
c01015fd	kernel.S	/^c01015fd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101600	kernel.S	/^c0101600:	e9 b7 01 00 00       	jmp    c01017bc <irq_handle+0x1e2>$/;"	l
c0101605	kernel.S	/^c0101605:	81 7d f0 e7 03 00 00 	cmpl   $0x3e7,-0x10(%ebp)$/;"	l
c010160c	kernel.S	/^c010160c:	0f 8f 62 01 00 00    	jg     c0101774 <irq_handle+0x19a>$/;"	l
c0101612	kernel.S	/^c0101612:	83 7d f0 0e          	cmpl   $0xe,-0x10(%ebp)$/;"	l
c0101616	kernel.S	/^c0101616:	0f 87 20 01 00 00    	ja     c010173c <irq_handle+0x162>$/;"	l
c010161c	kernel.S	/^c010161c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010161f	kernel.S	/^c010161f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0101622	kernel.S	/^c0101622:	05 48 2a 26 c0       	add    $0xc0262a48,%eax$/;"	l
c0101627	kernel.S	/^c0101627:	8b 00                	mov    (%eax),%eax$/;"	l
c0101629	kernel.S	/^c0101629:	ff e0                	jmp    *%eax$/;"	l
c010162b	kernel.S	/^c010162b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010162e	kernel.S	/^c010162e:	68 20 29 26 c0       	push   $0xc0262920$/;"	l
c0101633	kernel.S	/^c0101633:	e8 e7 e9 ff ff       	call   c010001f <printk>$/;"	l
c0101638	kernel.S	/^c0101638:	83 c4 10             	add    $0x10,%esp$/;"	l
c010163b	kernel.S	/^c010163b:	e9 0d 01 00 00       	jmp    c010174d <irq_handle+0x173>$/;"	l
c0101640	kernel.S	/^c0101640:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101643	kernel.S	/^c0101643:	68 2f 29 26 c0       	push   $0xc026292f$/;"	l
c0101648	kernel.S	/^c0101648:	e8 d2 e9 ff ff       	call   c010001f <printk>$/;"	l
c010164d	kernel.S	/^c010164d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101650	kernel.S	/^c0101650:	e9 f8 00 00 00       	jmp    c010174d <irq_handle+0x173>$/;"	l
c0101655	kernel.S	/^c0101655:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101658	kernel.S	/^c0101658:	68 42 29 26 c0       	push   $0xc0262942$/;"	l
c010165d	kernel.S	/^c010165d:	e8 bd e9 ff ff       	call   c010001f <printk>$/;"	l
c0101662	kernel.S	/^c0101662:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101665	kernel.S	/^c0101665:	e9 e3 00 00 00       	jmp    c010174d <irq_handle+0x173>$/;"	l
c010166a	kernel.S	/^c010166a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010166d	kernel.S	/^c010166d:	68 4f 29 26 c0       	push   $0xc026294f$/;"	l
c0101672	kernel.S	/^c0101672:	e8 a8 e9 ff ff       	call   c010001f <printk>$/;"	l
c0101677	kernel.S	/^c0101677:	83 c4 10             	add    $0x10,%esp$/;"	l
c010167a	kernel.S	/^c010167a:	e9 ce 00 00 00       	jmp    c010174d <irq_handle+0x173>$/;"	l
c010167f	kernel.S	/^c010167f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101682	kernel.S	/^c0101682:	68 5a 29 26 c0       	push   $0xc026295a$/;"	l
c0101687	kernel.S	/^c0101687:	e8 93 e9 ff ff       	call   c010001f <printk>$/;"	l
c010168c	kernel.S	/^c010168c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010168f	kernel.S	/^c010168f:	e9 b9 00 00 00       	jmp    c010174d <irq_handle+0x173>$/;"	l
c0101694	kernel.S	/^c0101694:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101697	kernel.S	/^c0101697:	68 69 29 26 c0       	push   $0xc0262969$/;"	l
c010169c	kernel.S	/^c010169c:	e8 7e e9 ff ff       	call   c010001f <printk>$/;"	l
c01016a1	kernel.S	/^c01016a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01016a4	kernel.S	/^c01016a4:	e9 a4 00 00 00       	jmp    c010174d <irq_handle+0x173>$/;"	l
c01016a9	kernel.S	/^c01016a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01016ac	kernel.S	/^c01016ac:	68 7a 29 26 c0       	push   $0xc026297a$/;"	l
c01016b1	kernel.S	/^c01016b1:	e8 69 e9 ff ff       	call   c010001f <printk>$/;"	l
c01016b6	kernel.S	/^c01016b6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01016b9	kernel.S	/^c01016b9:	e9 8f 00 00 00       	jmp    c010174d <irq_handle+0x173>$/;"	l
c01016be	kernel.S	/^c01016be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01016c1	kernel.S	/^c01016c1:	68 96 29 26 c0       	push   $0xc0262996$/;"	l
c01016c6	kernel.S	/^c01016c6:	e8 54 e9 ff ff       	call   c010001f <printk>$/;"	l
c01016cb	kernel.S	/^c01016cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01016ce	kernel.S	/^c01016ce:	eb 7d                	jmp    c010174d <irq_handle+0x173>$/;"	l
c01016d0	kernel.S	/^c01016d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01016d3	kernel.S	/^c01016d3:	68 a5 29 26 c0       	push   $0xc02629a5$/;"	l
c01016d8	kernel.S	/^c01016d8:	e8 42 e9 ff ff       	call   c010001f <printk>$/;"	l
c01016dd	kernel.S	/^c01016dd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01016e0	kernel.S	/^c01016e0:	eb 6b                	jmp    c010174d <irq_handle+0x173>$/;"	l
c01016e2	kernel.S	/^c01016e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01016e5	kernel.S	/^c01016e5:	68 c3 29 26 c0       	push   $0xc02629c3$/;"	l
c01016ea	kernel.S	/^c01016ea:	e8 30 e9 ff ff       	call   c010001f <printk>$/;"	l
c01016ef	kernel.S	/^c01016ef:	83 c4 10             	add    $0x10,%esp$/;"	l
c01016f2	kernel.S	/^c01016f2:	eb 59                	jmp    c010174d <irq_handle+0x173>$/;"	l
c01016f4	kernel.S	/^c01016f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01016f7	kernel.S	/^c01016f7:	68 d1 29 26 c0       	push   $0xc02629d1$/;"	l
c01016fc	kernel.S	/^c01016fc:	e8 1e e9 ff ff       	call   c010001f <printk>$/;"	l
c0101701	kernel.S	/^c0101701:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101704	kernel.S	/^c0101704:	eb 47                	jmp    c010174d <irq_handle+0x173>$/;"	l
c0101706	kernel.S	/^c0101706:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101709	kernel.S	/^c0101709:	68 e7 29 26 c0       	push   $0xc02629e7$/;"	l
c010170e	kernel.S	/^c010170e:	e8 0c e9 ff ff       	call   c010001f <printk>$/;"	l
c0101713	kernel.S	/^c0101713:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101716	kernel.S	/^c0101716:	eb 35                	jmp    c010174d <irq_handle+0x173>$/;"	l
c0101718	kernel.S	/^c0101718:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010171b	kernel.S	/^c010171b:	68 fc 29 26 c0       	push   $0xc02629fc$/;"	l
c0101720	kernel.S	/^c0101720:	e8 fa e8 ff ff       	call   c010001f <printk>$/;"	l
c0101725	kernel.S	/^c0101725:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101728	kernel.S	/^c0101728:	eb 23                	jmp    c010174d <irq_handle+0x173>$/;"	l
c010172a	kernel.S	/^c010172a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010172d	kernel.S	/^c010172d:	68 1b 2a 26 c0       	push   $0xc0262a1b$/;"	l
c0101732	kernel.S	/^c0101732:	e8 e8 e8 ff ff       	call   c010001f <printk>$/;"	l
c0101737	kernel.S	/^c0101737:	83 c4 10             	add    $0x10,%esp$/;"	l
c010173a	kernel.S	/^c010173a:	eb 11                	jmp    c010174d <irq_handle+0x173>$/;"	l
c010173c	kernel.S	/^c010173c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010173f	kernel.S	/^c010173f:	68 28 2a 26 c0       	push   $0xc0262a28$/;"	l
c0101744	kernel.S	/^c0101744:	e8 d6 e8 ff ff       	call   c010001f <printk>$/;"	l
c0101749	kernel.S	/^c0101749:	83 c4 10             	add    $0x10,%esp$/;"	l
c010174c	kernel.S	/^c010174c:	90                   	nop$/;"	l
c010174d	kernel.S	/^c010174d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101750	kernel.S	/^c0101750:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0101753	kernel.S	/^c0101753:	68 3e 2a 26 c0       	push   $0xc0262a3e$/;"	l
c0101758	kernel.S	/^c0101758:	e8 c2 e8 ff ff       	call   c010001f <printk>$/;"	l
c010175d	kernel.S	/^c010175d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101760	kernel.S	/^c0101760:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101763	kernel.S	/^c0101763:	6a 35                	push   $0x35$/;"	l
c0101765	kernel.S	/^c0101765:	68 08 29 26 c0       	push   $0xc0262908$/;"	l
c010176a	kernel.S	/^c010176a:	e8 91 e8 ff ff       	call   c0100000 <abort>$/;"	l
c010176f	kernel.S	/^c010176f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101772	kernel.S	/^c0101772:	eb 48                	jmp    c01017bc <irq_handle+0x1e2>$/;"	l
c0101774	kernel.S	/^c0101774:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0101777	kernel.S	/^c0101777:	2d e8 03 00 00       	sub    $0x3e8,%eax$/;"	l
c010177c	kernel.S	/^c010177c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010177f	kernel.S	/^c010177f:	83 7d ec 0f          	cmpl   $0xf,-0x14(%ebp)$/;"	l
c0101783	kernel.S	/^c0101783:	7e 12                	jle    c0101797 <irq_handle+0x1bd>$/;"	l
c0101785	kernel.S	/^c0101785:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101788	kernel.S	/^c0101788:	6a 3a                	push   $0x3a$/;"	l
c010178a	kernel.S	/^c010178a:	68 08 29 26 c0       	push   $0xc0262908$/;"	l
c010178f	kernel.S	/^c010178f:	e8 6c e8 ff ff       	call   c0100000 <abort>$/;"	l
c0101794	kernel.S	/^c0101794:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101797	kernel.S	/^c0101797:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010179a	kernel.S	/^c010179a:	8b 04 85 00 91 2e c0 	mov    -0x3fd16f00(,%eax,4),%eax$/;"	l
c01017a1	kernel.S	/^c01017a1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01017a4	kernel.S	/^c01017a4:	eb 10                	jmp    c01017b6 <irq_handle+0x1dc>$/;"	l
c01017a6	kernel.S	/^c01017a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01017a9	kernel.S	/^c01017a9:	8b 00                	mov    (%eax),%eax$/;"	l
c01017ab	kernel.S	/^c01017ab:	ff d0                	call   *%eax$/;"	l
c01017ad	kernel.S	/^c01017ad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01017b0	kernel.S	/^c01017b0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01017b3	kernel.S	/^c01017b3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01017b6	kernel.S	/^c01017b6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01017ba	kernel.S	/^c01017ba:	75 ea                	jne    c01017a6 <irq_handle+0x1cc>$/;"	l
c01017bc	kernel.S	/^c01017bc:	90                   	nop$/;"	l
c01017bd	kernel.S	/^c01017bd:	c9                   	leave  $/;"	l
c01017be	kernel.S	/^c01017be:	c3                   	ret    $/;"	l
c01017bf	kernel.S	/^c01017bf <init_i8259>:$/;"	l
c01017bf	kernel.S	/^c01017bf:	55                   	push   %ebp$/;"	l
c01017c0	kernel.S	/^c01017c0:	89 e5                	mov    %esp,%ebp$/;"	l
c01017c2	kernel.S	/^c01017c2:	83 ec 50             	sub    $0x50,%esp$/;"	l
c01017c5	kernel.S	/^c01017c5:	c7 45 fc 21 00 00 00 	movl   $0x21,-0x4(%ebp)$/;"	l
c01017cc	kernel.S	/^c01017cc:	c6 45 ba ff          	movb   $0xff,-0x46(%ebp)$/;"	l
c01017d0	kernel.S	/^c01017d0:	0f b6 45 ba          	movzbl -0x46(%ebp),%eax$/;"	l
c01017d4	kernel.S	/^c01017d4:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01017d7	kernel.S	/^c01017d7:	ee                   	out    %al,(%dx)$/;"	l
c01017d8	kernel.S	/^c01017d8:	c7 45 f8 a1 00 00 00 	movl   $0xa1,-0x8(%ebp)$/;"	l
c01017df	kernel.S	/^c01017df:	c6 45 bb ff          	movb   $0xff,-0x45(%ebp)$/;"	l
c01017e3	kernel.S	/^c01017e3:	0f b6 45 bb          	movzbl -0x45(%ebp),%eax$/;"	l
c01017e7	kernel.S	/^c01017e7:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c01017ea	kernel.S	/^c01017ea:	ee                   	out    %al,(%dx)$/;"	l
c01017eb	kernel.S	/^c01017eb:	c7 45 f4 20 00 00 00 	movl   $0x20,-0xc(%ebp)$/;"	l
c01017f2	kernel.S	/^c01017f2:	c6 45 bc 11          	movb   $0x11,-0x44(%ebp)$/;"	l
c01017f6	kernel.S	/^c01017f6:	0f b6 45 bc          	movzbl -0x44(%ebp),%eax$/;"	l
c01017fa	kernel.S	/^c01017fa:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01017fd	kernel.S	/^c01017fd:	ee                   	out    %al,(%dx)$/;"	l
c01017fe	kernel.S	/^c01017fe:	c7 45 f0 21 00 00 00 	movl   $0x21,-0x10(%ebp)$/;"	l
c0101805	kernel.S	/^c0101805:	c6 45 bd 20          	movb   $0x20,-0x43(%ebp)$/;"	l
c0101809	kernel.S	/^c0101809:	0f b6 45 bd          	movzbl -0x43(%ebp),%eax$/;"	l
c010180d	kernel.S	/^c010180d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0101810	kernel.S	/^c0101810:	ee                   	out    %al,(%dx)$/;"	l
c0101811	kernel.S	/^c0101811:	c7 45 ec 21 00 00 00 	movl   $0x21,-0x14(%ebp)$/;"	l
c0101818	kernel.S	/^c0101818:	c6 45 be 04          	movb   $0x4,-0x42(%ebp)$/;"	l
c010181c	kernel.S	/^c010181c:	0f b6 45 be          	movzbl -0x42(%ebp),%eax$/;"	l
c0101820	kernel.S	/^c0101820:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0101823	kernel.S	/^c0101823:	ee                   	out    %al,(%dx)$/;"	l
c0101824	kernel.S	/^c0101824:	c7 45 e8 21 00 00 00 	movl   $0x21,-0x18(%ebp)$/;"	l
c010182b	kernel.S	/^c010182b:	c6 45 bf 03          	movb   $0x3,-0x41(%ebp)$/;"	l
c010182f	kernel.S	/^c010182f:	0f b6 45 bf          	movzbl -0x41(%ebp),%eax$/;"	l
c0101833	kernel.S	/^c0101833:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0101836	kernel.S	/^c0101836:	ee                   	out    %al,(%dx)$/;"	l
c0101837	kernel.S	/^c0101837:	c7 45 e4 a0 00 00 00 	movl   $0xa0,-0x1c(%ebp)$/;"	l
c010183e	kernel.S	/^c010183e:	c6 45 c0 11          	movb   $0x11,-0x40(%ebp)$/;"	l
c0101842	kernel.S	/^c0101842:	0f b6 45 c0          	movzbl -0x40(%ebp),%eax$/;"	l
c0101846	kernel.S	/^c0101846:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0101849	kernel.S	/^c0101849:	ee                   	out    %al,(%dx)$/;"	l
c010184a	kernel.S	/^c010184a:	c7 45 e0 a1 00 00 00 	movl   $0xa1,-0x20(%ebp)$/;"	l
c0101851	kernel.S	/^c0101851:	c6 45 c1 28          	movb   $0x28,-0x3f(%ebp)$/;"	l
c0101855	kernel.S	/^c0101855:	0f b6 45 c1          	movzbl -0x3f(%ebp),%eax$/;"	l
c0101859	kernel.S	/^c0101859:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010185c	kernel.S	/^c010185c:	ee                   	out    %al,(%dx)$/;"	l
c010185d	kernel.S	/^c010185d:	c7 45 dc a1 00 00 00 	movl   $0xa1,-0x24(%ebp)$/;"	l
c0101864	kernel.S	/^c0101864:	c6 45 c2 02          	movb   $0x2,-0x3e(%ebp)$/;"	l
c0101868	kernel.S	/^c0101868:	0f b6 45 c2          	movzbl -0x3e(%ebp),%eax$/;"	l
c010186c	kernel.S	/^c010186c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010186f	kernel.S	/^c010186f:	ee                   	out    %al,(%dx)$/;"	l
c0101870	kernel.S	/^c0101870:	c7 45 d8 a1 00 00 00 	movl   $0xa1,-0x28(%ebp)$/;"	l
c0101877	kernel.S	/^c0101877:	c6 45 c3 03          	movb   $0x3,-0x3d(%ebp)$/;"	l
c010187b	kernel.S	/^c010187b:	0f b6 45 c3          	movzbl -0x3d(%ebp),%eax$/;"	l
c010187f	kernel.S	/^c010187f:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0101882	kernel.S	/^c0101882:	ee                   	out    %al,(%dx)$/;"	l
c0101883	kernel.S	/^c0101883:	c7 45 d4 20 00 00 00 	movl   $0x20,-0x2c(%ebp)$/;"	l
c010188a	kernel.S	/^c010188a:	c6 45 c4 68          	movb   $0x68,-0x3c(%ebp)$/;"	l
c010188e	kernel.S	/^c010188e:	0f b6 45 c4          	movzbl -0x3c(%ebp),%eax$/;"	l
c0101892	kernel.S	/^c0101892:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0101895	kernel.S	/^c0101895:	ee                   	out    %al,(%dx)$/;"	l
c0101896	kernel.S	/^c0101896:	c7 45 d0 20 00 00 00 	movl   $0x20,-0x30(%ebp)$/;"	l
c010189d	kernel.S	/^c010189d:	c6 45 c5 0a          	movb   $0xa,-0x3b(%ebp)$/;"	l
c01018a1	kernel.S	/^c01018a1:	0f b6 45 c5          	movzbl -0x3b(%ebp),%eax$/;"	l
c01018a5	kernel.S	/^c01018a5:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01018a8	kernel.S	/^c01018a8:	ee                   	out    %al,(%dx)$/;"	l
c01018a9	kernel.S	/^c01018a9:	c7 45 cc a0 00 00 00 	movl   $0xa0,-0x34(%ebp)$/;"	l
c01018b0	kernel.S	/^c01018b0:	c6 45 c6 68          	movb   $0x68,-0x3a(%ebp)$/;"	l
c01018b4	kernel.S	/^c01018b4:	0f b6 45 c6          	movzbl -0x3a(%ebp),%eax$/;"	l
c01018b8	kernel.S	/^c01018b8:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01018bb	kernel.S	/^c01018bb:	ee                   	out    %al,(%dx)$/;"	l
c01018bc	kernel.S	/^c01018bc:	c7 45 c8 a0 00 00 00 	movl   $0xa0,-0x38(%ebp)$/;"	l
c01018c3	kernel.S	/^c01018c3:	c6 45 c7 0a          	movb   $0xa,-0x39(%ebp)$/;"	l
c01018c7	kernel.S	/^c01018c7:	0f b6 45 c7          	movzbl -0x39(%ebp),%eax$/;"	l
c01018cb	kernel.S	/^c01018cb:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c01018ce	kernel.S	/^c01018ce:	ee                   	out    %al,(%dx)$/;"	l
c01018cf	kernel.S	/^c01018cf:	90                   	nop$/;"	l
c01018d0	kernel.S	/^c01018d0:	c9                   	leave  $/;"	l
c01018d1	kernel.S	/^c01018d1:	c3                   	ret    $/;"	l
c01018d2	kernel.S	/^c01018d2 <set_intr>:$/;"	l
c01018d2	kernel.S	/^c01018d2:	55                   	push   %ebp$/;"	l
c01018d3	kernel.S	/^c01018d3:	89 e5                	mov    %esp,%ebp$/;"	l
c01018d5	kernel.S	/^c01018d5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01018d8	kernel.S	/^c01018d8:	89 c2                	mov    %eax,%edx$/;"	l
c01018da	kernel.S	/^c01018da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01018dd	kernel.S	/^c01018dd:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01018e0	kernel.S	/^c01018e0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01018e3	kernel.S	/^c01018e3:	89 c2                	mov    %eax,%edx$/;"	l
c01018e5	kernel.S	/^c01018e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01018e8	kernel.S	/^c01018e8:	66 89 50 02          	mov    %dx,0x2(%eax)$/;"	l
c01018ec	kernel.S	/^c01018ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01018ef	kernel.S	/^c01018ef:	0f b6 50 04          	movzbl 0x4(%eax),%edx$/;"	l
c01018f3	kernel.S	/^c01018f3:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c01018f6	kernel.S	/^c01018f6:	88 50 04             	mov    %dl,0x4(%eax)$/;"	l
c01018f9	kernel.S	/^c01018f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01018fc	kernel.S	/^c01018fc:	0f b6 50 04          	movzbl 0x4(%eax),%edx$/;"	l
c0101900	kernel.S	/^c0101900:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0101903	kernel.S	/^c0101903:	88 50 04             	mov    %dl,0x4(%eax)$/;"	l
c0101906	kernel.S	/^c0101906:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101909	kernel.S	/^c0101909:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c010190d	kernel.S	/^c010190d:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c0101910	kernel.S	/^c0101910:	83 ca 0e             	or     $0xe,%edx$/;"	l
c0101913	kernel.S	/^c0101913:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c0101916	kernel.S	/^c0101916:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101919	kernel.S	/^c0101919:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c010191d	kernel.S	/^c010191d:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0101920	kernel.S	/^c0101920:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c0101923	kernel.S	/^c0101923:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101926	kernel.S	/^c0101926:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101929	kernel.S	/^c0101929:	89 c2                	mov    %eax,%edx$/;"	l
c010192b	kernel.S	/^c010192b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010192e	kernel.S	/^c010192e:	83 e2 03             	and    $0x3,%edx$/;"	l
c0101931	kernel.S	/^c0101931:	89 d1                	mov    %edx,%ecx$/;"	l
c0101933	kernel.S	/^c0101933:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
c0101936	kernel.S	/^c0101936:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c010193a	kernel.S	/^c010193a:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c010193d	kernel.S	/^c010193d:	09 ca                	or     %ecx,%edx$/;"	l
c010193f	kernel.S	/^c010193f:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c0101942	kernel.S	/^c0101942:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101945	kernel.S	/^c0101945:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c0101949	kernel.S	/^c0101949:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c010194c	kernel.S	/^c010194c:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c010194f	kernel.S	/^c010194f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101952	kernel.S	/^c0101952:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101955	kernel.S	/^c0101955:	89 c2                	mov    %eax,%edx$/;"	l
c0101957	kernel.S	/^c0101957:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010195a	kernel.S	/^c010195a:	66 89 50 06          	mov    %dx,0x6(%eax)$/;"	l
c010195e	kernel.S	/^c010195e:	90                   	nop$/;"	l
c010195f	kernel.S	/^c010195f:	5d                   	pop    %ebp$/;"	l
c0101960	kernel.S	/^c0101960:	c3                   	ret    $/;"	l
c0101961	kernel.S	/^c0101961 <set_trap>:$/;"	l
c0101961	kernel.S	/^c0101961:	55                   	push   %ebp$/;"	l
c0101962	kernel.S	/^c0101962:	89 e5                	mov    %esp,%ebp$/;"	l
c0101964	kernel.S	/^c0101964:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101967	kernel.S	/^c0101967:	89 c2                	mov    %eax,%edx$/;"	l
c0101969	kernel.S	/^c0101969:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010196c	kernel.S	/^c010196c:	66 89 10             	mov    %dx,(%eax)$/;"	l
c010196f	kernel.S	/^c010196f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101972	kernel.S	/^c0101972:	89 c2                	mov    %eax,%edx$/;"	l
c0101974	kernel.S	/^c0101974:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101977	kernel.S	/^c0101977:	66 89 50 02          	mov    %dx,0x2(%eax)$/;"	l
c010197b	kernel.S	/^c010197b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010197e	kernel.S	/^c010197e:	0f b6 50 04          	movzbl 0x4(%eax),%edx$/;"	l
c0101982	kernel.S	/^c0101982:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0101985	kernel.S	/^c0101985:	88 50 04             	mov    %dl,0x4(%eax)$/;"	l
c0101988	kernel.S	/^c0101988:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010198b	kernel.S	/^c010198b:	0f b6 50 04          	movzbl 0x4(%eax),%edx$/;"	l
c010198f	kernel.S	/^c010198f:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0101992	kernel.S	/^c0101992:	88 50 04             	mov    %dl,0x4(%eax)$/;"	l
c0101995	kernel.S	/^c0101995:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101998	kernel.S	/^c0101998:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c010199c	kernel.S	/^c010199c:	83 ca 0f             	or     $0xf,%edx$/;"	l
c010199f	kernel.S	/^c010199f:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c01019a2	kernel.S	/^c01019a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01019a5	kernel.S	/^c01019a5:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c01019a9	kernel.S	/^c01019a9:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01019ac	kernel.S	/^c01019ac:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c01019af	kernel.S	/^c01019af:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01019b2	kernel.S	/^c01019b2:	83 e0 03             	and    $0x3,%eax$/;"	l
c01019b5	kernel.S	/^c01019b5:	89 c2                	mov    %eax,%edx$/;"	l
c01019b7	kernel.S	/^c01019b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01019ba	kernel.S	/^c01019ba:	83 e2 03             	and    $0x3,%edx$/;"	l
c01019bd	kernel.S	/^c01019bd:	89 d1                	mov    %edx,%ecx$/;"	l
c01019bf	kernel.S	/^c01019bf:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
c01019c2	kernel.S	/^c01019c2:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c01019c6	kernel.S	/^c01019c6:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c01019c9	kernel.S	/^c01019c9:	09 ca                	or     %ecx,%edx$/;"	l
c01019cb	kernel.S	/^c01019cb:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c01019ce	kernel.S	/^c01019ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01019d1	kernel.S	/^c01019d1:	0f b6 50 05          	movzbl 0x5(%eax),%edx$/;"	l
c01019d5	kernel.S	/^c01019d5:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01019d8	kernel.S	/^c01019d8:	88 50 05             	mov    %dl,0x5(%eax)$/;"	l
c01019db	kernel.S	/^c01019db:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01019de	kernel.S	/^c01019de:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01019e1	kernel.S	/^c01019e1:	89 c2                	mov    %eax,%edx$/;"	l
c01019e3	kernel.S	/^c01019e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01019e6	kernel.S	/^c01019e6:	66 89 50 06          	mov    %dx,0x6(%eax)$/;"	l
c01019ea	kernel.S	/^c01019ea:	90                   	nop$/;"	l
c01019eb	kernel.S	/^c01019eb:	5d                   	pop    %ebp$/;"	l
c01019ec	kernel.S	/^c01019ec:	c3                   	ret    $/;"	l
c01019ed	kernel.S	/^c01019ed <write_idtr>:$/;"	l
c01019ed	kernel.S	/^c01019ed:	55                   	push   %ebp$/;"	l
c01019ee	kernel.S	/^c01019ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01019f0	kernel.S	/^c01019f0:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01019f3	kernel.S	/^c01019f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01019f6	kernel.S	/^c01019f6:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01019f9	kernel.S	/^c01019f9:	66 a3 44 91 2e c0    	mov    %ax,0xc02e9144$/;"	l
c01019ff	kernel.S	/^c01019ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101a02	kernel.S	/^c0101a02:	66 a3 46 91 2e c0    	mov    %ax,0xc02e9146$/;"	l
c0101a08	kernel.S	/^c0101a08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101a0b	kernel.S	/^c0101a0b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101a0e	kernel.S	/^c0101a0e:	66 a3 48 91 2e c0    	mov    %ax,0xc02e9148$/;"	l
c0101a14	kernel.S	/^c0101a14:	c7 45 fc 44 91 2e c0 	movl   $0xc02e9144,-0x4(%ebp)$/;"	l
c0101a1b	kernel.S	/^c0101a1b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101a1e	kernel.S	/^c0101a1e:	0f 01 18             	lidtl  (%eax)$/;"	l
c0101a21	kernel.S	/^c0101a21:	90                   	nop$/;"	l
c0101a22	kernel.S	/^c0101a22:	c9                   	leave  $/;"	l
c0101a23	kernel.S	/^c0101a23:	c3                   	ret    $/;"	l
c0101a24	kernel.S	/^c0101a24 <init_idt>:$/;"	l
c0101a24	kernel.S	/^c0101a24:	55                   	push   %ebp$/;"	l
c0101a25	kernel.S	/^c0101a25:	89 e5                	mov    %esp,%ebp$/;"	l
c0101a27	kernel.S	/^c0101a27:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101a2a	kernel.S	/^c0101a2a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101a31	kernel.S	/^c0101a31:	eb 22                	jmp    c0101a55 <init_idt+0x31>$/;"	l
c0101a33	kernel.S	/^c0101a33:	ba ea 1c 10 c0       	mov    $0xc0101cea,%edx$/;"	l
c0101a38	kernel.S	/^c0101a38:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101a3b	kernel.S	/^c0101a3b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101a3e	kernel.S	/^c0101a3e:	05 60 91 2e c0       	add    $0xc02e9160,%eax$/;"	l
c0101a43	kernel.S	/^c0101a43:	6a 00                	push   $0x0$/;"	l
c0101a45	kernel.S	/^c0101a45:	52                   	push   %edx$/;"	l
c0101a46	kernel.S	/^c0101a46:	6a 08                	push   $0x8$/;"	l
c0101a48	kernel.S	/^c0101a48:	50                   	push   %eax$/;"	l
c0101a49	kernel.S	/^c0101a49:	e8 13 ff ff ff       	call   c0101961 <set_trap>$/;"	l
c0101a4e	kernel.S	/^c0101a4e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101a51	kernel.S	/^c0101a51:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101a55	kernel.S	/^c0101a55:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)$/;"	l
c0101a5c	kernel.S	/^c0101a5c:	7e d5                	jle    c0101a33 <init_idt+0xf>$/;"	l
c0101a5e	kernel.S	/^c0101a5e:	b8 3f 1c 10 c0       	mov    $0xc0101c3f,%eax$/;"	l
c0101a63	kernel.S	/^c0101a63:	6a 00                	push   $0x0$/;"	l
c0101a65	kernel.S	/^c0101a65:	50                   	push   %eax$/;"	l
c0101a66	kernel.S	/^c0101a66:	6a 08                	push   $0x8$/;"	l
c0101a68	kernel.S	/^c0101a68:	68 60 91 2e c0       	push   $0xc02e9160$/;"	l
c0101a6d	kernel.S	/^c0101a6d:	e8 ef fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101a72	kernel.S	/^c0101a72:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101a75	kernel.S	/^c0101a75:	ba 48 1c 10 c0       	mov    $0xc0101c48,%edx$/;"	l
c0101a7a	kernel.S	/^c0101a7a:	b8 68 91 2e c0       	mov    $0xc02e9168,%eax$/;"	l
c0101a7f	kernel.S	/^c0101a7f:	6a 00                	push   $0x0$/;"	l
c0101a81	kernel.S	/^c0101a81:	52                   	push   %edx$/;"	l
c0101a82	kernel.S	/^c0101a82:	6a 08                	push   $0x8$/;"	l
c0101a84	kernel.S	/^c0101a84:	50                   	push   %eax$/;"	l
c0101a85	kernel.S	/^c0101a85:	e8 d7 fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101a8a	kernel.S	/^c0101a8a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101a8d	kernel.S	/^c0101a8d:	ba 51 1c 10 c0       	mov    $0xc0101c51,%edx$/;"	l
c0101a92	kernel.S	/^c0101a92:	b8 70 91 2e c0       	mov    $0xc02e9170,%eax$/;"	l
c0101a97	kernel.S	/^c0101a97:	6a 00                	push   $0x0$/;"	l
c0101a99	kernel.S	/^c0101a99:	52                   	push   %edx$/;"	l
c0101a9a	kernel.S	/^c0101a9a:	6a 08                	push   $0x8$/;"	l
c0101a9c	kernel.S	/^c0101a9c:	50                   	push   %eax$/;"	l
c0101a9d	kernel.S	/^c0101a9d:	e8 bf fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101aa2	kernel.S	/^c0101aa2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101aa5	kernel.S	/^c0101aa5:	ba 5a 1c 10 c0       	mov    $0xc0101c5a,%edx$/;"	l
c0101aaa	kernel.S	/^c0101aaa:	b8 78 91 2e c0       	mov    $0xc02e9178,%eax$/;"	l
c0101aaf	kernel.S	/^c0101aaf:	6a 00                	push   $0x0$/;"	l
c0101ab1	kernel.S	/^c0101ab1:	52                   	push   %edx$/;"	l
c0101ab2	kernel.S	/^c0101ab2:	6a 08                	push   $0x8$/;"	l
c0101ab4	kernel.S	/^c0101ab4:	50                   	push   %eax$/;"	l
c0101ab5	kernel.S	/^c0101ab5:	e8 a7 fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101aba	kernel.S	/^c0101aba:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101abd	kernel.S	/^c0101abd:	ba 63 1c 10 c0       	mov    $0xc0101c63,%edx$/;"	l
c0101ac2	kernel.S	/^c0101ac2:	b8 80 91 2e c0       	mov    $0xc02e9180,%eax$/;"	l
c0101ac7	kernel.S	/^c0101ac7:	6a 00                	push   $0x0$/;"	l
c0101ac9	kernel.S	/^c0101ac9:	52                   	push   %edx$/;"	l
c0101aca	kernel.S	/^c0101aca:	6a 08                	push   $0x8$/;"	l
c0101acc	kernel.S	/^c0101acc:	50                   	push   %eax$/;"	l
c0101acd	kernel.S	/^c0101acd:	e8 8f fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101ad2	kernel.S	/^c0101ad2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101ad5	kernel.S	/^c0101ad5:	ba 6c 1c 10 c0       	mov    $0xc0101c6c,%edx$/;"	l
c0101ada	kernel.S	/^c0101ada:	b8 88 91 2e c0       	mov    $0xc02e9188,%eax$/;"	l
c0101adf	kernel.S	/^c0101adf:	6a 00                	push   $0x0$/;"	l
c0101ae1	kernel.S	/^c0101ae1:	52                   	push   %edx$/;"	l
c0101ae2	kernel.S	/^c0101ae2:	6a 08                	push   $0x8$/;"	l
c0101ae4	kernel.S	/^c0101ae4:	50                   	push   %eax$/;"	l
c0101ae5	kernel.S	/^c0101ae5:	e8 77 fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101aea	kernel.S	/^c0101aea:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101aed	kernel.S	/^c0101aed:	ba 75 1c 10 c0       	mov    $0xc0101c75,%edx$/;"	l
c0101af2	kernel.S	/^c0101af2:	b8 90 91 2e c0       	mov    $0xc02e9190,%eax$/;"	l
c0101af7	kernel.S	/^c0101af7:	6a 00                	push   $0x0$/;"	l
c0101af9	kernel.S	/^c0101af9:	52                   	push   %edx$/;"	l
c0101afa	kernel.S	/^c0101afa:	6a 08                	push   $0x8$/;"	l
c0101afc	kernel.S	/^c0101afc:	50                   	push   %eax$/;"	l
c0101afd	kernel.S	/^c0101afd:	e8 5f fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101b02	kernel.S	/^c0101b02:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101b05	kernel.S	/^c0101b05:	ba 7e 1c 10 c0       	mov    $0xc0101c7e,%edx$/;"	l
c0101b0a	kernel.S	/^c0101b0a:	b8 98 91 2e c0       	mov    $0xc02e9198,%eax$/;"	l
c0101b0f	kernel.S	/^c0101b0f:	6a 00                	push   $0x0$/;"	l
c0101b11	kernel.S	/^c0101b11:	52                   	push   %edx$/;"	l
c0101b12	kernel.S	/^c0101b12:	6a 08                	push   $0x8$/;"	l
c0101b14	kernel.S	/^c0101b14:	50                   	push   %eax$/;"	l
c0101b15	kernel.S	/^c0101b15:	e8 47 fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101b1a	kernel.S	/^c0101b1a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101b1d	kernel.S	/^c0101b1d:	ba 87 1c 10 c0       	mov    $0xc0101c87,%edx$/;"	l
c0101b22	kernel.S	/^c0101b22:	b8 a0 91 2e c0       	mov    $0xc02e91a0,%eax$/;"	l
c0101b27	kernel.S	/^c0101b27:	6a 00                	push   $0x0$/;"	l
c0101b29	kernel.S	/^c0101b29:	52                   	push   %edx$/;"	l
c0101b2a	kernel.S	/^c0101b2a:	6a 08                	push   $0x8$/;"	l
c0101b2c	kernel.S	/^c0101b2c:	50                   	push   %eax$/;"	l
c0101b2d	kernel.S	/^c0101b2d:	e8 2f fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101b32	kernel.S	/^c0101b32:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101b35	kernel.S	/^c0101b35:	ba 8e 1c 10 c0       	mov    $0xc0101c8e,%edx$/;"	l
c0101b3a	kernel.S	/^c0101b3a:	b8 a8 91 2e c0       	mov    $0xc02e91a8,%eax$/;"	l
c0101b3f	kernel.S	/^c0101b3f:	6a 00                	push   $0x0$/;"	l
c0101b41	kernel.S	/^c0101b41:	52                   	push   %edx$/;"	l
c0101b42	kernel.S	/^c0101b42:	6a 08                	push   $0x8$/;"	l
c0101b44	kernel.S	/^c0101b44:	50                   	push   %eax$/;"	l
c0101b45	kernel.S	/^c0101b45:	e8 17 fe ff ff       	call   c0101961 <set_trap>$/;"	l
c0101b4a	kernel.S	/^c0101b4a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101b4d	kernel.S	/^c0101b4d:	ba 97 1c 10 c0       	mov    $0xc0101c97,%edx$/;"	l
c0101b52	kernel.S	/^c0101b52:	b8 b0 91 2e c0       	mov    $0xc02e91b0,%eax$/;"	l
c0101b57	kernel.S	/^c0101b57:	6a 00                	push   $0x0$/;"	l
c0101b59	kernel.S	/^c0101b59:	52                   	push   %edx$/;"	l
c0101b5a	kernel.S	/^c0101b5a:	6a 08                	push   $0x8$/;"	l
c0101b5c	kernel.S	/^c0101b5c:	50                   	push   %eax$/;"	l
c0101b5d	kernel.S	/^c0101b5d:	e8 ff fd ff ff       	call   c0101961 <set_trap>$/;"	l
c0101b62	kernel.S	/^c0101b62:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101b65	kernel.S	/^c0101b65:	ba 9e 1c 10 c0       	mov    $0xc0101c9e,%edx$/;"	l
c0101b6a	kernel.S	/^c0101b6a:	b8 b8 91 2e c0       	mov    $0xc02e91b8,%eax$/;"	l
c0101b6f	kernel.S	/^c0101b6f:	6a 00                	push   $0x0$/;"	l
c0101b71	kernel.S	/^c0101b71:	52                   	push   %edx$/;"	l
c0101b72	kernel.S	/^c0101b72:	6a 08                	push   $0x8$/;"	l
c0101b74	kernel.S	/^c0101b74:	50                   	push   %eax$/;"	l
c0101b75	kernel.S	/^c0101b75:	e8 e7 fd ff ff       	call   c0101961 <set_trap>$/;"	l
c0101b7a	kernel.S	/^c0101b7a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101b7d	kernel.S	/^c0101b7d:	ba a5 1c 10 c0       	mov    $0xc0101ca5,%edx$/;"	l
c0101b82	kernel.S	/^c0101b82:	b8 c0 91 2e c0       	mov    $0xc02e91c0,%eax$/;"	l
c0101b87	kernel.S	/^c0101b87:	6a 00                	push   $0x0$/;"	l
c0101b89	kernel.S	/^c0101b89:	52                   	push   %edx$/;"	l
c0101b8a	kernel.S	/^c0101b8a:	6a 08                	push   $0x8$/;"	l
c0101b8c	kernel.S	/^c0101b8c:	50                   	push   %eax$/;"	l
c0101b8d	kernel.S	/^c0101b8d:	e8 cf fd ff ff       	call   c0101961 <set_trap>$/;"	l
c0101b92	kernel.S	/^c0101b92:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101b95	kernel.S	/^c0101b95:	ba ac 1c 10 c0       	mov    $0xc0101cac,%edx$/;"	l
c0101b9a	kernel.S	/^c0101b9a:	b8 c8 91 2e c0       	mov    $0xc02e91c8,%eax$/;"	l
c0101b9f	kernel.S	/^c0101b9f:	6a 00                	push   $0x0$/;"	l
c0101ba1	kernel.S	/^c0101ba1:	52                   	push   %edx$/;"	l
c0101ba2	kernel.S	/^c0101ba2:	6a 08                	push   $0x8$/;"	l
c0101ba4	kernel.S	/^c0101ba4:	50                   	push   %eax$/;"	l
c0101ba5	kernel.S	/^c0101ba5:	e8 b7 fd ff ff       	call   c0101961 <set_trap>$/;"	l
c0101baa	kernel.S	/^c0101baa:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101bad	kernel.S	/^c0101bad:	ba b3 1c 10 c0       	mov    $0xc0101cb3,%edx$/;"	l
c0101bb2	kernel.S	/^c0101bb2:	b8 d0 91 2e c0       	mov    $0xc02e91d0,%eax$/;"	l
c0101bb7	kernel.S	/^c0101bb7:	6a 00                	push   $0x0$/;"	l
c0101bb9	kernel.S	/^c0101bb9:	52                   	push   %edx$/;"	l
c0101bba	kernel.S	/^c0101bba:	6a 08                	push   $0x8$/;"	l
c0101bbc	kernel.S	/^c0101bbc:	50                   	push   %eax$/;"	l
c0101bbd	kernel.S	/^c0101bbd:	e8 9f fd ff ff       	call   c0101961 <set_trap>$/;"	l
c0101bc2	kernel.S	/^c0101bc2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101bc5	kernel.S	/^c0101bc5:	ba ba 1c 10 c0       	mov    $0xc0101cba,%edx$/;"	l
c0101bca	kernel.S	/^c0101bca:	b8 60 95 2e c0       	mov    $0xc02e9560,%eax$/;"	l
c0101bcf	kernel.S	/^c0101bcf:	6a 03                	push   $0x3$/;"	l
c0101bd1	kernel.S	/^c0101bd1:	52                   	push   %edx$/;"	l
c0101bd2	kernel.S	/^c0101bd2:	6a 08                	push   $0x8$/;"	l
c0101bd4	kernel.S	/^c0101bd4:	50                   	push   %eax$/;"	l
c0101bd5	kernel.S	/^c0101bd5:	e8 87 fd ff ff       	call   c0101961 <set_trap>$/;"	l
c0101bda	kernel.S	/^c0101bda:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101bdd	kernel.S	/^c0101bdd:	ba c6 1c 10 c0       	mov    $0xc0101cc6,%edx$/;"	l
c0101be2	kernel.S	/^c0101be2:	b8 60 92 2e c0       	mov    $0xc02e9260,%eax$/;"	l
c0101be7	kernel.S	/^c0101be7:	6a 00                	push   $0x0$/;"	l
c0101be9	kernel.S	/^c0101be9:	52                   	push   %edx$/;"	l
c0101bea	kernel.S	/^c0101bea:	6a 08                	push   $0x8$/;"	l
c0101bec	kernel.S	/^c0101bec:	50                   	push   %eax$/;"	l
c0101bed	kernel.S	/^c0101bed:	e8 e0 fc ff ff       	call   c01018d2 <set_intr>$/;"	l
c0101bf2	kernel.S	/^c0101bf2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101bf5	kernel.S	/^c0101bf5:	ba d2 1c 10 c0       	mov    $0xc0101cd2,%edx$/;"	l
c0101bfa	kernel.S	/^c0101bfa:	b8 68 92 2e c0       	mov    $0xc02e9268,%eax$/;"	l
c0101bff	kernel.S	/^c0101bff:	6a 00                	push   $0x0$/;"	l
c0101c01	kernel.S	/^c0101c01:	52                   	push   %edx$/;"	l
c0101c02	kernel.S	/^c0101c02:	6a 08                	push   $0x8$/;"	l
c0101c04	kernel.S	/^c0101c04:	50                   	push   %eax$/;"	l
c0101c05	kernel.S	/^c0101c05:	e8 c8 fc ff ff       	call   c01018d2 <set_intr>$/;"	l
c0101c0a	kernel.S	/^c0101c0a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101c0d	kernel.S	/^c0101c0d:	ba de 1c 10 c0       	mov    $0xc0101cde,%edx$/;"	l
c0101c12	kernel.S	/^c0101c12:	b8 d0 92 2e c0       	mov    $0xc02e92d0,%eax$/;"	l
c0101c17	kernel.S	/^c0101c17:	6a 00                	push   $0x0$/;"	l
c0101c19	kernel.S	/^c0101c19:	52                   	push   %edx$/;"	l
c0101c1a	kernel.S	/^c0101c1a:	6a 08                	push   $0x8$/;"	l
c0101c1c	kernel.S	/^c0101c1c:	50                   	push   %eax$/;"	l
c0101c1d	kernel.S	/^c0101c1d:	e8 b0 fc ff ff       	call   c01018d2 <set_intr>$/;"	l
c0101c22	kernel.S	/^c0101c22:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101c25	kernel.S	/^c0101c25:	68 00 08 00 00       	push   $0x800$/;"	l
c0101c2a	kernel.S	/^c0101c2a:	68 60 91 2e c0       	push   $0xc02e9160$/;"	l
c0101c2f	kernel.S	/^c0101c2f:	e8 b9 fd ff ff       	call   c01019ed <write_idtr>$/;"	l
c0101c34	kernel.S	/^c0101c34:	83 c4 08             	add    $0x8,%esp$/;"	l
c0101c37	kernel.S	/^c0101c37:	90                   	nop$/;"	l
c0101c38	kernel.S	/^c0101c38:	c9                   	leave  $/;"	l
c0101c39	kernel.S	/^c0101c39:	c3                   	ret    $/;"	l
c0101c3a	kernel.S	/^c0101c3a <entry>:$/;"	l
c0101c3a	kernel.S	/^c0101c3a:	e9 03 f6 ff ff       	jmp    c0101242 <init>$/;"	l
c0101c3f	kernel.S	/^c0101c3f <vec0>:$/;"	l
c0101c3f	kernel.S	/^c0101c3f:	6a 00                	push   $0x0$/;"	l
c0101c41	kernel.S	/^c0101c41:	6a 00                	push   $0x0$/;"	l
c0101c43	kernel.S	/^c0101c43:	e9 ab 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c48	kernel.S	/^c0101c48 <vec1>:$/;"	l
c0101c48	kernel.S	/^c0101c48:	6a 00                	push   $0x0$/;"	l
c0101c4a	kernel.S	/^c0101c4a:	6a 01                	push   $0x1$/;"	l
c0101c4c	kernel.S	/^c0101c4c:	e9 a2 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c51	kernel.S	/^c0101c51 <vec2>:$/;"	l
c0101c51	kernel.S	/^c0101c51:	6a 00                	push   $0x0$/;"	l
c0101c53	kernel.S	/^c0101c53:	6a 02                	push   $0x2$/;"	l
c0101c55	kernel.S	/^c0101c55:	e9 99 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c5a	kernel.S	/^c0101c5a <vec3>:$/;"	l
c0101c5a	kernel.S	/^c0101c5a:	6a 00                	push   $0x0$/;"	l
c0101c5c	kernel.S	/^c0101c5c:	6a 03                	push   $0x3$/;"	l
c0101c5e	kernel.S	/^c0101c5e:	e9 90 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c63	kernel.S	/^c0101c63 <vec4>:$/;"	l
c0101c63	kernel.S	/^c0101c63:	6a 00                	push   $0x0$/;"	l
c0101c65	kernel.S	/^c0101c65:	6a 04                	push   $0x4$/;"	l
c0101c67	kernel.S	/^c0101c67:	e9 87 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c6c	kernel.S	/^c0101c6c <vec5>:$/;"	l
c0101c6c	kernel.S	/^c0101c6c:	6a 00                	push   $0x0$/;"	l
c0101c6e	kernel.S	/^c0101c6e:	6a 05                	push   $0x5$/;"	l
c0101c70	kernel.S	/^c0101c70:	e9 7e 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c75	kernel.S	/^c0101c75 <vec6>:$/;"	l
c0101c75	kernel.S	/^c0101c75:	6a 00                	push   $0x0$/;"	l
c0101c77	kernel.S	/^c0101c77:	6a 06                	push   $0x6$/;"	l
c0101c79	kernel.S	/^c0101c79:	e9 75 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c7e	kernel.S	/^c0101c7e <vec7>:$/;"	l
c0101c7e	kernel.S	/^c0101c7e:	6a 00                	push   $0x0$/;"	l
c0101c80	kernel.S	/^c0101c80:	6a 07                	push   $0x7$/;"	l
c0101c82	kernel.S	/^c0101c82:	e9 6c 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c87	kernel.S	/^c0101c87 <vec8>:$/;"	l
c0101c87	kernel.S	/^c0101c87:	6a 08                	push   $0x8$/;"	l
c0101c89	kernel.S	/^c0101c89:	e9 65 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c8e	kernel.S	/^c0101c8e <vec9>:$/;"	l
c0101c8e	kernel.S	/^c0101c8e:	6a 00                	push   $0x0$/;"	l
c0101c90	kernel.S	/^c0101c90:	6a 09                	push   $0x9$/;"	l
c0101c92	kernel.S	/^c0101c92:	e9 5c 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c97	kernel.S	/^c0101c97 <vec10>:$/;"	l
c0101c97	kernel.S	/^c0101c97:	6a 0a                	push   $0xa$/;"	l
c0101c99	kernel.S	/^c0101c99:	e9 55 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101c9e	kernel.S	/^c0101c9e <vec11>:$/;"	l
c0101c9e	kernel.S	/^c0101c9e:	6a 0b                	push   $0xb$/;"	l
c0101ca0	kernel.S	/^c0101ca0:	e9 4e 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101ca5	kernel.S	/^c0101ca5 <vec12>:$/;"	l
c0101ca5	kernel.S	/^c0101ca5:	6a 0c                	push   $0xc$/;"	l
c0101ca7	kernel.S	/^c0101ca7:	e9 47 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101cac	kernel.S	/^c0101cac <vec13>:$/;"	l
c0101cac	kernel.S	/^c0101cac:	6a 0d                	push   $0xd$/;"	l
c0101cae	kernel.S	/^c0101cae:	e9 40 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101cb3	kernel.S	/^c0101cb3 <vec14>:$/;"	l
c0101cb3	kernel.S	/^c0101cb3:	6a 0e                	push   $0xe$/;"	l
c0101cb5	kernel.S	/^c0101cb5:	e9 39 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101cba	kernel.S	/^c0101cba <vecsys>:$/;"	l
c0101cba	kernel.S	/^c0101cba:	6a 00                	push   $0x0$/;"	l
c0101cbc	kernel.S	/^c0101cbc:	68 80 00 00 00       	push   $0x80$/;"	l
c0101cc1	kernel.S	/^c0101cc1:	e9 2d 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101cc6	kernel.S	/^c0101cc6 <irq0>:$/;"	l
c0101cc6	kernel.S	/^c0101cc6:	6a 00                	push   $0x0$/;"	l
c0101cc8	kernel.S	/^c0101cc8:	68 e8 03 00 00       	push   $0x3e8$/;"	l
c0101ccd	kernel.S	/^c0101ccd:	e9 21 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101cd2	kernel.S	/^c0101cd2 <irq1>:$/;"	l
c0101cd2	kernel.S	/^c0101cd2:	6a 00                	push   $0x0$/;"	l
c0101cd4	kernel.S	/^c0101cd4:	68 e9 03 00 00       	push   $0x3e9$/;"	l
c0101cd9	kernel.S	/^c0101cd9:	e9 15 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101cde	kernel.S	/^c0101cde <irq14>:$/;"	l
c0101cde	kernel.S	/^c0101cde:	6a 00                	push   $0x0$/;"	l
c0101ce0	kernel.S	/^c0101ce0:	68 f6 03 00 00       	push   $0x3f6$/;"	l
c0101ce5	kernel.S	/^c0101ce5:	e9 09 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101cea	kernel.S	/^c0101cea <irq_empty>:$/;"	l
c0101cea	kernel.S	/^c0101cea:	6a 00                	push   $0x0$/;"	l
c0101cec	kernel.S	/^c0101cec:	6a ff                	push   $0xffffffff$/;"	l
c0101cee	kernel.S	/^c0101cee:	e9 00 00 00 00       	jmp    c0101cf3 <asm_do_irq>$/;"	l
c0101cf3	kernel.S	/^c0101cf3 <asm_do_irq>:$/;"	l
c0101cf3	kernel.S	/^c0101cf3:	60                   	pusha  $/;"	l
c0101cf4	kernel.S	/^c0101cf4:	54                   	push   %esp$/;"	l
c0101cf5	kernel.S	/^c0101cf5:	e8 e0 f8 ff ff       	call   c01015da <irq_handle>$/;"	l
c0101cfa	kernel.S	/^c0101cfa:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101cfd	kernel.S	/^c0101cfd:	61                   	popa   $/;"	l
c0101cfe	kernel.S	/^c0101cfe:	83 c4 08             	add    $0x8,%esp$/;"	l
c0101d01	kernel.S	/^c0101d01:	cf                   	iret   $/;"	l
c0101d02	kernel.S	/^c0101d02 <strlen>:$/;"	l
c0101d02	kernel.S	/^c0101d02:	55                   	push   %ebp$/;"	l
c0101d03	kernel.S	/^c0101d03:	89 e5                	mov    %esp,%ebp$/;"	l
c0101d05	kernel.S	/^c0101d05:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101d08	kernel.S	/^c0101d08:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101d0f	kernel.S	/^c0101d0f:	eb 08                	jmp    c0101d19 <strlen+0x17>$/;"	l
c0101d11	kernel.S	/^c0101d11:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101d15	kernel.S	/^c0101d15:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0101d19	kernel.S	/^c0101d19:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101d1c	kernel.S	/^c0101d1c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101d1f	kernel.S	/^c0101d1f:	84 c0                	test   %al,%al$/;"	l
c0101d21	kernel.S	/^c0101d21:	75 ee                	jne    c0101d11 <strlen+0xf>$/;"	l
c0101d23	kernel.S	/^c0101d23:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101d26	kernel.S	/^c0101d26:	c9                   	leave  $/;"	l
c0101d27	kernel.S	/^c0101d27:	c3                   	ret    $/;"	l
c0101d28	kernel.S	/^c0101d28 <strnlen>:$/;"	l
c0101d28	kernel.S	/^c0101d28:	55                   	push   %ebp$/;"	l
c0101d29	kernel.S	/^c0101d29:	89 e5                	mov    %esp,%ebp$/;"	l
c0101d2b	kernel.S	/^c0101d2b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101d2e	kernel.S	/^c0101d2e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101d35	kernel.S	/^c0101d35:	eb 0c                	jmp    c0101d43 <strnlen+0x1b>$/;"	l
c0101d37	kernel.S	/^c0101d37:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101d3b	kernel.S	/^c0101d3b:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0101d3f	kernel.S	/^c0101d3f:	83 6d 0c 01          	subl   $0x1,0xc(%ebp)$/;"	l
c0101d43	kernel.S	/^c0101d43:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0101d47	kernel.S	/^c0101d47:	74 0a                	je     c0101d53 <strnlen+0x2b>$/;"	l
c0101d49	kernel.S	/^c0101d49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101d4c	kernel.S	/^c0101d4c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101d4f	kernel.S	/^c0101d4f:	84 c0                	test   %al,%al$/;"	l
c0101d51	kernel.S	/^c0101d51:	75 e4                	jne    c0101d37 <strnlen+0xf>$/;"	l
c0101d53	kernel.S	/^c0101d53:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101d56	kernel.S	/^c0101d56:	c9                   	leave  $/;"	l
c0101d57	kernel.S	/^c0101d57:	c3                   	ret    $/;"	l
c0101d58	kernel.S	/^c0101d58 <strcpy>:$/;"	l
c0101d58	kernel.S	/^c0101d58:	55                   	push   %ebp$/;"	l
c0101d59	kernel.S	/^c0101d59:	89 e5                	mov    %esp,%ebp$/;"	l
c0101d5b	kernel.S	/^c0101d5b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101d5e	kernel.S	/^c0101d5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101d61	kernel.S	/^c0101d61:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0101d64	kernel.S	/^c0101d64:	90                   	nop$/;"	l
c0101d65	kernel.S	/^c0101d65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101d68	kernel.S	/^c0101d68:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101d6b	kernel.S	/^c0101d6b:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0101d6e	kernel.S	/^c0101d6e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101d71	kernel.S	/^c0101d71:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
c0101d74	kernel.S	/^c0101d74:	89 4d 0c             	mov    %ecx,0xc(%ebp)$/;"	l
c0101d77	kernel.S	/^c0101d77:	0f b6 12             	movzbl (%edx),%edx$/;"	l
c0101d7a	kernel.S	/^c0101d7a:	88 10                	mov    %dl,(%eax)$/;"	l
c0101d7c	kernel.S	/^c0101d7c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101d7f	kernel.S	/^c0101d7f:	84 c0                	test   %al,%al$/;"	l
c0101d81	kernel.S	/^c0101d81:	75 e2                	jne    c0101d65 <strcpy+0xd>$/;"	l
c0101d83	kernel.S	/^c0101d83:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101d86	kernel.S	/^c0101d86:	c9                   	leave  $/;"	l
c0101d87	kernel.S	/^c0101d87:	c3                   	ret    $/;"	l
c0101d88	kernel.S	/^c0101d88 <strcat>:$/;"	l
c0101d88	kernel.S	/^c0101d88:	55                   	push   %ebp$/;"	l
c0101d89	kernel.S	/^c0101d89:	89 e5                	mov    %esp,%ebp$/;"	l
c0101d8b	kernel.S	/^c0101d8b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101d8e	kernel.S	/^c0101d8e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101d91	kernel.S	/^c0101d91:	e8 6c ff ff ff       	call   c0101d02 <strlen>$/;"	l
c0101d96	kernel.S	/^c0101d96:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101d99	kernel.S	/^c0101d99:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0101d9c	kernel.S	/^c0101d9c:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0101d9f	kernel.S	/^c0101d9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101da2	kernel.S	/^c0101da2:	01 d0                	add    %edx,%eax$/;"	l
c0101da4	kernel.S	/^c0101da4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0101da7	kernel.S	/^c0101da7:	50                   	push   %eax$/;"	l
c0101da8	kernel.S	/^c0101da8:	e8 ab ff ff ff       	call   c0101d58 <strcpy>$/;"	l
c0101dad	kernel.S	/^c0101dad:	83 c4 08             	add    $0x8,%esp$/;"	l
c0101db0	kernel.S	/^c0101db0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101db3	kernel.S	/^c0101db3:	c9                   	leave  $/;"	l
c0101db4	kernel.S	/^c0101db4:	c3                   	ret    $/;"	l
c0101db5	kernel.S	/^c0101db5 <strncpy>:$/;"	l
c0101db5	kernel.S	/^c0101db5:	55                   	push   %ebp$/;"	l
c0101db6	kernel.S	/^c0101db6:	89 e5                	mov    %esp,%ebp$/;"	l
c0101db8	kernel.S	/^c0101db8:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101dbb	kernel.S	/^c0101dbb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101dbe	kernel.S	/^c0101dbe:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0101dc1	kernel.S	/^c0101dc1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101dc8	kernel.S	/^c0101dc8:	eb 23                	jmp    c0101ded <strncpy+0x38>$/;"	l
c0101dca	kernel.S	/^c0101dca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101dcd	kernel.S	/^c0101dcd:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101dd0	kernel.S	/^c0101dd0:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0101dd3	kernel.S	/^c0101dd3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101dd6	kernel.S	/^c0101dd6:	0f b6 12             	movzbl (%edx),%edx$/;"	l
c0101dd9	kernel.S	/^c0101dd9:	88 10                	mov    %dl,(%eax)$/;"	l
c0101ddb	kernel.S	/^c0101ddb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101dde	kernel.S	/^c0101dde:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101de1	kernel.S	/^c0101de1:	84 c0                	test   %al,%al$/;"	l
c0101de3	kernel.S	/^c0101de3:	74 04                	je     c0101de9 <strncpy+0x34>$/;"	l
c0101de5	kernel.S	/^c0101de5:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c0101de9	kernel.S	/^c0101de9:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101ded	kernel.S	/^c0101ded:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101df0	kernel.S	/^c0101df0:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0101df3	kernel.S	/^c0101df3:	72 d5                	jb     c0101dca <strncpy+0x15>$/;"	l
c0101df5	kernel.S	/^c0101df5:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0101df8	kernel.S	/^c0101df8:	c9                   	leave  $/;"	l
c0101df9	kernel.S	/^c0101df9:	c3                   	ret    $/;"	l
c0101dfa	kernel.S	/^c0101dfa <strlcpy>:$/;"	l
c0101dfa	kernel.S	/^c0101dfa:	55                   	push   %ebp$/;"	l
c0101dfb	kernel.S	/^c0101dfb:	89 e5                	mov    %esp,%ebp$/;"	l
c0101dfd	kernel.S	/^c0101dfd:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101e00	kernel.S	/^c0101e00:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101e03	kernel.S	/^c0101e03:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0101e06	kernel.S	/^c0101e06:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0101e0a	kernel.S	/^c0101e0a:	74 33                	je     c0101e3f <strlcpy+0x45>$/;"	l
c0101e0c	kernel.S	/^c0101e0c:	eb 17                	jmp    c0101e25 <strlcpy+0x2b>$/;"	l
c0101e0e	kernel.S	/^c0101e0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101e11	kernel.S	/^c0101e11:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101e14	kernel.S	/^c0101e14:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0101e17	kernel.S	/^c0101e17:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101e1a	kernel.S	/^c0101e1a:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
c0101e1d	kernel.S	/^c0101e1d:	89 4d 0c             	mov    %ecx,0xc(%ebp)$/;"	l
c0101e20	kernel.S	/^c0101e20:	0f b6 12             	movzbl (%edx),%edx$/;"	l
c0101e23	kernel.S	/^c0101e23:	88 10                	mov    %dl,(%eax)$/;"	l
c0101e25	kernel.S	/^c0101e25:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0101e29	kernel.S	/^c0101e29:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0101e2d	kernel.S	/^c0101e2d:	74 0a                	je     c0101e39 <strlcpy+0x3f>$/;"	l
c0101e2f	kernel.S	/^c0101e2f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101e32	kernel.S	/^c0101e32:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101e35	kernel.S	/^c0101e35:	84 c0                	test   %al,%al$/;"	l
c0101e37	kernel.S	/^c0101e37:	75 d5                	jne    c0101e0e <strlcpy+0x14>$/;"	l
c0101e39	kernel.S	/^c0101e39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101e3c	kernel.S	/^c0101e3c:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101e3f	kernel.S	/^c0101e3f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101e42	kernel.S	/^c0101e42:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101e45	kernel.S	/^c0101e45:	29 c2                	sub    %eax,%edx$/;"	l
c0101e47	kernel.S	/^c0101e47:	89 d0                	mov    %edx,%eax$/;"	l
c0101e49	kernel.S	/^c0101e49:	c9                   	leave  $/;"	l
c0101e4a	kernel.S	/^c0101e4a:	c3                   	ret    $/;"	l
c0101e4b	kernel.S	/^c0101e4b <strcmp>:$/;"	l
c0101e4b	kernel.S	/^c0101e4b:	55                   	push   %ebp$/;"	l
c0101e4c	kernel.S	/^c0101e4c:	89 e5                	mov    %esp,%ebp$/;"	l
c0101e4e	kernel.S	/^c0101e4e:	eb 08                	jmp    c0101e58 <strcmp+0xd>$/;"	l
c0101e50	kernel.S	/^c0101e50:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0101e54	kernel.S	/^c0101e54:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c0101e58	kernel.S	/^c0101e58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101e5b	kernel.S	/^c0101e5b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101e5e	kernel.S	/^c0101e5e:	84 c0                	test   %al,%al$/;"	l
c0101e60	kernel.S	/^c0101e60:	74 10                	je     c0101e72 <strcmp+0x27>$/;"	l
c0101e62	kernel.S	/^c0101e62:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101e65	kernel.S	/^c0101e65:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c0101e68	kernel.S	/^c0101e68:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101e6b	kernel.S	/^c0101e6b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101e6e	kernel.S	/^c0101e6e:	38 c2                	cmp    %al,%dl$/;"	l
c0101e70	kernel.S	/^c0101e70:	74 de                	je     c0101e50 <strcmp+0x5>$/;"	l
c0101e72	kernel.S	/^c0101e72:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101e75	kernel.S	/^c0101e75:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101e78	kernel.S	/^c0101e78:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101e7b	kernel.S	/^c0101e7b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101e7e	kernel.S	/^c0101e7e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101e81	kernel.S	/^c0101e81:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e84	kernel.S	/^c0101e84:	29 c2                	sub    %eax,%edx$/;"	l
c0101e86	kernel.S	/^c0101e86:	89 d0                	mov    %edx,%eax$/;"	l
c0101e88	kernel.S	/^c0101e88:	5d                   	pop    %ebp$/;"	l
c0101e89	kernel.S	/^c0101e89:	c3                   	ret    $/;"	l
c0101e8a	kernel.S	/^c0101e8a <strncmp>:$/;"	l
c0101e8a	kernel.S	/^c0101e8a:	55                   	push   %ebp$/;"	l
c0101e8b	kernel.S	/^c0101e8b:	89 e5                	mov    %esp,%ebp$/;"	l
c0101e8d	kernel.S	/^c0101e8d:	eb 0c                	jmp    c0101e9b <strncmp+0x11>$/;"	l
c0101e8f	kernel.S	/^c0101e8f:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0101e93	kernel.S	/^c0101e93:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0101e97	kernel.S	/^c0101e97:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c0101e9b	kernel.S	/^c0101e9b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0101e9f	kernel.S	/^c0101e9f:	74 1a                	je     c0101ebb <strncmp+0x31>$/;"	l
c0101ea1	kernel.S	/^c0101ea1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ea4	kernel.S	/^c0101ea4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101ea7	kernel.S	/^c0101ea7:	84 c0                	test   %al,%al$/;"	l
c0101ea9	kernel.S	/^c0101ea9:	74 10                	je     c0101ebb <strncmp+0x31>$/;"	l
c0101eab	kernel.S	/^c0101eab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101eae	kernel.S	/^c0101eae:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c0101eb1	kernel.S	/^c0101eb1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101eb4	kernel.S	/^c0101eb4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101eb7	kernel.S	/^c0101eb7:	38 c2                	cmp    %al,%dl$/;"	l
c0101eb9	kernel.S	/^c0101eb9:	74 d4                	je     c0101e8f <strncmp+0x5>$/;"	l
c0101ebb	kernel.S	/^c0101ebb:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0101ebf	kernel.S	/^c0101ebf:	75 07                	jne    c0101ec8 <strncmp+0x3e>$/;"	l
c0101ec1	kernel.S	/^c0101ec1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101ec6	kernel.S	/^c0101ec6:	eb 16                	jmp    c0101ede <strncmp+0x54>$/;"	l
c0101ec8	kernel.S	/^c0101ec8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ecb	kernel.S	/^c0101ecb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101ece	kernel.S	/^c0101ece:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101ed1	kernel.S	/^c0101ed1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101ed4	kernel.S	/^c0101ed4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101ed7	kernel.S	/^c0101ed7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101eda	kernel.S	/^c0101eda:	29 c2                	sub    %eax,%edx$/;"	l
c0101edc	kernel.S	/^c0101edc:	89 d0                	mov    %edx,%eax$/;"	l
c0101ede	kernel.S	/^c0101ede:	5d                   	pop    %ebp$/;"	l
c0101edf	kernel.S	/^c0101edf:	c3                   	ret    $/;"	l
c0101ee0	kernel.S	/^c0101ee0 <strchr>:$/;"	l
c0101ee0	kernel.S	/^c0101ee0:	55                   	push   %ebp$/;"	l
c0101ee1	kernel.S	/^c0101ee1:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ee3	kernel.S	/^c0101ee3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101ee6	kernel.S	/^c0101ee6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101ee9	kernel.S	/^c0101ee9:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c0101eec	kernel.S	/^c0101eec:	eb 14                	jmp    c0101f02 <strchr+0x22>$/;"	l
c0101eee	kernel.S	/^c0101eee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ef1	kernel.S	/^c0101ef1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101ef4	kernel.S	/^c0101ef4:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c0101ef7	kernel.S	/^c0101ef7:	75 05                	jne    c0101efe <strchr+0x1e>$/;"	l
c0101ef9	kernel.S	/^c0101ef9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101efc	kernel.S	/^c0101efc:	eb 13                	jmp    c0101f11 <strchr+0x31>$/;"	l
c0101efe	kernel.S	/^c0101efe:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0101f02	kernel.S	/^c0101f02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101f05	kernel.S	/^c0101f05:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101f08	kernel.S	/^c0101f08:	84 c0                	test   %al,%al$/;"	l
c0101f0a	kernel.S	/^c0101f0a:	75 e2                	jne    c0101eee <strchr+0xe>$/;"	l
c0101f0c	kernel.S	/^c0101f0c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101f11	kernel.S	/^c0101f11:	c9                   	leave  $/;"	l
c0101f12	kernel.S	/^c0101f12:	c3                   	ret    $/;"	l
c0101f13	kernel.S	/^c0101f13 <strfind>:$/;"	l
c0101f13	kernel.S	/^c0101f13:	55                   	push   %ebp$/;"	l
c0101f14	kernel.S	/^c0101f14:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f16	kernel.S	/^c0101f16:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101f19	kernel.S	/^c0101f19:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f1c	kernel.S	/^c0101f1c:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c0101f1f	kernel.S	/^c0101f1f:	eb 0f                	jmp    c0101f30 <strfind+0x1d>$/;"	l
c0101f21	kernel.S	/^c0101f21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101f24	kernel.S	/^c0101f24:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101f27	kernel.S	/^c0101f27:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c0101f2a	kernel.S	/^c0101f2a:	74 10                	je     c0101f3c <strfind+0x29>$/;"	l
c0101f2c	kernel.S	/^c0101f2c:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0101f30	kernel.S	/^c0101f30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101f33	kernel.S	/^c0101f33:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101f36	kernel.S	/^c0101f36:	84 c0                	test   %al,%al$/;"	l
c0101f38	kernel.S	/^c0101f38:	75 e7                	jne    c0101f21 <strfind+0xe>$/;"	l
c0101f3a	kernel.S	/^c0101f3a:	eb 01                	jmp    c0101f3d <strfind+0x2a>$/;"	l
c0101f3c	kernel.S	/^c0101f3c:	90                   	nop$/;"	l
c0101f3d	kernel.S	/^c0101f3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101f40	kernel.S	/^c0101f40:	c9                   	leave  $/;"	l
c0101f41	kernel.S	/^c0101f41:	c3                   	ret    $/;"	l
c0101f42	kernel.S	/^c0101f42 <memset>:$/;"	l
c0101f42	kernel.S	/^c0101f42:	55                   	push   %ebp$/;"	l
c0101f43	kernel.S	/^c0101f43:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f45	kernel.S	/^c0101f45:	57                   	push   %edi$/;"	l
c0101f46	kernel.S	/^c0101f46:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0101f4a	kernel.S	/^c0101f4a:	75 05                	jne    c0101f51 <memset+0xf>$/;"	l
c0101f4c	kernel.S	/^c0101f4c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101f4f	kernel.S	/^c0101f4f:	eb 5c                	jmp    c0101fad <memset+0x6b>$/;"	l
c0101f51	kernel.S	/^c0101f51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101f54	kernel.S	/^c0101f54:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101f57	kernel.S	/^c0101f57:	85 c0                	test   %eax,%eax$/;"	l
c0101f59	kernel.S	/^c0101f59:	75 41                	jne    c0101f9c <memset+0x5a>$/;"	l
c0101f5b	kernel.S	/^c0101f5b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101f5e	kernel.S	/^c0101f5e:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101f61	kernel.S	/^c0101f61:	85 c0                	test   %eax,%eax$/;"	l
c0101f63	kernel.S	/^c0101f63:	75 37                	jne    c0101f9c <memset+0x5a>$/;"	l
c0101f65	kernel.S	/^c0101f65:	81 65 0c ff 00 00 00 	andl   $0xff,0xc(%ebp)$/;"	l
c0101f6c	kernel.S	/^c0101f6c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f6f	kernel.S	/^c0101f6f:	c1 e0 18             	shl    $0x18,%eax$/;"	l
c0101f72	kernel.S	/^c0101f72:	89 c2                	mov    %eax,%edx$/;"	l
c0101f74	kernel.S	/^c0101f74:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f77	kernel.S	/^c0101f77:	c1 e0 10             	shl    $0x10,%eax$/;"	l
c0101f7a	kernel.S	/^c0101f7a:	09 c2                	or     %eax,%edx$/;"	l
c0101f7c	kernel.S	/^c0101f7c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f7f	kernel.S	/^c0101f7f:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0101f82	kernel.S	/^c0101f82:	09 d0                	or     %edx,%eax$/;"	l
c0101f84	kernel.S	/^c0101f84:	09 45 0c             	or     %eax,0xc(%ebp)$/;"	l
c0101f87	kernel.S	/^c0101f87:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101f8a	kernel.S	/^c0101f8a:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c0101f8d	kernel.S	/^c0101f8d:	89 c1                	mov    %eax,%ecx$/;"	l
c0101f8f	kernel.S	/^c0101f8f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101f92	kernel.S	/^c0101f92:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f95	kernel.S	/^c0101f95:	89 d7                	mov    %edx,%edi$/;"	l
c0101f97	kernel.S	/^c0101f97:	fc                   	cld    $/;"	l
c0101f98	kernel.S	/^c0101f98:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
c0101f9a	kernel.S	/^c0101f9a:	eb 0e                	jmp    c0101faa <memset+0x68>$/;"	l
c0101f9c	kernel.S	/^c0101f9c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101f9f	kernel.S	/^c0101f9f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101fa2	kernel.S	/^c0101fa2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0101fa5	kernel.S	/^c0101fa5:	89 d7                	mov    %edx,%edi$/;"	l
c0101fa7	kernel.S	/^c0101fa7:	fc                   	cld    $/;"	l
c0101fa8	kernel.S	/^c0101fa8:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c0101faa	kernel.S	/^c0101faa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101fad	kernel.S	/^c0101fad:	5f                   	pop    %edi$/;"	l
c0101fae	kernel.S	/^c0101fae:	5d                   	pop    %ebp$/;"	l
c0101faf	kernel.S	/^c0101faf:	c3                   	ret    $/;"	l
c0101fb0	kernel.S	/^c0101fb0 <memmove>:$/;"	l
c0101fb0	kernel.S	/^c0101fb0:	55                   	push   %ebp$/;"	l
c0101fb1	kernel.S	/^c0101fb1:	89 e5                	mov    %esp,%ebp$/;"	l
c0101fb3	kernel.S	/^c0101fb3:	57                   	push   %edi$/;"	l
c0101fb4	kernel.S	/^c0101fb4:	56                   	push   %esi$/;"	l
c0101fb5	kernel.S	/^c0101fb5:	53                   	push   %ebx$/;"	l
c0101fb6	kernel.S	/^c0101fb6:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101fb9	kernel.S	/^c0101fb9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101fbc	kernel.S	/^c0101fbc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101fbf	kernel.S	/^c0101fbf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101fc2	kernel.S	/^c0101fc2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0101fc5	kernel.S	/^c0101fc5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0101fc8	kernel.S	/^c0101fc8:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0101fcb	kernel.S	/^c0101fcb:	73 6d                	jae    c010203a <memmove+0x8a>$/;"	l
c0101fcd	kernel.S	/^c0101fcd:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0101fd0	kernel.S	/^c0101fd0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101fd3	kernel.S	/^c0101fd3:	01 d0                	add    %edx,%eax$/;"	l
c0101fd5	kernel.S	/^c0101fd5:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0101fd8	kernel.S	/^c0101fd8:	76 60                	jbe    c010203a <memmove+0x8a>$/;"	l
c0101fda	kernel.S	/^c0101fda:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101fdd	kernel.S	/^c0101fdd:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0101fe0	kernel.S	/^c0101fe0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101fe3	kernel.S	/^c0101fe3:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c0101fe6	kernel.S	/^c0101fe6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0101fe9	kernel.S	/^c0101fe9:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101fec	kernel.S	/^c0101fec:	85 c0                	test   %eax,%eax$/;"	l
c0101fee	kernel.S	/^c0101fee:	75 2f                	jne    c010201f <memmove+0x6f>$/;"	l
c0101ff0	kernel.S	/^c0101ff0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101ff3	kernel.S	/^c0101ff3:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101ff6	kernel.S	/^c0101ff6:	85 c0                	test   %eax,%eax$/;"	l
c0101ff8	kernel.S	/^c0101ff8:	75 25                	jne    c010201f <memmove+0x6f>$/;"	l
c0101ffa	kernel.S	/^c0101ffa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101ffd	kernel.S	/^c0101ffd:	83 e0 03             	and    $0x3,%eax$/;"	l
c0102000	kernel.S	/^c0102000:	85 c0                	test   %eax,%eax$/;"	l
c0102002	kernel.S	/^c0102002:	75 1b                	jne    c010201f <memmove+0x6f>$/;"	l
c0102004	kernel.S	/^c0102004:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0102007	kernel.S	/^c0102007:	83 e8 04             	sub    $0x4,%eax$/;"	l
c010200a	kernel.S	/^c010200a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010200d	kernel.S	/^c010200d:	83 ea 04             	sub    $0x4,%edx$/;"	l
c0102010	kernel.S	/^c0102010:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0102013	kernel.S	/^c0102013:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
c0102016	kernel.S	/^c0102016:	89 c7                	mov    %eax,%edi$/;"	l
c0102018	kernel.S	/^c0102018:	89 d6                	mov    %edx,%esi$/;"	l
c010201a	kernel.S	/^c010201a:	fd                   	std    $/;"	l
c010201b	kernel.S	/^c010201b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010201d	kernel.S	/^c010201d:	eb 18                	jmp    c0102037 <memmove+0x87>$/;"	l
c010201f	kernel.S	/^c010201f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0102022	kernel.S	/^c0102022:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0102025	kernel.S	/^c0102025:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102028	kernel.S	/^c0102028:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
c010202b	kernel.S	/^c010202b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010202e	kernel.S	/^c010202e:	89 d7                	mov    %edx,%edi$/;"	l
c0102030	kernel.S	/^c0102030:	89 de                	mov    %ebx,%esi$/;"	l
c0102032	kernel.S	/^c0102032:	89 c1                	mov    %eax,%ecx$/;"	l
c0102034	kernel.S	/^c0102034:	fd                   	std    $/;"	l
c0102035	kernel.S	/^c0102035:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c0102037	kernel.S	/^c0102037:	fc                   	cld    $/;"	l
c0102038	kernel.S	/^c0102038:	eb 45                	jmp    c010207f <memmove+0xcf>$/;"	l
c010203a	kernel.S	/^c010203a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010203d	kernel.S	/^c010203d:	83 e0 03             	and    $0x3,%eax$/;"	l
c0102040	kernel.S	/^c0102040:	85 c0                	test   %eax,%eax$/;"	l
c0102042	kernel.S	/^c0102042:	75 2b                	jne    c010206f <memmove+0xbf>$/;"	l
c0102044	kernel.S	/^c0102044:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0102047	kernel.S	/^c0102047:	83 e0 03             	and    $0x3,%eax$/;"	l
c010204a	kernel.S	/^c010204a:	85 c0                	test   %eax,%eax$/;"	l
c010204c	kernel.S	/^c010204c:	75 21                	jne    c010206f <memmove+0xbf>$/;"	l
c010204e	kernel.S	/^c010204e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0102051	kernel.S	/^c0102051:	83 e0 03             	and    $0x3,%eax$/;"	l
c0102054	kernel.S	/^c0102054:	85 c0                	test   %eax,%eax$/;"	l
c0102056	kernel.S	/^c0102056:	75 17                	jne    c010206f <memmove+0xbf>$/;"	l
c0102058	kernel.S	/^c0102058:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010205b	kernel.S	/^c010205b:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010205e	kernel.S	/^c010205e:	89 c1                	mov    %eax,%ecx$/;"	l
c0102060	kernel.S	/^c0102060:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0102063	kernel.S	/^c0102063:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0102066	kernel.S	/^c0102066:	89 c7                	mov    %eax,%edi$/;"	l
c0102068	kernel.S	/^c0102068:	89 d6                	mov    %edx,%esi$/;"	l
c010206a	kernel.S	/^c010206a:	fc                   	cld    $/;"	l
c010206b	kernel.S	/^c010206b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010206d	kernel.S	/^c010206d:	eb 10                	jmp    c010207f <memmove+0xcf>$/;"	l
c010206f	kernel.S	/^c010206f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0102072	kernel.S	/^c0102072:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0102075	kernel.S	/^c0102075:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0102078	kernel.S	/^c0102078:	89 c7                	mov    %eax,%edi$/;"	l
c010207a	kernel.S	/^c010207a:	89 d6                	mov    %edx,%esi$/;"	l
c010207c	kernel.S	/^c010207c:	fc                   	cld    $/;"	l
c010207d	kernel.S	/^c010207d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010207f	kernel.S	/^c010207f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102082	kernel.S	/^c0102082:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102085	kernel.S	/^c0102085:	5b                   	pop    %ebx$/;"	l
c0102086	kernel.S	/^c0102086:	5e                   	pop    %esi$/;"	l
c0102087	kernel.S	/^c0102087:	5f                   	pop    %edi$/;"	l
c0102088	kernel.S	/^c0102088:	5d                   	pop    %ebp$/;"	l
c0102089	kernel.S	/^c0102089:	c3                   	ret    $/;"	l
c010208a	kernel.S	/^c010208a <memcpy>:$/;"	l
c010208a	kernel.S	/^c010208a:	55                   	push   %ebp$/;"	l
c010208b	kernel.S	/^c010208b:	89 e5                	mov    %esp,%ebp$/;"	l
c010208d	kernel.S	/^c010208d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0102090	kernel.S	/^c0102090:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0102093	kernel.S	/^c0102093:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102096	kernel.S	/^c0102096:	e8 15 ff ff ff       	call   c0101fb0 <memmove>$/;"	l
c010209b	kernel.S	/^c010209b:	83 c4 0c             	add    $0xc,%esp$/;"	l
c010209e	kernel.S	/^c010209e:	c9                   	leave  $/;"	l
c010209f	kernel.S	/^c010209f:	c3                   	ret    $/;"	l
c01020a0	kernel.S	/^c01020a0 <memcmp>:$/;"	l
c01020a0	kernel.S	/^c01020a0:	55                   	push   %ebp$/;"	l
c01020a1	kernel.S	/^c01020a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01020a3	kernel.S	/^c01020a3:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01020a6	kernel.S	/^c01020a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01020a9	kernel.S	/^c01020a9:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01020ac	kernel.S	/^c01020ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01020af	kernel.S	/^c01020af:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01020b2	kernel.S	/^c01020b2:	eb 30                	jmp    c01020e4 <memcmp+0x44>$/;"	l
c01020b4	kernel.S	/^c01020b4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01020b7	kernel.S	/^c01020b7:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01020ba	kernel.S	/^c01020ba:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01020bd	kernel.S	/^c01020bd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01020c0	kernel.S	/^c01020c0:	38 c2                	cmp    %al,%dl$/;"	l
c01020c2	kernel.S	/^c01020c2:	74 18                	je     c01020dc <memcmp+0x3c>$/;"	l
c01020c4	kernel.S	/^c01020c4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01020c7	kernel.S	/^c01020c7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01020ca	kernel.S	/^c01020ca:	0f b6 d0             	movzbl %al,%edx$/;"	l
c01020cd	kernel.S	/^c01020cd:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01020d0	kernel.S	/^c01020d0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01020d3	kernel.S	/^c01020d3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01020d6	kernel.S	/^c01020d6:	29 c2                	sub    %eax,%edx$/;"	l
c01020d8	kernel.S	/^c01020d8:	89 d0                	mov    %edx,%eax$/;"	l
c01020da	kernel.S	/^c01020da:	eb 1a                	jmp    c01020f6 <memcmp+0x56>$/;"	l
c01020dc	kernel.S	/^c01020dc:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01020e0	kernel.S	/^c01020e0:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c01020e4	kernel.S	/^c01020e4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01020e7	kernel.S	/^c01020e7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01020ea	kernel.S	/^c01020ea:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01020ed	kernel.S	/^c01020ed:	85 c0                	test   %eax,%eax$/;"	l
c01020ef	kernel.S	/^c01020ef:	75 c3                	jne    c01020b4 <memcmp+0x14>$/;"	l
c01020f1	kernel.S	/^c01020f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01020f6	kernel.S	/^c01020f6:	c9                   	leave  $/;"	l
c01020f7	kernel.S	/^c01020f7:	c3                   	ret    $/;"	l
c01020f8	kernel.S	/^c01020f8 <memfind>:$/;"	l
c01020f8	kernel.S	/^c01020f8:	55                   	push   %ebp$/;"	l
c01020f9	kernel.S	/^c01020f9:	89 e5                	mov    %esp,%ebp$/;"	l
c01020fb	kernel.S	/^c01020fb:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01020fe	kernel.S	/^c01020fe:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102101	kernel.S	/^c0102101:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0102104	kernel.S	/^c0102104:	01 d0                	add    %edx,%eax$/;"	l
c0102106	kernel.S	/^c0102106:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0102109	kernel.S	/^c0102109:	eb 17                	jmp    c0102122 <memfind+0x2a>$/;"	l
c010210b	kernel.S	/^c010210b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010210e	kernel.S	/^c010210e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102111	kernel.S	/^c0102111:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0102114	kernel.S	/^c0102114:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0102117	kernel.S	/^c0102117:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010211a	kernel.S	/^c010211a:	39 c2                	cmp    %eax,%edx$/;"	l
c010211c	kernel.S	/^c010211c:	74 0e                	je     c010212c <memfind+0x34>$/;"	l
c010211e	kernel.S	/^c010211e:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0102122	kernel.S	/^c0102122:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102125	kernel.S	/^c0102125:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0102128	kernel.S	/^c0102128:	72 e1                	jb     c010210b <memfind+0x13>$/;"	l
c010212a	kernel.S	/^c010212a:	eb 01                	jmp    c010212d <memfind+0x35>$/;"	l
c010212c	kernel.S	/^c010212c:	90                   	nop$/;"	l
c010212d	kernel.S	/^c010212d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102130	kernel.S	/^c0102130:	c9                   	leave  $/;"	l
c0102131	kernel.S	/^c0102131:	c3                   	ret    $/;"	l
c0102132	kernel.S	/^c0102132 <strtol>:$/;"	l
c0102132	kernel.S	/^c0102132:	55                   	push   %ebp$/;"	l
c0102133	kernel.S	/^c0102133:	89 e5                	mov    %esp,%ebp$/;"	l
c0102135	kernel.S	/^c0102135:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0102138	kernel.S	/^c0102138:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010213f	kernel.S	/^c010213f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0102146	kernel.S	/^c0102146:	eb 04                	jmp    c010214c <strtol+0x1a>$/;"	l
c0102148	kernel.S	/^c0102148:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010214c	kernel.S	/^c010214c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010214f	kernel.S	/^c010214f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102152	kernel.S	/^c0102152:	3c 20                	cmp    $0x20,%al$/;"	l
c0102154	kernel.S	/^c0102154:	74 f2                	je     c0102148 <strtol+0x16>$/;"	l
c0102156	kernel.S	/^c0102156:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102159	kernel.S	/^c0102159:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010215c	kernel.S	/^c010215c:	3c 09                	cmp    $0x9,%al$/;"	l
c010215e	kernel.S	/^c010215e:	74 e8                	je     c0102148 <strtol+0x16>$/;"	l
c0102160	kernel.S	/^c0102160:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102163	kernel.S	/^c0102163:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102166	kernel.S	/^c0102166:	3c 2b                	cmp    $0x2b,%al$/;"	l
c0102168	kernel.S	/^c0102168:	75 06                	jne    c0102170 <strtol+0x3e>$/;"	l
c010216a	kernel.S	/^c010216a:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010216e	kernel.S	/^c010216e:	eb 15                	jmp    c0102185 <strtol+0x53>$/;"	l
c0102170	kernel.S	/^c0102170:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102173	kernel.S	/^c0102173:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102176	kernel.S	/^c0102176:	3c 2d                	cmp    $0x2d,%al$/;"	l
c0102178	kernel.S	/^c0102178:	75 0b                	jne    c0102185 <strtol+0x53>$/;"	l
c010217a	kernel.S	/^c010217a:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010217e	kernel.S	/^c010217e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c0102185	kernel.S	/^c0102185:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0102189	kernel.S	/^c0102189:	74 06                	je     c0102191 <strtol+0x5f>$/;"	l
c010218b	kernel.S	/^c010218b:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c010218f	kernel.S	/^c010218f:	75 24                	jne    c01021b5 <strtol+0x83>$/;"	l
c0102191	kernel.S	/^c0102191:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102194	kernel.S	/^c0102194:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102197	kernel.S	/^c0102197:	3c 30                	cmp    $0x30,%al$/;"	l
c0102199	kernel.S	/^c0102199:	75 1a                	jne    c01021b5 <strtol+0x83>$/;"	l
c010219b	kernel.S	/^c010219b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010219e	kernel.S	/^c010219e:	83 c0 01             	add    $0x1,%eax$/;"	l
c01021a1	kernel.S	/^c01021a1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01021a4	kernel.S	/^c01021a4:	3c 78                	cmp    $0x78,%al$/;"	l
c01021a6	kernel.S	/^c01021a6:	75 0d                	jne    c01021b5 <strtol+0x83>$/;"	l
c01021a8	kernel.S	/^c01021a8:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c01021ac	kernel.S	/^c01021ac:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c01021b3	kernel.S	/^c01021b3:	eb 2a                	jmp    c01021df <strtol+0xad>$/;"	l
c01021b5	kernel.S	/^c01021b5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01021b9	kernel.S	/^c01021b9:	75 17                	jne    c01021d2 <strtol+0xa0>$/;"	l
c01021bb	kernel.S	/^c01021bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01021be	kernel.S	/^c01021be:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01021c1	kernel.S	/^c01021c1:	3c 30                	cmp    $0x30,%al$/;"	l
c01021c3	kernel.S	/^c01021c3:	75 0d                	jne    c01021d2 <strtol+0xa0>$/;"	l
c01021c5	kernel.S	/^c01021c5:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01021c9	kernel.S	/^c01021c9:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c01021d0	kernel.S	/^c01021d0:	eb 0d                	jmp    c01021df <strtol+0xad>$/;"	l
c01021d2	kernel.S	/^c01021d2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01021d6	kernel.S	/^c01021d6:	75 07                	jne    c01021df <strtol+0xad>$/;"	l
c01021d8	kernel.S	/^c01021d8:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c01021df	kernel.S	/^c01021df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01021e2	kernel.S	/^c01021e2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01021e5	kernel.S	/^c01021e5:	3c 2f                	cmp    $0x2f,%al$/;"	l
c01021e7	kernel.S	/^c01021e7:	7e 1b                	jle    c0102204 <strtol+0xd2>$/;"	l
c01021e9	kernel.S	/^c01021e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01021ec	kernel.S	/^c01021ec:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01021ef	kernel.S	/^c01021ef:	3c 39                	cmp    $0x39,%al$/;"	l
c01021f1	kernel.S	/^c01021f1:	7f 11                	jg     c0102204 <strtol+0xd2>$/;"	l
c01021f3	kernel.S	/^c01021f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01021f6	kernel.S	/^c01021f6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01021f9	kernel.S	/^c01021f9:	0f be c0             	movsbl %al,%eax$/;"	l
c01021fc	kernel.S	/^c01021fc:	83 e8 30             	sub    $0x30,%eax$/;"	l
c01021ff	kernel.S	/^c01021ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102202	kernel.S	/^c0102202:	eb 48                	jmp    c010224c <strtol+0x11a>$/;"	l
c0102204	kernel.S	/^c0102204:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102207	kernel.S	/^c0102207:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010220a	kernel.S	/^c010220a:	3c 60                	cmp    $0x60,%al$/;"	l
c010220c	kernel.S	/^c010220c:	7e 1b                	jle    c0102229 <strtol+0xf7>$/;"	l
c010220e	kernel.S	/^c010220e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102211	kernel.S	/^c0102211:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102214	kernel.S	/^c0102214:	3c 7a                	cmp    $0x7a,%al$/;"	l
c0102216	kernel.S	/^c0102216:	7f 11                	jg     c0102229 <strtol+0xf7>$/;"	l
c0102218	kernel.S	/^c0102218:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010221b	kernel.S	/^c010221b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010221e	kernel.S	/^c010221e:	0f be c0             	movsbl %al,%eax$/;"	l
c0102221	kernel.S	/^c0102221:	83 e8 57             	sub    $0x57,%eax$/;"	l
c0102224	kernel.S	/^c0102224:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102227	kernel.S	/^c0102227:	eb 23                	jmp    c010224c <strtol+0x11a>$/;"	l
c0102229	kernel.S	/^c0102229:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010222c	kernel.S	/^c010222c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010222f	kernel.S	/^c010222f:	3c 40                	cmp    $0x40,%al$/;"	l
c0102231	kernel.S	/^c0102231:	7e 3c                	jle    c010226f <strtol+0x13d>$/;"	l
c0102233	kernel.S	/^c0102233:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102236	kernel.S	/^c0102236:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102239	kernel.S	/^c0102239:	3c 5a                	cmp    $0x5a,%al$/;"	l
c010223b	kernel.S	/^c010223b:	7f 32                	jg     c010226f <strtol+0x13d>$/;"	l
c010223d	kernel.S	/^c010223d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102240	kernel.S	/^c0102240:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102243	kernel.S	/^c0102243:	0f be c0             	movsbl %al,%eax$/;"	l
c0102246	kernel.S	/^c0102246:	83 e8 37             	sub    $0x37,%eax$/;"	l
c0102249	kernel.S	/^c0102249:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010224c	kernel.S	/^c010224c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010224f	kernel.S	/^c010224f:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0102252	kernel.S	/^c0102252:	7d 1a                	jge    c010226e <strtol+0x13c>$/;"	l
c0102254	kernel.S	/^c0102254:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0102258	kernel.S	/^c0102258:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010225b	kernel.S	/^c010225b:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c010225f	kernel.S	/^c010225f:	89 c2                	mov    %eax,%edx$/;"	l
c0102261	kernel.S	/^c0102261:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102264	kernel.S	/^c0102264:	01 d0                	add    %edx,%eax$/;"	l
c0102266	kernel.S	/^c0102266:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0102269	kernel.S	/^c0102269:	e9 71 ff ff ff       	jmp    c01021df <strtol+0xad>$/;"	l
c010226e	kernel.S	/^c010226e:	90                   	nop$/;"	l
c010226f	kernel.S	/^c010226f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0102273	kernel.S	/^c0102273:	74 08                	je     c010227d <strtol+0x14b>$/;"	l
c0102275	kernel.S	/^c0102275:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0102278	kernel.S	/^c0102278:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010227b	kernel.S	/^c010227b:	89 10                	mov    %edx,(%eax)$/;"	l
c010227d	kernel.S	/^c010227d:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0102281	kernel.S	/^c0102281:	74 07                	je     c010228a <strtol+0x158>$/;"	l
c0102283	kernel.S	/^c0102283:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0102286	kernel.S	/^c0102286:	f7 d8                	neg    %eax$/;"	l
c0102288	kernel.S	/^c0102288:	eb 03                	jmp    c010228d <strtol+0x15b>$/;"	l
c010228a	kernel.S	/^c010228a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010228d	kernel.S	/^c010228d:	c9                   	leave  $/;"	l
c010228e	kernel.S	/^c010228e:	c3                   	ret    $/;"	l
c010228f	kernel.S	/^c010228f <printnum>:$/;"	l
c010228f	kernel.S	/^c010228f:	55                   	push   %ebp$/;"	l
c0102290	kernel.S	/^c0102290:	89 e5                	mov    %esp,%ebp$/;"	l
c0102292	kernel.S	/^c0102292:	53                   	push   %ebx$/;"	l
c0102293	kernel.S	/^c0102293:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0102296	kernel.S	/^c0102296:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0102299	kernel.S	/^c0102299:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010229c	kernel.S	/^c010229c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010229f	kernel.S	/^c010229f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01022a2	kernel.S	/^c01022a2:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01022a5	kernel.S	/^c01022a5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01022aa	kernel.S	/^c01022aa:	3b 55 f4             	cmp    -0xc(%ebp),%edx$/;"	l
c01022ad	kernel.S	/^c01022ad:	77 55                	ja     c0102304 <printnum+0x75>$/;"	l
c01022af	kernel.S	/^c01022af:	3b 55 f4             	cmp    -0xc(%ebp),%edx$/;"	l
c01022b2	kernel.S	/^c01022b2:	72 05                	jb     c01022b9 <printnum+0x2a>$/;"	l
c01022b4	kernel.S	/^c01022b4:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01022b7	kernel.S	/^c01022b7:	77 4b                	ja     c0102304 <printnum+0x75>$/;"	l
c01022b9	kernel.S	/^c01022b9:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01022bc	kernel.S	/^c01022bc:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
c01022bf	kernel.S	/^c01022bf:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01022c2	kernel.S	/^c01022c2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01022c7	kernel.S	/^c01022c7:	52                   	push   %edx$/;"	l
c01022c8	kernel.S	/^c01022c8:	50                   	push   %eax$/;"	l
c01022c9	kernel.S	/^c01022c9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01022cc	kernel.S	/^c01022cc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01022cf	kernel.S	/^c01022cf:	e8 8c 05 00 00       	call   c0102860 <__udivdi3>$/;"	l
c01022d4	kernel.S	/^c01022d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01022d7	kernel.S	/^c01022d7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01022da	kernel.S	/^c01022da:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
c01022dd	kernel.S	/^c01022dd:	53                   	push   %ebx$/;"	l
c01022de	kernel.S	/^c01022de:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c01022e1	kernel.S	/^c01022e1:	52                   	push   %edx$/;"	l
c01022e2	kernel.S	/^c01022e2:	50                   	push   %eax$/;"	l
c01022e3	kernel.S	/^c01022e3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01022e6	kernel.S	/^c01022e6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01022e9	kernel.S	/^c01022e9:	e8 a1 ff ff ff       	call   c010228f <printnum>$/;"	l
c01022ee	kernel.S	/^c01022ee:	83 c4 20             	add    $0x20,%esp$/;"	l
c01022f1	kernel.S	/^c01022f1:	eb 1b                	jmp    c010230e <printnum+0x7f>$/;"	l
c01022f3	kernel.S	/^c01022f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01022f6	kernel.S	/^c01022f6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01022f9	kernel.S	/^c01022f9:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
c01022fc	kernel.S	/^c01022fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01022ff	kernel.S	/^c01022ff:	ff d0                	call   *%eax$/;"	l
c0102301	kernel.S	/^c0102301:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102304	kernel.S	/^c0102304:	83 6d 1c 01          	subl   $0x1,0x1c(%ebp)$/;"	l
c0102308	kernel.S	/^c0102308:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c010230c	kernel.S	/^c010230c:	7f e5                	jg     c01022f3 <printnum+0x64>$/;"	l
c010230e	kernel.S	/^c010230e:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
c0102311	kernel.S	/^c0102311:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
c0102316	kernel.S	/^c0102316:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102319	kernel.S	/^c0102319:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010231c	kernel.S	/^c010231c:	53                   	push   %ebx$/;"	l
c010231d	kernel.S	/^c010231d:	51                   	push   %ecx$/;"	l
c010231e	kernel.S	/^c010231e:	52                   	push   %edx$/;"	l
c010231f	kernel.S	/^c010231f:	50                   	push   %eax$/;"	l
c0102320	kernel.S	/^c0102320:	e8 6b 06 00 00       	call   c0102990 <__umoddi3>$/;"	l
c0102325	kernel.S	/^c0102325:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102328	kernel.S	/^c0102328:	05 40 2b 26 c0       	add    $0xc0262b40,%eax$/;"	l
c010232d	kernel.S	/^c010232d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102330	kernel.S	/^c0102330:	0f be c0             	movsbl %al,%eax$/;"	l
c0102333	kernel.S	/^c0102333:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102336	kernel.S	/^c0102336:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0102339	kernel.S	/^c0102339:	50                   	push   %eax$/;"	l
c010233a	kernel.S	/^c010233a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010233d	kernel.S	/^c010233d:	ff d0                	call   *%eax$/;"	l
c010233f	kernel.S	/^c010233f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102342	kernel.S	/^c0102342:	90                   	nop$/;"	l
c0102343	kernel.S	/^c0102343:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0102346	kernel.S	/^c0102346:	c9                   	leave  $/;"	l
c0102347	kernel.S	/^c0102347:	c3                   	ret    $/;"	l
c0102348	kernel.S	/^c0102348 <getuint>:$/;"	l
c0102348	kernel.S	/^c0102348:	55                   	push   %ebp$/;"	l
c0102349	kernel.S	/^c0102349:	89 e5                	mov    %esp,%ebp$/;"	l
c010234b	kernel.S	/^c010234b:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010234f	kernel.S	/^c010234f:	7e 14                	jle    c0102365 <getuint+0x1d>$/;"	l
c0102351	kernel.S	/^c0102351:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102354	kernel.S	/^c0102354:	8b 00                	mov    (%eax),%eax$/;"	l
c0102356	kernel.S	/^c0102356:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c0102359	kernel.S	/^c0102359:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010235c	kernel.S	/^c010235c:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010235e	kernel.S	/^c010235e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0102361	kernel.S	/^c0102361:	8b 00                	mov    (%eax),%eax$/;"	l
c0102363	kernel.S	/^c0102363:	eb 30                	jmp    c0102395 <getuint+0x4d>$/;"	l
c0102365	kernel.S	/^c0102365:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0102369	kernel.S	/^c0102369:	74 16                	je     c0102381 <getuint+0x39>$/;"	l
c010236b	kernel.S	/^c010236b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010236e	kernel.S	/^c010236e:	8b 00                	mov    (%eax),%eax$/;"	l
c0102370	kernel.S	/^c0102370:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0102373	kernel.S	/^c0102373:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102376	kernel.S	/^c0102376:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0102378	kernel.S	/^c0102378:	8b 00                	mov    (%eax),%eax$/;"	l
c010237a	kernel.S	/^c010237a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010237f	kernel.S	/^c010237f:	eb 14                	jmp    c0102395 <getuint+0x4d>$/;"	l
c0102381	kernel.S	/^c0102381:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102384	kernel.S	/^c0102384:	8b 00                	mov    (%eax),%eax$/;"	l
c0102386	kernel.S	/^c0102386:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0102389	kernel.S	/^c0102389:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010238c	kernel.S	/^c010238c:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010238e	kernel.S	/^c010238e:	8b 00                	mov    (%eax),%eax$/;"	l
c0102390	kernel.S	/^c0102390:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0102395	kernel.S	/^c0102395:	5d                   	pop    %ebp$/;"	l
c0102396	kernel.S	/^c0102396:	c3                   	ret    $/;"	l
c0102397	kernel.S	/^c0102397 <getint>:$/;"	l
c0102397	kernel.S	/^c0102397:	55                   	push   %ebp$/;"	l
c0102398	kernel.S	/^c0102398:	89 e5                	mov    %esp,%ebp$/;"	l
c010239a	kernel.S	/^c010239a:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010239e	kernel.S	/^c010239e:	7e 14                	jle    c01023b4 <getint+0x1d>$/;"	l
c01023a0	kernel.S	/^c01023a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023a3	kernel.S	/^c01023a3:	8b 00                	mov    (%eax),%eax$/;"	l
c01023a5	kernel.S	/^c01023a5:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c01023a8	kernel.S	/^c01023a8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01023ab	kernel.S	/^c01023ab:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01023ad	kernel.S	/^c01023ad:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01023b0	kernel.S	/^c01023b0:	8b 00                	mov    (%eax),%eax$/;"	l
c01023b2	kernel.S	/^c01023b2:	eb 28                	jmp    c01023dc <getint+0x45>$/;"	l
c01023b4	kernel.S	/^c01023b4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01023b8	kernel.S	/^c01023b8:	74 12                	je     c01023cc <getint+0x35>$/;"	l
c01023ba	kernel.S	/^c01023ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023bd	kernel.S	/^c01023bd:	8b 00                	mov    (%eax),%eax$/;"	l
c01023bf	kernel.S	/^c01023bf:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c01023c2	kernel.S	/^c01023c2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01023c5	kernel.S	/^c01023c5:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01023c7	kernel.S	/^c01023c7:	8b 00                	mov    (%eax),%eax$/;"	l
c01023c9	kernel.S	/^c01023c9:	99                   	cltd   $/;"	l
c01023ca	kernel.S	/^c01023ca:	eb 10                	jmp    c01023dc <getint+0x45>$/;"	l
c01023cc	kernel.S	/^c01023cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023cf	kernel.S	/^c01023cf:	8b 00                	mov    (%eax),%eax$/;"	l
c01023d1	kernel.S	/^c01023d1:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c01023d4	kernel.S	/^c01023d4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01023d7	kernel.S	/^c01023d7:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01023d9	kernel.S	/^c01023d9:	8b 00                	mov    (%eax),%eax$/;"	l
c01023db	kernel.S	/^c01023db:	99                   	cltd   $/;"	l
c01023dc	kernel.S	/^c01023dc:	5d                   	pop    %ebp$/;"	l
c01023dd	kernel.S	/^c01023dd:	c3                   	ret    $/;"	l
c01023de	kernel.S	/^c01023de <vprintfmt>:$/;"	l
c01023de	kernel.S	/^c01023de:	55                   	push   %ebp$/;"	l
c01023df	kernel.S	/^c01023df:	89 e5                	mov    %esp,%ebp$/;"	l
c01023e1	kernel.S	/^c01023e1:	56                   	push   %esi$/;"	l
c01023e2	kernel.S	/^c01023e2:	53                   	push   %ebx$/;"	l
c01023e3	kernel.S	/^c01023e3:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01023e6	kernel.S	/^c01023e6:	eb 17                	jmp    c01023ff <vprintfmt+0x21>$/;"	l
c01023e8	kernel.S	/^c01023e8:	85 db                	test   %ebx,%ebx$/;"	l
c01023ea	kernel.S	/^c01023ea:	0f 84 89 03 00 00    	je     c0102779 <vprintfmt+0x39b>$/;"	l
c01023f0	kernel.S	/^c01023f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01023f3	kernel.S	/^c01023f3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01023f6	kernel.S	/^c01023f6:	53                   	push   %ebx$/;"	l
c01023f7	kernel.S	/^c01023f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023fa	kernel.S	/^c01023fa:	ff d0                	call   *%eax$/;"	l
c01023fc	kernel.S	/^c01023fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01023ff	kernel.S	/^c01023ff:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0102402	kernel.S	/^c0102402:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0102405	kernel.S	/^c0102405:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c0102408	kernel.S	/^c0102408:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010240b	kernel.S	/^c010240b:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010240e	kernel.S	/^c010240e:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c0102411	kernel.S	/^c0102411:	75 d5                	jne    c01023e8 <vprintfmt+0xa>$/;"	l
c0102413	kernel.S	/^c0102413:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c0102417	kernel.S	/^c0102417:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010241e	kernel.S	/^c010241e:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
c0102425	kernel.S	/^c0102425:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010242c	kernel.S	/^c010242c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0102433	kernel.S	/^c0102433:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0102436	kernel.S	/^c0102436:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0102439	kernel.S	/^c0102439:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010243c	kernel.S	/^c010243c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010243f	kernel.S	/^c010243f:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0102442	kernel.S	/^c0102442:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c0102445	kernel.S	/^c0102445:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c0102448	kernel.S	/^c0102448:	0f 87 fe 02 00 00    	ja     c010274c <vprintfmt+0x36e>$/;"	l
c010244e	kernel.S	/^c010244e:	8b 04 85 64 2b 26 c0 	mov    -0x3fd9d49c(,%eax,4),%eax$/;"	l
c0102455	kernel.S	/^c0102455:	ff e0                	jmp    *%eax$/;"	l
c0102457	kernel.S	/^c0102457:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c010245b	kernel.S	/^c010245b:	eb d6                	jmp    c0102433 <vprintfmt+0x55>$/;"	l
c010245d	kernel.S	/^c010245d:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c0102461	kernel.S	/^c0102461:	eb d0                	jmp    c0102433 <vprintfmt+0x55>$/;"	l
c0102463	kernel.S	/^c0102463:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c010246a	kernel.S	/^c010246a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010246d	kernel.S	/^c010246d:	89 d0                	mov    %edx,%eax$/;"	l
c010246f	kernel.S	/^c010246f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0102472	kernel.S	/^c0102472:	01 d0                	add    %edx,%eax$/;"	l
c0102474	kernel.S	/^c0102474:	01 c0                	add    %eax,%eax$/;"	l
c0102476	kernel.S	/^c0102476:	01 d8                	add    %ebx,%eax$/;"	l
c0102478	kernel.S	/^c0102478:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010247b	kernel.S	/^c010247b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010247e	kernel.S	/^c010247e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0102481	kernel.S	/^c0102481:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102484	kernel.S	/^c0102484:	0f be d8             	movsbl %al,%ebx$/;"	l
c0102487	kernel.S	/^c0102487:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c010248a	kernel.S	/^c010248a:	7e 39                	jle    c01024c5 <vprintfmt+0xe7>$/;"	l
c010248c	kernel.S	/^c010248c:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c010248f	kernel.S	/^c010248f:	7f 34                	jg     c01024c5 <vprintfmt+0xe7>$/;"	l
c0102491	kernel.S	/^c0102491:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0102495	kernel.S	/^c0102495:	eb d3                	jmp    c010246a <vprintfmt+0x8c>$/;"	l
c0102497	kernel.S	/^c0102497:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010249a	kernel.S	/^c010249a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010249d	kernel.S	/^c010249d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c01024a0	kernel.S	/^c01024a0:	8b 00                	mov    (%eax),%eax$/;"	l
c01024a2	kernel.S	/^c01024a2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01024a5	kernel.S	/^c01024a5:	eb 1f                	jmp    c01024c6 <vprintfmt+0xe8>$/;"	l
c01024a7	kernel.S	/^c01024a7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01024ab	kernel.S	/^c01024ab:	79 86                	jns    c0102433 <vprintfmt+0x55>$/;"	l
c01024ad	kernel.S	/^c01024ad:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01024b4	kernel.S	/^c01024b4:	e9 7a ff ff ff       	jmp    c0102433 <vprintfmt+0x55>$/;"	l
c01024b9	kernel.S	/^c01024b9:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c01024c0	kernel.S	/^c01024c0:	e9 6e ff ff ff       	jmp    c0102433 <vprintfmt+0x55>$/;"	l
c01024c5	kernel.S	/^c01024c5:	90                   	nop$/;"	l
c01024c6	kernel.S	/^c01024c6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01024ca	kernel.S	/^c01024ca:	0f 89 63 ff ff ff    	jns    c0102433 <vprintfmt+0x55>$/;"	l
c01024d0	kernel.S	/^c01024d0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01024d3	kernel.S	/^c01024d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01024d6	kernel.S	/^c01024d6:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
c01024dd	kernel.S	/^c01024dd:	e9 51 ff ff ff       	jmp    c0102433 <vprintfmt+0x55>$/;"	l
c01024e2	kernel.S	/^c01024e2:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)$/;"	l
c01024e6	kernel.S	/^c01024e6:	e9 48 ff ff ff       	jmp    c0102433 <vprintfmt+0x55>$/;"	l
c01024eb	kernel.S	/^c01024eb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01024ee	kernel.S	/^c01024ee:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c01024f1	kernel.S	/^c01024f1:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c01024f4	kernel.S	/^c01024f4:	8b 00                	mov    (%eax),%eax$/;"	l
c01024f6	kernel.S	/^c01024f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01024f9	kernel.S	/^c01024f9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01024fc	kernel.S	/^c01024fc:	50                   	push   %eax$/;"	l
c01024fd	kernel.S	/^c01024fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102500	kernel.S	/^c0102500:	ff d0                	call   *%eax$/;"	l
c0102502	kernel.S	/^c0102502:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102505	kernel.S	/^c0102505:	e9 6a 02 00 00       	jmp    c0102774 <vprintfmt+0x396>$/;"	l
c010250a	kernel.S	/^c010250a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010250d	kernel.S	/^c010250d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0102510	kernel.S	/^c0102510:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0102513	kernel.S	/^c0102513:	8b 18                	mov    (%eax),%ebx$/;"	l
c0102515	kernel.S	/^c0102515:	85 db                	test   %ebx,%ebx$/;"	l
c0102517	kernel.S	/^c0102517:	79 02                	jns    c010251b <vprintfmt+0x13d>$/;"	l
c0102519	kernel.S	/^c0102519:	f7 db                	neg    %ebx$/;"	l
c010251b	kernel.S	/^c010251b:	83 fb 07             	cmp    $0x7,%ebx$/;"	l
c010251e	kernel.S	/^c010251e:	7f 0b                	jg     c010252b <vprintfmt+0x14d>$/;"	l
c0102520	kernel.S	/^c0102520:	8b 34 9d 20 2b 26 c0 	mov    -0x3fd9d4e0(,%ebx,4),%esi$/;"	l
c0102527	kernel.S	/^c0102527:	85 f6                	test   %esi,%esi$/;"	l
c0102529	kernel.S	/^c0102529:	75 19                	jne    c0102544 <vprintfmt+0x166>$/;"	l
c010252b	kernel.S	/^c010252b:	53                   	push   %ebx$/;"	l
c010252c	kernel.S	/^c010252c:	68 51 2b 26 c0       	push   $0xc0262b51$/;"	l
c0102531	kernel.S	/^c0102531:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0102534	kernel.S	/^c0102534:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102537	kernel.S	/^c0102537:	e8 45 02 00 00       	call   c0102781 <printfmt>$/;"	l
c010253c	kernel.S	/^c010253c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010253f	kernel.S	/^c010253f:	e9 30 02 00 00       	jmp    c0102774 <vprintfmt+0x396>$/;"	l
c0102544	kernel.S	/^c0102544:	56                   	push   %esi$/;"	l
c0102545	kernel.S	/^c0102545:	68 5a 2b 26 c0       	push   $0xc0262b5a$/;"	l
c010254a	kernel.S	/^c010254a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010254d	kernel.S	/^c010254d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102550	kernel.S	/^c0102550:	e8 2c 02 00 00       	call   c0102781 <printfmt>$/;"	l
c0102555	kernel.S	/^c0102555:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102558	kernel.S	/^c0102558:	e9 17 02 00 00       	jmp    c0102774 <vprintfmt+0x396>$/;"	l
c010255d	kernel.S	/^c010255d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0102560	kernel.S	/^c0102560:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0102563	kernel.S	/^c0102563:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0102566	kernel.S	/^c0102566:	8b 30                	mov    (%eax),%esi$/;"	l
c0102568	kernel.S	/^c0102568:	85 f6                	test   %esi,%esi$/;"	l
c010256a	kernel.S	/^c010256a:	75 05                	jne    c0102571 <vprintfmt+0x193>$/;"	l
c010256c	kernel.S	/^c010256c:	be 5d 2b 26 c0       	mov    $0xc0262b5d,%esi$/;"	l
c0102571	kernel.S	/^c0102571:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0102575	kernel.S	/^c0102575:	7e 6f                	jle    c01025e6 <vprintfmt+0x208>$/;"	l
c0102577	kernel.S	/^c0102577:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c010257b	kernel.S	/^c010257b:	74 69                	je     c01025e6 <vprintfmt+0x208>$/;"	l
c010257d	kernel.S	/^c010257d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0102580	kernel.S	/^c0102580:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102583	kernel.S	/^c0102583:	50                   	push   %eax$/;"	l
c0102584	kernel.S	/^c0102584:	56                   	push   %esi$/;"	l
c0102585	kernel.S	/^c0102585:	e8 9e f7 ff ff       	call   c0101d28 <strnlen>$/;"	l
c010258a	kernel.S	/^c010258a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010258d	kernel.S	/^c010258d:	29 45 e4             	sub    %eax,-0x1c(%ebp)$/;"	l
c0102590	kernel.S	/^c0102590:	eb 17                	jmp    c01025a9 <vprintfmt+0x1cb>$/;"	l
c0102592	kernel.S	/^c0102592:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c0102596	kernel.S	/^c0102596:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102599	kernel.S	/^c0102599:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010259c	kernel.S	/^c010259c:	50                   	push   %eax$/;"	l
c010259d	kernel.S	/^c010259d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025a0	kernel.S	/^c01025a0:	ff d0                	call   *%eax$/;"	l
c01025a2	kernel.S	/^c01025a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025a5	kernel.S	/^c01025a5:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c01025a9	kernel.S	/^c01025a9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01025ad	kernel.S	/^c01025ad:	7f e3                	jg     c0102592 <vprintfmt+0x1b4>$/;"	l
c01025af	kernel.S	/^c01025af:	eb 35                	jmp    c01025e6 <vprintfmt+0x208>$/;"	l
c01025b1	kernel.S	/^c01025b1:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01025b5	kernel.S	/^c01025b5:	74 1c                	je     c01025d3 <vprintfmt+0x1f5>$/;"	l
c01025b7	kernel.S	/^c01025b7:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c01025ba	kernel.S	/^c01025ba:	7e 05                	jle    c01025c1 <vprintfmt+0x1e3>$/;"	l
c01025bc	kernel.S	/^c01025bc:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c01025bf	kernel.S	/^c01025bf:	7e 12                	jle    c01025d3 <vprintfmt+0x1f5>$/;"	l
c01025c1	kernel.S	/^c01025c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025c4	kernel.S	/^c01025c4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01025c7	kernel.S	/^c01025c7:	6a 3f                	push   $0x3f$/;"	l
c01025c9	kernel.S	/^c01025c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025cc	kernel.S	/^c01025cc:	ff d0                	call   *%eax$/;"	l
c01025ce	kernel.S	/^c01025ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025d1	kernel.S	/^c01025d1:	eb 0f                	jmp    c01025e2 <vprintfmt+0x204>$/;"	l
c01025d3	kernel.S	/^c01025d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025d6	kernel.S	/^c01025d6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01025d9	kernel.S	/^c01025d9:	53                   	push   %ebx$/;"	l
c01025da	kernel.S	/^c01025da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025dd	kernel.S	/^c01025dd:	ff d0                	call   *%eax$/;"	l
c01025df	kernel.S	/^c01025df:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025e2	kernel.S	/^c01025e2:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c01025e6	kernel.S	/^c01025e6:	89 f0                	mov    %esi,%eax$/;"	l
c01025e8	kernel.S	/^c01025e8:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c01025eb	kernel.S	/^c01025eb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01025ee	kernel.S	/^c01025ee:	0f be d8             	movsbl %al,%ebx$/;"	l
c01025f1	kernel.S	/^c01025f1:	85 db                	test   %ebx,%ebx$/;"	l
c01025f3	kernel.S	/^c01025f3:	74 26                	je     c010261b <vprintfmt+0x23d>$/;"	l
c01025f5	kernel.S	/^c01025f5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01025f9	kernel.S	/^c01025f9:	78 b6                	js     c01025b1 <vprintfmt+0x1d3>$/;"	l
c01025fb	kernel.S	/^c01025fb:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)$/;"	l
c01025ff	kernel.S	/^c01025ff:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0102603	kernel.S	/^c0102603:	79 ac                	jns    c01025b1 <vprintfmt+0x1d3>$/;"	l
c0102605	kernel.S	/^c0102605:	eb 14                	jmp    c010261b <vprintfmt+0x23d>$/;"	l
c0102607	kernel.S	/^c0102607:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010260a	kernel.S	/^c010260a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010260d	kernel.S	/^c010260d:	6a 20                	push   $0x20$/;"	l
c010260f	kernel.S	/^c010260f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102612	kernel.S	/^c0102612:	ff d0                	call   *%eax$/;"	l
c0102614	kernel.S	/^c0102614:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102617	kernel.S	/^c0102617:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c010261b	kernel.S	/^c010261b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010261f	kernel.S	/^c010261f:	7f e6                	jg     c0102607 <vprintfmt+0x229>$/;"	l
c0102621	kernel.S	/^c0102621:	e9 4e 01 00 00       	jmp    c0102774 <vprintfmt+0x396>$/;"	l
c0102626	kernel.S	/^c0102626:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102629	kernel.S	/^c0102629:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010262c	kernel.S	/^c010262c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010262f	kernel.S	/^c010262f:	50                   	push   %eax$/;"	l
c0102630	kernel.S	/^c0102630:	e8 62 fd ff ff       	call   c0102397 <getint>$/;"	l
c0102635	kernel.S	/^c0102635:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102638	kernel.S	/^c0102638:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010263b	kernel.S	/^c010263b:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010263e	kernel.S	/^c010263e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102641	kernel.S	/^c0102641:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102644	kernel.S	/^c0102644:	85 d2                	test   %edx,%edx$/;"	l
c0102646	kernel.S	/^c0102646:	79 23                	jns    c010266b <vprintfmt+0x28d>$/;"	l
c0102648	kernel.S	/^c0102648:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010264b	kernel.S	/^c010264b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010264e	kernel.S	/^c010264e:	6a 2d                	push   $0x2d$/;"	l
c0102650	kernel.S	/^c0102650:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102653	kernel.S	/^c0102653:	ff d0                	call   *%eax$/;"	l
c0102655	kernel.S	/^c0102655:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102658	kernel.S	/^c0102658:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010265b	kernel.S	/^c010265b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010265e	kernel.S	/^c010265e:	f7 d8                	neg    %eax$/;"	l
c0102660	kernel.S	/^c0102660:	83 d2 00             	adc    $0x0,%edx$/;"	l
c0102663	kernel.S	/^c0102663:	f7 da                	neg    %edx$/;"	l
c0102665	kernel.S	/^c0102665:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102668	kernel.S	/^c0102668:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010266b	kernel.S	/^c010266b:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0102672	kernel.S	/^c0102672:	e9 9f 00 00 00       	jmp    c0102716 <vprintfmt+0x338>$/;"	l
c0102677	kernel.S	/^c0102677:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010267a	kernel.S	/^c010267a:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010267d	kernel.S	/^c010267d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0102680	kernel.S	/^c0102680:	50                   	push   %eax$/;"	l
c0102681	kernel.S	/^c0102681:	e8 c2 fc ff ff       	call   c0102348 <getuint>$/;"	l
c0102686	kernel.S	/^c0102686:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102689	kernel.S	/^c0102689:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010268c	kernel.S	/^c010268c:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010268f	kernel.S	/^c010268f:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0102696	kernel.S	/^c0102696:	eb 7e                	jmp    c0102716 <vprintfmt+0x338>$/;"	l
c0102698	kernel.S	/^c0102698:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010269b	kernel.S	/^c010269b:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010269e	kernel.S	/^c010269e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c01026a1	kernel.S	/^c01026a1:	50                   	push   %eax$/;"	l
c01026a2	kernel.S	/^c01026a2:	e8 a1 fc ff ff       	call   c0102348 <getuint>$/;"	l
c01026a7	kernel.S	/^c01026a7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026aa	kernel.S	/^c01026aa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01026ad	kernel.S	/^c01026ad:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01026b0	kernel.S	/^c01026b0:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c01026b7	kernel.S	/^c01026b7:	eb 5d                	jmp    c0102716 <vprintfmt+0x338>$/;"	l
c01026b9	kernel.S	/^c01026b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026bc	kernel.S	/^c01026bc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01026bf	kernel.S	/^c01026bf:	6a 30                	push   $0x30$/;"	l
c01026c1	kernel.S	/^c01026c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026c4	kernel.S	/^c01026c4:	ff d0                	call   *%eax$/;"	l
c01026c6	kernel.S	/^c01026c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026c9	kernel.S	/^c01026c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026cc	kernel.S	/^c01026cc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01026cf	kernel.S	/^c01026cf:	6a 78                	push   $0x78$/;"	l
c01026d1	kernel.S	/^c01026d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026d4	kernel.S	/^c01026d4:	ff d0                	call   *%eax$/;"	l
c01026d6	kernel.S	/^c01026d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026d9	kernel.S	/^c01026d9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01026dc	kernel.S	/^c01026dc:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c01026df	kernel.S	/^c01026df:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c01026e2	kernel.S	/^c01026e2:	8b 00                	mov    (%eax),%eax$/;"	l
c01026e4	kernel.S	/^c01026e4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01026e7	kernel.S	/^c01026e7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01026ee	kernel.S	/^c01026ee:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c01026f5	kernel.S	/^c01026f5:	eb 1f                	jmp    c0102716 <vprintfmt+0x338>$/;"	l
c01026f7	kernel.S	/^c01026f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026fa	kernel.S	/^c01026fa:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01026fd	kernel.S	/^c01026fd:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0102700	kernel.S	/^c0102700:	50                   	push   %eax$/;"	l
c0102701	kernel.S	/^c0102701:	e8 42 fc ff ff       	call   c0102348 <getuint>$/;"	l
c0102706	kernel.S	/^c0102706:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102709	kernel.S	/^c0102709:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010270c	kernel.S	/^c010270c:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010270f	kernel.S	/^c010270f:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0102716	kernel.S	/^c0102716:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c010271a	kernel.S	/^c010271a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010271d	kernel.S	/^c010271d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102720	kernel.S	/^c0102720:	52                   	push   %edx$/;"	l
c0102721	kernel.S	/^c0102721:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0102724	kernel.S	/^c0102724:	50                   	push   %eax$/;"	l
c0102725	kernel.S	/^c0102725:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0102728	kernel.S	/^c0102728:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010272b	kernel.S	/^c010272b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010272e	kernel.S	/^c010272e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102731	kernel.S	/^c0102731:	e8 59 fb ff ff       	call   c010228f <printnum>$/;"	l
c0102736	kernel.S	/^c0102736:	83 c4 20             	add    $0x20,%esp$/;"	l
c0102739	kernel.S	/^c0102739:	eb 39                	jmp    c0102774 <vprintfmt+0x396>$/;"	l
c010273b	kernel.S	/^c010273b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010273e	kernel.S	/^c010273e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0102741	kernel.S	/^c0102741:	53                   	push   %ebx$/;"	l
c0102742	kernel.S	/^c0102742:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102745	kernel.S	/^c0102745:	ff d0                	call   *%eax$/;"	l
c0102747	kernel.S	/^c0102747:	83 c4 10             	add    $0x10,%esp$/;"	l
c010274a	kernel.S	/^c010274a:	eb 28                	jmp    c0102774 <vprintfmt+0x396>$/;"	l
c010274c	kernel.S	/^c010274c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010274f	kernel.S	/^c010274f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0102752	kernel.S	/^c0102752:	6a 25                	push   $0x25$/;"	l
c0102754	kernel.S	/^c0102754:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102757	kernel.S	/^c0102757:	ff d0                	call   *%eax$/;"	l
c0102759	kernel.S	/^c0102759:	83 c4 10             	add    $0x10,%esp$/;"	l
c010275c	kernel.S	/^c010275c:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0102760	kernel.S	/^c0102760:	eb 04                	jmp    c0102766 <vprintfmt+0x388>$/;"	l
c0102762	kernel.S	/^c0102762:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0102766	kernel.S	/^c0102766:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0102769	kernel.S	/^c0102769:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010276c	kernel.S	/^c010276c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010276f	kernel.S	/^c010276f:	3c 25                	cmp    $0x25,%al$/;"	l
c0102771	kernel.S	/^c0102771:	75 ef                	jne    c0102762 <vprintfmt+0x384>$/;"	l
c0102773	kernel.S	/^c0102773:	90                   	nop$/;"	l
c0102774	kernel.S	/^c0102774:	e9 6d fc ff ff       	jmp    c01023e6 <vprintfmt+0x8>$/;"	l
c0102779	kernel.S	/^c0102779:	90                   	nop$/;"	l
c010277a	kernel.S	/^c010277a:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c010277d	kernel.S	/^c010277d:	5b                   	pop    %ebx$/;"	l
c010277e	kernel.S	/^c010277e:	5e                   	pop    %esi$/;"	l
c010277f	kernel.S	/^c010277f:	5d                   	pop    %ebp$/;"	l
c0102780	kernel.S	/^c0102780:	c3                   	ret    $/;"	l
c0102781	kernel.S	/^c0102781 <printfmt>:$/;"	l
c0102781	kernel.S	/^c0102781:	55                   	push   %ebp$/;"	l
c0102782	kernel.S	/^c0102782:	89 e5                	mov    %esp,%ebp$/;"	l
c0102784	kernel.S	/^c0102784:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102787	kernel.S	/^c0102787:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010278a	kernel.S	/^c010278a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010278d	kernel.S	/^c010278d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102790	kernel.S	/^c0102790:	50                   	push   %eax$/;"	l
c0102791	kernel.S	/^c0102791:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0102794	kernel.S	/^c0102794:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0102797	kernel.S	/^c0102797:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010279a	kernel.S	/^c010279a:	e8 3f fc ff ff       	call   c01023de <vprintfmt>$/;"	l
c010279f	kernel.S	/^c010279f:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027a2	kernel.S	/^c01027a2:	90                   	nop$/;"	l
c01027a3	kernel.S	/^c01027a3:	c9                   	leave  $/;"	l
c01027a4	kernel.S	/^c01027a4:	c3                   	ret    $/;"	l
c01027a5	kernel.S	/^c01027a5 <sprintputch>:$/;"	l
c01027a5	kernel.S	/^c01027a5:	55                   	push   %ebp$/;"	l
c01027a6	kernel.S	/^c01027a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01027a8	kernel.S	/^c01027a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01027ab	kernel.S	/^c01027ab:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01027ae	kernel.S	/^c01027ae:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01027b1	kernel.S	/^c01027b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01027b4	kernel.S	/^c01027b4:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01027b7	kernel.S	/^c01027b7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01027ba	kernel.S	/^c01027ba:	8b 10                	mov    (%eax),%edx$/;"	l
c01027bc	kernel.S	/^c01027bc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01027bf	kernel.S	/^c01027bf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01027c2	kernel.S	/^c01027c2:	39 c2                	cmp    %eax,%edx$/;"	l
c01027c4	kernel.S	/^c01027c4:	73 12                	jae    c01027d8 <sprintputch+0x33>$/;"	l
c01027c6	kernel.S	/^c01027c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01027c9	kernel.S	/^c01027c9:	8b 00                	mov    (%eax),%eax$/;"	l
c01027cb	kernel.S	/^c01027cb:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01027ce	kernel.S	/^c01027ce:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01027d1	kernel.S	/^c01027d1:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01027d3	kernel.S	/^c01027d3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01027d6	kernel.S	/^c01027d6:	88 10                	mov    %dl,(%eax)$/;"	l
c01027d8	kernel.S	/^c01027d8:	90                   	nop$/;"	l
c01027d9	kernel.S	/^c01027d9:	5d                   	pop    %ebp$/;"	l
c01027da	kernel.S	/^c01027da:	c3                   	ret    $/;"	l
c01027db	kernel.S	/^c01027db <vsnprintf>:$/;"	l
c01027db	kernel.S	/^c01027db:	55                   	push   %ebp$/;"	l
c01027dc	kernel.S	/^c01027dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01027de	kernel.S	/^c01027de:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01027e1	kernel.S	/^c01027e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027e4	kernel.S	/^c01027e4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01027e7	kernel.S	/^c01027e7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01027ea	kernel.S	/^c01027ea:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01027ed	kernel.S	/^c01027ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027f0	kernel.S	/^c01027f0:	01 d0                	add    %edx,%eax$/;"	l
c01027f2	kernel.S	/^c01027f2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01027f5	kernel.S	/^c01027f5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01027fc	kernel.S	/^c01027fc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0102800	kernel.S	/^c0102800:	74 06                	je     c0102808 <vsnprintf+0x2d>$/;"	l
c0102802	kernel.S	/^c0102802:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0102806	kernel.S	/^c0102806:	7f 07                	jg     c010280f <vsnprintf+0x34>$/;"	l
c0102808	kernel.S	/^c0102808:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010280d	kernel.S	/^c010280d:	eb 20                	jmp    c010282f <vsnprintf+0x54>$/;"	l
c010280f	kernel.S	/^c010280f:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0102812	kernel.S	/^c0102812:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0102815	kernel.S	/^c0102815:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0102818	kernel.S	/^c0102818:	50                   	push   %eax$/;"	l
c0102819	kernel.S	/^c0102819:	68 a5 27 10 c0       	push   $0xc01027a5$/;"	l
c010281e	kernel.S	/^c010281e:	e8 bb fb ff ff       	call   c01023de <vprintfmt>$/;"	l
c0102823	kernel.S	/^c0102823:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102826	kernel.S	/^c0102826:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0102829	kernel.S	/^c0102829:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010282c	kernel.S	/^c010282c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010282f	kernel.S	/^c010282f:	c9                   	leave  $/;"	l
c0102830	kernel.S	/^c0102830:	c3                   	ret    $/;"	l
c0102831	kernel.S	/^c0102831 <snprintf>:$/;"	l
c0102831	kernel.S	/^c0102831:	55                   	push   %ebp$/;"	l
c0102832	kernel.S	/^c0102832:	89 e5                	mov    %esp,%ebp$/;"	l
c0102834	kernel.S	/^c0102834:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102837	kernel.S	/^c0102837:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010283a	kernel.S	/^c010283a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010283d	kernel.S	/^c010283d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102840	kernel.S	/^c0102840:	50                   	push   %eax$/;"	l
c0102841	kernel.S	/^c0102841:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0102844	kernel.S	/^c0102844:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0102847	kernel.S	/^c0102847:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010284a	kernel.S	/^c010284a:	e8 8c ff ff ff       	call   c01027db <vsnprintf>$/;"	l
c010284f	kernel.S	/^c010284f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102852	kernel.S	/^c0102852:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102855	kernel.S	/^c0102855:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102858	kernel.S	/^c0102858:	c9                   	leave  $/;"	l
c0102859	kernel.S	/^c0102859:	c3                   	ret    $/;"	l
c010285a	kernel.S	/^c010285a:	66 90                	xchg   %ax,%ax$/;"	l
c010285c	kernel.S	/^c010285c:	66 90                	xchg   %ax,%ax$/;"	l
c010285e	kernel.S	/^c010285e:	66 90                	xchg   %ax,%ax$/;"	l
c0102860	kernel.S	/^c0102860 <__udivdi3>:$/;"	l
c0102860	kernel.S	/^c0102860:	55                   	push   %ebp$/;"	l
c0102861	kernel.S	/^c0102861:	57                   	push   %edi$/;"	l
c0102862	kernel.S	/^c0102862:	56                   	push   %esi$/;"	l
c0102863	kernel.S	/^c0102863:	53                   	push   %ebx$/;"	l
c0102864	kernel.S	/^c0102864:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
c0102867	kernel.S	/^c0102867:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
c010286b	kernel.S	/^c010286b:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
c010286f	kernel.S	/^c010286f:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
c0102873	kernel.S	/^c0102873:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
c0102877	kernel.S	/^c0102877:	85 f6                	test   %esi,%esi$/;"	l
c0102879	kernel.S	/^c0102879:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c010287d	kernel.S	/^c010287d:	89 ca                	mov    %ecx,%edx$/;"	l
c010287f	kernel.S	/^c010287f:	89 f8                	mov    %edi,%eax$/;"	l
c0102881	kernel.S	/^c0102881:	75 3d                	jne    c01028c0 <__udivdi3+0x60>$/;"	l
c0102883	kernel.S	/^c0102883:	39 cf                	cmp    %ecx,%edi$/;"	l
c0102885	kernel.S	/^c0102885:	0f 87 c5 00 00 00    	ja     c0102950 <__udivdi3+0xf0>$/;"	l
c010288b	kernel.S	/^c010288b:	85 ff                	test   %edi,%edi$/;"	l
c010288d	kernel.S	/^c010288d:	89 fd                	mov    %edi,%ebp$/;"	l
c010288f	kernel.S	/^c010288f:	75 0b                	jne    c010289c <__udivdi3+0x3c>$/;"	l
c0102891	kernel.S	/^c0102891:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0102896	kernel.S	/^c0102896:	31 d2                	xor    %edx,%edx$/;"	l
c0102898	kernel.S	/^c0102898:	f7 f7                	div    %edi$/;"	l
c010289a	kernel.S	/^c010289a:	89 c5                	mov    %eax,%ebp$/;"	l
c010289c	kernel.S	/^c010289c:	89 c8                	mov    %ecx,%eax$/;"	l
c010289e	kernel.S	/^c010289e:	31 d2                	xor    %edx,%edx$/;"	l
c01028a0	kernel.S	/^c01028a0:	f7 f5                	div    %ebp$/;"	l
c01028a2	kernel.S	/^c01028a2:	89 c1                	mov    %eax,%ecx$/;"	l
c01028a4	kernel.S	/^c01028a4:	89 d8                	mov    %ebx,%eax$/;"	l
c01028a6	kernel.S	/^c01028a6:	89 cf                	mov    %ecx,%edi$/;"	l
c01028a8	kernel.S	/^c01028a8:	f7 f5                	div    %ebp$/;"	l
c01028aa	kernel.S	/^c01028aa:	89 c3                	mov    %eax,%ebx$/;"	l
c01028ac	kernel.S	/^c01028ac:	89 d8                	mov    %ebx,%eax$/;"	l
c01028ae	kernel.S	/^c01028ae:	89 fa                	mov    %edi,%edx$/;"	l
c01028b0	kernel.S	/^c01028b0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
c01028b3	kernel.S	/^c01028b3:	5b                   	pop    %ebx$/;"	l
c01028b4	kernel.S	/^c01028b4:	5e                   	pop    %esi$/;"	l
c01028b5	kernel.S	/^c01028b5:	5f                   	pop    %edi$/;"	l
c01028b6	kernel.S	/^c01028b6:	5d                   	pop    %ebp$/;"	l
c01028b7	kernel.S	/^c01028b7:	c3                   	ret    $/;"	l
c01028b8	kernel.S	/^c01028b8:	90                   	nop$/;"	l
c01028b9	kernel.S	/^c01028b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c01028c0	kernel.S	/^c01028c0:	39 ce                	cmp    %ecx,%esi$/;"	l
c01028c2	kernel.S	/^c01028c2:	77 74                	ja     c0102938 <__udivdi3+0xd8>$/;"	l
c01028c4	kernel.S	/^c01028c4:	0f bd fe             	bsr    %esi,%edi$/;"	l
c01028c7	kernel.S	/^c01028c7:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
c01028ca	kernel.S	/^c01028ca:	0f 84 98 00 00 00    	je     c0102968 <__udivdi3+0x108>$/;"	l
c01028d0	kernel.S	/^c01028d0:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
c01028d5	kernel.S	/^c01028d5:	89 f9                	mov    %edi,%ecx$/;"	l
c01028d7	kernel.S	/^c01028d7:	89 c5                	mov    %eax,%ebp$/;"	l
c01028d9	kernel.S	/^c01028d9:	29 fb                	sub    %edi,%ebx$/;"	l
c01028db	kernel.S	/^c01028db:	d3 e6                	shl    %cl,%esi$/;"	d
c01028dd	kernel.S	/^c01028dd:	89 d9                	mov    %ebx,%ecx$/;"	l
c01028df	kernel.S	/^c01028df:	d3 ed                	shr    %cl,%ebp$/;"	d
c01028e1	kernel.S	/^c01028e1:	89 f9                	mov    %edi,%ecx$/;"	l
c01028e3	kernel.S	/^c01028e3:	d3 e0                	shl    %cl,%eax$/;"	d
c01028e5	kernel.S	/^c01028e5:	09 ee                	or     %ebp,%esi$/;"	l
c01028e7	kernel.S	/^c01028e7:	89 d9                	mov    %ebx,%ecx$/;"	l
c01028e9	kernel.S	/^c01028e9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01028ed	kernel.S	/^c01028ed:	89 d5                	mov    %edx,%ebp$/;"	l
c01028ef	kernel.S	/^c01028ef:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
c01028f3	kernel.S	/^c01028f3:	d3 ed                	shr    %cl,%ebp$/;"	d
c01028f5	kernel.S	/^c01028f5:	89 f9                	mov    %edi,%ecx$/;"	l
c01028f7	kernel.S	/^c01028f7:	d3 e2                	shl    %cl,%edx$/;"	d
c01028f9	kernel.S	/^c01028f9:	89 d9                	mov    %ebx,%ecx$/;"	l
c01028fb	kernel.S	/^c01028fb:	d3 e8                	shr    %cl,%eax$/;"	d
c01028fd	kernel.S	/^c01028fd:	09 c2                	or     %eax,%edx$/;"	l
c01028ff	kernel.S	/^c01028ff:	89 d0                	mov    %edx,%eax$/;"	l
c0102901	kernel.S	/^c0102901:	89 ea                	mov    %ebp,%edx$/;"	l
c0102903	kernel.S	/^c0102903:	f7 f6                	div    %esi$/;"	l
c0102905	kernel.S	/^c0102905:	89 d5                	mov    %edx,%ebp$/;"	l
c0102907	kernel.S	/^c0102907:	89 c3                	mov    %eax,%ebx$/;"	l
c0102909	kernel.S	/^c0102909:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
c010290d	kernel.S	/^c010290d:	39 d5                	cmp    %edx,%ebp$/;"	l
c010290f	kernel.S	/^c010290f:	72 10                	jb     c0102921 <__udivdi3+0xc1>$/;"	l
c0102911	kernel.S	/^c0102911:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
c0102915	kernel.S	/^c0102915:	89 f9                	mov    %edi,%ecx$/;"	l
c0102917	kernel.S	/^c0102917:	d3 e6                	shl    %cl,%esi$/;"	d
c0102919	kernel.S	/^c0102919:	39 c6                	cmp    %eax,%esi$/;"	l
c010291b	kernel.S	/^c010291b:	73 07                	jae    c0102924 <__udivdi3+0xc4>$/;"	l
c010291d	kernel.S	/^c010291d:	39 d5                	cmp    %edx,%ebp$/;"	l
c010291f	kernel.S	/^c010291f:	75 03                	jne    c0102924 <__udivdi3+0xc4>$/;"	l
c0102921	kernel.S	/^c0102921:	83 eb 01             	sub    $0x1,%ebx$/;"	l
c0102924	kernel.S	/^c0102924:	31 ff                	xor    %edi,%edi$/;"	l
c0102926	kernel.S	/^c0102926:	89 d8                	mov    %ebx,%eax$/;"	l
c0102928	kernel.S	/^c0102928:	89 fa                	mov    %edi,%edx$/;"	l
c010292a	kernel.S	/^c010292a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
c010292d	kernel.S	/^c010292d:	5b                   	pop    %ebx$/;"	l
c010292e	kernel.S	/^c010292e:	5e                   	pop    %esi$/;"	l
c010292f	kernel.S	/^c010292f:	5f                   	pop    %edi$/;"	l
c0102930	kernel.S	/^c0102930:	5d                   	pop    %ebp$/;"	l
c0102931	kernel.S	/^c0102931:	c3                   	ret    $/;"	l
c0102932	kernel.S	/^c0102932:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c0102938	kernel.S	/^c0102938:	31 ff                	xor    %edi,%edi$/;"	l
c010293a	kernel.S	/^c010293a:	31 db                	xor    %ebx,%ebx$/;"	l
c010293c	kernel.S	/^c010293c:	89 d8                	mov    %ebx,%eax$/;"	l
c010293e	kernel.S	/^c010293e:	89 fa                	mov    %edi,%edx$/;"	l
c0102940	kernel.S	/^c0102940:	83 c4 1c             	add    $0x1c,%esp$/;"	l
c0102943	kernel.S	/^c0102943:	5b                   	pop    %ebx$/;"	l
c0102944	kernel.S	/^c0102944:	5e                   	pop    %esi$/;"	l
c0102945	kernel.S	/^c0102945:	5f                   	pop    %edi$/;"	l
c0102946	kernel.S	/^c0102946:	5d                   	pop    %ebp$/;"	l
c0102947	kernel.S	/^c0102947:	c3                   	ret    $/;"	l
c0102948	kernel.S	/^c0102948:	90                   	nop$/;"	l
c0102949	kernel.S	/^c0102949:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0102950	kernel.S	/^c0102950:	89 d8                	mov    %ebx,%eax$/;"	l
c0102952	kernel.S	/^c0102952:	f7 f7                	div    %edi$/;"	l
c0102954	kernel.S	/^c0102954:	31 ff                	xor    %edi,%edi$/;"	l
c0102956	kernel.S	/^c0102956:	89 c3                	mov    %eax,%ebx$/;"	l
c0102958	kernel.S	/^c0102958:	89 d8                	mov    %ebx,%eax$/;"	l
c010295a	kernel.S	/^c010295a:	89 fa                	mov    %edi,%edx$/;"	l
c010295c	kernel.S	/^c010295c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
c010295f	kernel.S	/^c010295f:	5b                   	pop    %ebx$/;"	l
c0102960	kernel.S	/^c0102960:	5e                   	pop    %esi$/;"	l
c0102961	kernel.S	/^c0102961:	5f                   	pop    %edi$/;"	l
c0102962	kernel.S	/^c0102962:	5d                   	pop    %ebp$/;"	l
c0102963	kernel.S	/^c0102963:	c3                   	ret    $/;"	l
c0102964	kernel.S	/^c0102964:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0102968	kernel.S	/^c0102968:	39 ce                	cmp    %ecx,%esi$/;"	l
c010296a	kernel.S	/^c010296a:	72 0c                	jb     c0102978 <__udivdi3+0x118>$/;"	l
c010296c	kernel.S	/^c010296c:	31 db                	xor    %ebx,%ebx$/;"	l
c010296e	kernel.S	/^c010296e:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
c0102972	kernel.S	/^c0102972:	0f 87 34 ff ff ff    	ja     c01028ac <__udivdi3+0x4c>$/;"	l
c0102978	kernel.S	/^c0102978:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
c010297d	kernel.S	/^c010297d:	e9 2a ff ff ff       	jmp    c01028ac <__udivdi3+0x4c>$/;"	l
c0102982	kernel.S	/^c0102982:	66 90                	xchg   %ax,%ax$/;"	l
c0102984	kernel.S	/^c0102984:	66 90                	xchg   %ax,%ax$/;"	l
c0102986	kernel.S	/^c0102986:	66 90                	xchg   %ax,%ax$/;"	l
c0102988	kernel.S	/^c0102988:	66 90                	xchg   %ax,%ax$/;"	l
c010298a	kernel.S	/^c010298a:	66 90                	xchg   %ax,%ax$/;"	l
c010298c	kernel.S	/^c010298c:	66 90                	xchg   %ax,%ax$/;"	l
c010298e	kernel.S	/^c010298e:	66 90                	xchg   %ax,%ax$/;"	l
c0102990	kernel.S	/^c0102990 <__umoddi3>:$/;"	l
c0102990	kernel.S	/^c0102990:	55                   	push   %ebp$/;"	l
c0102991	kernel.S	/^c0102991:	57                   	push   %edi$/;"	l
c0102992	kernel.S	/^c0102992:	56                   	push   %esi$/;"	l
c0102993	kernel.S	/^c0102993:	53                   	push   %ebx$/;"	l
c0102994	kernel.S	/^c0102994:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
c0102997	kernel.S	/^c0102997:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
c010299b	kernel.S	/^c010299b:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
c010299f	kernel.S	/^c010299f:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
c01029a3	kernel.S	/^c01029a3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
c01029a7	kernel.S	/^c01029a7:	85 d2                	test   %edx,%edx$/;"	l
c01029a9	kernel.S	/^c01029a9:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c01029ad	kernel.S	/^c01029ad:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01029b1	kernel.S	/^c01029b1:	89 f3                	mov    %esi,%ebx$/;"	l
c01029b3	kernel.S	/^c01029b3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
c01029b6	kernel.S	/^c01029b6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c01029ba	kernel.S	/^c01029ba:	75 1c                	jne    c01029d8 <__umoddi3+0x48>$/;"	l
c01029bc	kernel.S	/^c01029bc:	39 f7                	cmp    %esi,%edi$/;"	l
c01029be	kernel.S	/^c01029be:	76 50                	jbe    c0102a10 <__umoddi3+0x80>$/;"	l
c01029c0	kernel.S	/^c01029c0:	89 c8                	mov    %ecx,%eax$/;"	l
c01029c2	kernel.S	/^c01029c2:	89 f2                	mov    %esi,%edx$/;"	l
c01029c4	kernel.S	/^c01029c4:	f7 f7                	div    %edi$/;"	l
c01029c6	kernel.S	/^c01029c6:	89 d0                	mov    %edx,%eax$/;"	l
c01029c8	kernel.S	/^c01029c8:	31 d2                	xor    %edx,%edx$/;"	l
c01029ca	kernel.S	/^c01029ca:	83 c4 1c             	add    $0x1c,%esp$/;"	l
c01029cd	kernel.S	/^c01029cd:	5b                   	pop    %ebx$/;"	l
c01029ce	kernel.S	/^c01029ce:	5e                   	pop    %esi$/;"	l
c01029cf	kernel.S	/^c01029cf:	5f                   	pop    %edi$/;"	l
c01029d0	kernel.S	/^c01029d0:	5d                   	pop    %ebp$/;"	l
c01029d1	kernel.S	/^c01029d1:	c3                   	ret    $/;"	l
c01029d2	kernel.S	/^c01029d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
c01029d8	kernel.S	/^c01029d8:	39 f2                	cmp    %esi,%edx$/;"	l
c01029da	kernel.S	/^c01029da:	89 d0                	mov    %edx,%eax$/;"	l
c01029dc	kernel.S	/^c01029dc:	77 52                	ja     c0102a30 <__umoddi3+0xa0>$/;"	l
c01029de	kernel.S	/^c01029de:	0f bd ea             	bsr    %edx,%ebp$/;"	l
c01029e1	kernel.S	/^c01029e1:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
c01029e4	kernel.S	/^c01029e4:	75 5a                	jne    c0102a40 <__umoddi3+0xb0>$/;"	l
c01029e6	kernel.S	/^c01029e6:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
c01029ea	kernel.S	/^c01029ea:	0f 82 e0 00 00 00    	jb     c0102ad0 <__umoddi3+0x140>$/;"	l
c01029f0	kernel.S	/^c01029f0:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
c01029f3	kernel.S	/^c01029f3:	0f 86 d7 00 00 00    	jbe    c0102ad0 <__umoddi3+0x140>$/;"	l
c01029f9	kernel.S	/^c01029f9:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
c01029fd	kernel.S	/^c01029fd:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
c0102a01	kernel.S	/^c0102a01:	83 c4 1c             	add    $0x1c,%esp$/;"	l
c0102a04	kernel.S	/^c0102a04:	5b                   	pop    %ebx$/;"	l
c0102a05	kernel.S	/^c0102a05:	5e                   	pop    %esi$/;"	l
c0102a06	kernel.S	/^c0102a06:	5f                   	pop    %edi$/;"	l
c0102a07	kernel.S	/^c0102a07:	5d                   	pop    %ebp$/;"	l
c0102a08	kernel.S	/^c0102a08:	c3                   	ret    $/;"	l
c0102a09	kernel.S	/^c0102a09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0102a10	kernel.S	/^c0102a10:	85 ff                	test   %edi,%edi$/;"	l
c0102a12	kernel.S	/^c0102a12:	89 fd                	mov    %edi,%ebp$/;"	l
c0102a14	kernel.S	/^c0102a14:	75 0b                	jne    c0102a21 <__umoddi3+0x91>$/;"	l
c0102a16	kernel.S	/^c0102a16:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0102a1b	kernel.S	/^c0102a1b:	31 d2                	xor    %edx,%edx$/;"	l
c0102a1d	kernel.S	/^c0102a1d:	f7 f7                	div    %edi$/;"	l
c0102a1f	kernel.S	/^c0102a1f:	89 c5                	mov    %eax,%ebp$/;"	l
c0102a21	kernel.S	/^c0102a21:	89 f0                	mov    %esi,%eax$/;"	l
c0102a23	kernel.S	/^c0102a23:	31 d2                	xor    %edx,%edx$/;"	l
c0102a25	kernel.S	/^c0102a25:	f7 f5                	div    %ebp$/;"	l
c0102a27	kernel.S	/^c0102a27:	89 c8                	mov    %ecx,%eax$/;"	l
c0102a29	kernel.S	/^c0102a29:	f7 f5                	div    %ebp$/;"	l
c0102a2b	kernel.S	/^c0102a2b:	89 d0                	mov    %edx,%eax$/;"	l
c0102a2d	kernel.S	/^c0102a2d:	eb 99                	jmp    c01029c8 <__umoddi3+0x38>$/;"	l
c0102a2f	kernel.S	/^c0102a2f:	90                   	nop$/;"	l
c0102a30	kernel.S	/^c0102a30:	89 c8                	mov    %ecx,%eax$/;"	l
c0102a32	kernel.S	/^c0102a32:	89 f2                	mov    %esi,%edx$/;"	l
c0102a34	kernel.S	/^c0102a34:	83 c4 1c             	add    $0x1c,%esp$/;"	l
c0102a37	kernel.S	/^c0102a37:	5b                   	pop    %ebx$/;"	l
c0102a38	kernel.S	/^c0102a38:	5e                   	pop    %esi$/;"	l
c0102a39	kernel.S	/^c0102a39:	5f                   	pop    %edi$/;"	l
c0102a3a	kernel.S	/^c0102a3a:	5d                   	pop    %ebp$/;"	l
c0102a3b	kernel.S	/^c0102a3b:	c3                   	ret    $/;"	l
c0102a3c	kernel.S	/^c0102a3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
c0102a40	kernel.S	/^c0102a40:	8b 34 24             	mov    (%esp),%esi$/;"	l
c0102a43	kernel.S	/^c0102a43:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
c0102a48	kernel.S	/^c0102a48:	89 e9                	mov    %ebp,%ecx$/;"	l
c0102a4a	kernel.S	/^c0102a4a:	29 ef                	sub    %ebp,%edi$/;"	l
c0102a4c	kernel.S	/^c0102a4c:	d3 e0                	shl    %cl,%eax$/;"	d
c0102a4e	kernel.S	/^c0102a4e:	89 f9                	mov    %edi,%ecx$/;"	l
c0102a50	kernel.S	/^c0102a50:	89 f2                	mov    %esi,%edx$/;"	l
c0102a52	kernel.S	/^c0102a52:	d3 ea                	shr    %cl,%edx$/;"	d
c0102a54	kernel.S	/^c0102a54:	89 e9                	mov    %ebp,%ecx$/;"	l
c0102a56	kernel.S	/^c0102a56:	09 c2                	or     %eax,%edx$/;"	l
c0102a58	kernel.S	/^c0102a58:	89 d8                	mov    %ebx,%eax$/;"	l
c0102a5a	kernel.S	/^c0102a5a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0102a5d	kernel.S	/^c0102a5d:	89 f2                	mov    %esi,%edx$/;"	l
c0102a5f	kernel.S	/^c0102a5f:	d3 e2                	shl    %cl,%edx$/;"	d
c0102a61	kernel.S	/^c0102a61:	89 f9                	mov    %edi,%ecx$/;"	l
c0102a63	kernel.S	/^c0102a63:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0102a67	kernel.S	/^c0102a67:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
c0102a6b	kernel.S	/^c0102a6b:	d3 e8                	shr    %cl,%eax$/;"	d
c0102a6d	kernel.S	/^c0102a6d:	89 e9                	mov    %ebp,%ecx$/;"	l
c0102a6f	kernel.S	/^c0102a6f:	89 c6                	mov    %eax,%esi$/;"	l
c0102a71	kernel.S	/^c0102a71:	d3 e3                	shl    %cl,%ebx$/;"	d
c0102a73	kernel.S	/^c0102a73:	89 f9                	mov    %edi,%ecx$/;"	l
c0102a75	kernel.S	/^c0102a75:	89 d0                	mov    %edx,%eax$/;"	l
c0102a77	kernel.S	/^c0102a77:	d3 e8                	shr    %cl,%eax$/;"	d
c0102a79	kernel.S	/^c0102a79:	89 e9                	mov    %ebp,%ecx$/;"	l
c0102a7b	kernel.S	/^c0102a7b:	09 d8                	or     %ebx,%eax$/;"	l
c0102a7d	kernel.S	/^c0102a7d:	89 d3                	mov    %edx,%ebx$/;"	l
c0102a7f	kernel.S	/^c0102a7f:	89 f2                	mov    %esi,%edx$/;"	l
c0102a81	kernel.S	/^c0102a81:	f7 34 24             	divl   (%esp)$/;"	l
c0102a84	kernel.S	/^c0102a84:	89 d6                	mov    %edx,%esi$/;"	l
c0102a86	kernel.S	/^c0102a86:	d3 e3                	shl    %cl,%ebx$/;"	d
c0102a88	kernel.S	/^c0102a88:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
c0102a8c	kernel.S	/^c0102a8c:	39 d6                	cmp    %edx,%esi$/;"	l
c0102a8e	kernel.S	/^c0102a8e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c0102a92	kernel.S	/^c0102a92:	89 d1                	mov    %edx,%ecx$/;"	l
c0102a94	kernel.S	/^c0102a94:	89 c3                	mov    %eax,%ebx$/;"	l
c0102a96	kernel.S	/^c0102a96:	72 08                	jb     c0102aa0 <__umoddi3+0x110>$/;"	l
c0102a98	kernel.S	/^c0102a98:	75 11                	jne    c0102aab <__umoddi3+0x11b>$/;"	l
c0102a9a	kernel.S	/^c0102a9a:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
c0102a9e	kernel.S	/^c0102a9e:	73 0b                	jae    c0102aab <__umoddi3+0x11b>$/;"	l
c0102aa0	kernel.S	/^c0102aa0:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
c0102aa4	kernel.S	/^c0102aa4:	1b 14 24             	sbb    (%esp),%edx$/;"	l
c0102aa7	kernel.S	/^c0102aa7:	89 d1                	mov    %edx,%ecx$/;"	l
c0102aa9	kernel.S	/^c0102aa9:	89 c3                	mov    %eax,%ebx$/;"	l
c0102aab	kernel.S	/^c0102aab:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
c0102aaf	kernel.S	/^c0102aaf:	29 da                	sub    %ebx,%edx$/;"	l
c0102ab1	kernel.S	/^c0102ab1:	19 ce                	sbb    %ecx,%esi$/;"	l
c0102ab3	kernel.S	/^c0102ab3:	89 f9                	mov    %edi,%ecx$/;"	l
c0102ab5	kernel.S	/^c0102ab5:	89 f0                	mov    %esi,%eax$/;"	l
c0102ab7	kernel.S	/^c0102ab7:	d3 e0                	shl    %cl,%eax$/;"	d
c0102ab9	kernel.S	/^c0102ab9:	89 e9                	mov    %ebp,%ecx$/;"	l
c0102abb	kernel.S	/^c0102abb:	d3 ea                	shr    %cl,%edx$/;"	d
c0102abd	kernel.S	/^c0102abd:	89 e9                	mov    %ebp,%ecx$/;"	l
c0102abf	kernel.S	/^c0102abf:	d3 ee                	shr    %cl,%esi$/;"	d
c0102ac1	kernel.S	/^c0102ac1:	09 d0                	or     %edx,%eax$/;"	l
c0102ac3	kernel.S	/^c0102ac3:	89 f2                	mov    %esi,%edx$/;"	l
c0102ac5	kernel.S	/^c0102ac5:	83 c4 1c             	add    $0x1c,%esp$/;"	l
c0102ac8	kernel.S	/^c0102ac8:	5b                   	pop    %ebx$/;"	l
c0102ac9	kernel.S	/^c0102ac9:	5e                   	pop    %esi$/;"	l
c0102aca	kernel.S	/^c0102aca:	5f                   	pop    %edi$/;"	l
c0102acb	kernel.S	/^c0102acb:	5d                   	pop    %ebp$/;"	l
c0102acc	kernel.S	/^c0102acc:	c3                   	ret    $/;"	l
c0102acd	kernel.S	/^c0102acd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
c0102ad0	kernel.S	/^c0102ad0:	29 f9                	sub    %edi,%ecx$/;"	l
c0102ad2	kernel.S	/^c0102ad2:	19 d6                	sbb    %edx,%esi$/;"	l
c0102ad4	kernel.S	/^c0102ad4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c0102ad8	kernel.S	/^c0102ad8:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0102adc	kernel.S	/^c0102adc:	e9 18 ff ff ff       	jmp    c01029f9 <__umoddi3+0x69>$/;"	l
cache_disable	kernel/inc/memory.h	/^		uint32_t cache_disable       : 1;$/;"	m	struct:CR0::__anon7	access:public
ch	game.S	/^				ch = *fmt;$/;"	d
ch	kernel.S	/^				ch = *fmt;$/;"	d
channel	kernel/device/timer.c	/^		uint8_t channel      : 2;$/;"	m	struct:CmdByte::__anon11	file:	access:public
char	game.S	/^char *$/;"	l
char	kernel.S	/^char *$/;"	l
clear_buffer	game/inc/video.h	/^void clear_buffer();$/;"	p	signature:()
clear_buffer	game/lib/video.c	/^inline void clear_buffer() {$/;"	f
cli	boot/inc/x86.h	/^cli(void)$/;"	f	signature:(void)
cli	boot/inc/x86.h	/^static __inline void cli(void) __attribute__((always_inline));$/;"	p	signature:(void)
cli	game/inc/x86.h	/^cli(void)$/;"	f	signature:(void)
cli	game/inc/x86.h	/^static __inline void cli(void) __attribute__((always_inline));$/;"	p	signature:(void)
cli	kernel/inc/x86.h	/^cli(void)$/;"	f	signature:(void)
cli	kernel/inc/x86.h	/^static __inline void cli(void) __attribute__((always_inline));$/;"	p	signature:(void)
close_reborn	game/lib/keyboard.c	/^void close_reborn();$/;"	p	file:
close_reborn	game/main.c	/^void close_reborn() {$/;"	f
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cpuid	boot/inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	boot/inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	game/inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	game/inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	kernel/inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	kernel/inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
create_process	kernel/inc/memory.h	/^uint32_t create_process(uint32_t);$/;"	p	signature:(uint32_t)
create_process	kernel/main.c	/^uint32_t create_process(uint32_t disk_offset);$/;"	p	file:	signature:(uint32_t disk_offset)
create_process	kernel/memory/pm.c	/^uint32_t create_process(uint32_t disk_offset) {$/;"	f	signature:(uint32_t disk_offset)
create_process	kernel/memory/pm.c	/^uint32_t create_process(uint32_t);$/;"	p	file:
cs	kernel/inc/irq.h	/^	uint32_t error_code, eip, cs, eflags;$/;"	m	struct:TrapFrame	access:public
cs	tools/hh/mmu.h	/^	uint16_t cs;$/;"	m	struct:TrapFrame	access:public
d	game.S	/^	d = dst;$/;"	d
d	kernel.S	/^	d = dst;$/;"	d
default	game.S	/^		default: break;$/;"	l
default	game.S	/^		default:$/;"	l
default	kernel.S	/^				default: \/*assert(0);*\/ break;$/;"	l
default	kernel.S	/^			default: printk("Unhandled exception!\\t"); break;$/;"	l
default	kernel.S	/^		default: panic("Unhandled system call: id = %d", tf->eax);$/;"	l
default	kernel.S	/^		default:$/;"	l
delete_bullet	game/src/effect.c	/^void delete_bullet(struct Bullet *bullet_p) {$/;"	f	signature:(struct Bullet *bullet_p)
delete_enemy	game/src/effect.c	/^void delete_enemy(struct Enemy *enemy_p) {$/;"	f	signature:(struct Enemy *enemy_p)
dig	game.S	/^			dig = *s - '0';$/;"	d
dig	game.S	/^			dig = *s - 'A' + 10;$/;"	d
dig	game.S	/^			dig = *s - 'a' + 10;$/;"	d
dig	kernel.S	/^			dig = *s - '0';$/;"	d
dig	kernel.S	/^			dig = *s - 'A' + 10;$/;"	d
dig	kernel.S	/^			dig = *s - 'a' + 10;$/;"	d
directcolor_attributes	kernel/inc/device/video_mode.h	/^	uint8_t directcolor_attributes;$/;"	m	struct:ModeInfoBlock	access:public
dirty	kernel/inc/memory.h	/^		uint32_t dirty               : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
display_buffer	game/inc/video.h	/^void display_buffer();$/;"	p	signature:()
display_buffer	game/lib/video.c	/^inline void display_buffer() {$/;"	f
do_syscall	kernel/irq/irq_handle.c	/^void do_syscall(TrapFrame *);$/;"	p	file:	signature:(TrapFrame *)
do_syscall	kernel/syscall/do_syscall.c	/^void do_syscall(TrapFrame *tf) {$/;"	f	signature:(TrapFrame *tf)
dontcare	tools/hh/mmu.h	/^	char dontcare[88];$/;"	m	struct:__anon12	access:public
drawRect_buffer	game/inc/video.h	/^void drawRect_buffer(const uint8_t*,int,int,int,int);$/;"	p	signature:(const uint8_t*,int,int,int,int)
drawRect_buffer	game/lib/video.c	/^inline void drawRect_buffer(const uint8_t *src, int x, int y, int w, int h){$/;"	f	signature:(const uint8_t *src, int x, int y, int w, int h)
draw_screen	game/src/effect.c	/^void draw_screen() {$/;"	f
draw_screen	game/src/game_loop.c	/^void draw_screen();$/;"	p	file:
ds	tools/hh/mmu.h	/^	uint32_t gs,fs,es,ds;   \/\/ Segment register$/;"	m	struct:TrapFrame	access:public
dst_in	game.S	/^	dst_in = dst;$/;"	d
dst_in	kernel.S	/^	dst_in = dst;$/;"	d
e_ehsize	boot/inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_ehsize	kernel/inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	boot/inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_elf	kernel/inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	boot/inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_entry	kernel/inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	boot/inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_flags	kernel/inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	boot/inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_machine	kernel/inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	boot/inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_magic	kernel/inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	boot/inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phentsize	kernel/inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	boot/inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phnum	kernel/inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	boot/inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_phoff	kernel/inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	boot/inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shentsize	kernel/inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	boot/inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shnum	kernel/inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	boot/inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shoff	kernel/inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	boot/inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_shstrndx	kernel/inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	boot/inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_type	kernel/inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	boot/inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
e_version	kernel/inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
eax	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
eax	tools/hh/mmu.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame	access:public
ebp	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
ebp	tools/hh/mmu.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame	access:public
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
ebx	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
ebx	tools/hh/mmu.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame	access:public
ecx	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
ecx	tools/hh/mmu.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame	access:public
edi	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
edi	tools/hh/mmu.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame	access:public
edx	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
edx	tools/hh/mmu.h	/^	uint32_t ebx, edx, ecx, eax;   \/\/ Register saved by pushal$/;"	m	struct:TrapFrame	access:public
eflags	kernel/inc/irq.h	/^	uint32_t error_code, eip, cs, eflags;$/;"	m	struct:TrapFrame	access:public
eflags	tools/hh/mmu.h	/^	uint32_t eflags; \/\/ Execution state before trap $/;"	m	struct:TrapFrame	access:public
eip	kernel/inc/irq.h	/^	uint32_t error_code, eip, cs, eflags;$/;"	m	struct:TrapFrame	access:public
eip	tools/hh/mmu.h	/^	uint32_t eip;$/;"	m	struct:TrapFrame	access:public
elf	kernel.S	/^	elf = (struct Elf*)buf;$/;"	d
emulation	kernel/inc/memory.h	/^		uint32_t emulation           : 1;$/;"	m	struct:CR0::__anon7	access:public
enable_bullet	game.S	/^	enable_bullet = false;$/;"	d
enable_bullet	game/src/effect.c	/^bool enable_bullet;$/;"	v
enable_reborn	game/lib/keyboard.c	/^void enable_reborn();$/;"	p	file:
enable_reborn	game/main.c	/^void enable_reborn() {$/;"	f
enemy	game/src/effect.c	/^} *enemy_head, *enemy_avail, enemy[NR_ENEMY];$/;"	v	typeref:struct:Enemy
enemy_avail	game.S	/^		enemy_avail = enemy_avail->next;$/;"	d
enemy_avail	game.S	/^		enemy_avail = enemy_p;$/;"	d
enemy_avail	game.S	/^	enemy_avail = enemy;$/;"	d
enemy_avail	game/src/effect.c	/^} *enemy_head, *enemy_avail, enemy[NR_ENEMY];$/;"	v	typeref:struct:Enemy
enemy_head	game.S	/^		enemy_head = enemy_p->next;$/;"	d
enemy_head	game.S	/^		enemy_head = temp;$/;"	d
enemy_head	game.S	/^	enemy_head = NULL;$/;"	d
enemy_head	game/src/effect.c	/^} *enemy_head, *enemy_avail, enemy[NR_ENEMY];$/;"	v	typeref:struct:Enemy
enemy_temp	game.S	/^				enemy_temp = enemy_temp->next;$/;"	d
enemy_temp	game.S	/^		enemy_temp = enemy_temp->next;$/;"	d
entry	kernel.S	/^entry:$/;"	l
entry	kernel/entry.S	/^entry:$/;"	l
enum	game.S	/^enum {SYS_write, SYS_time, SYS_kbd, SYS_video};$/;"	l
epa	kernel.S	/^	epa = pa + count;$/;"	d
eph	kernel.S	/^	eph = ph + elf->e_phnum;$/;"	d
err	game.S	/^				err = -err;$/;"	d
err	game.S	/^			err = va_arg(ap, int);$/;"	d
err	kernel.S	/^				err = -err;$/;"	d
err	kernel.S	/^			err = va_arg(ap, int);$/;"	d
err	tools/hh/mmu.h	/^	uint32_t err;$/;"	m	struct:TrapFrame	access:public
error_code	kernel/inc/irq.h	/^	uint32_t error_code, eip, cs, eflags;$/;"	m	struct:TrapFrame	access:public
error_string	cache/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
es	tools/hh/mmu.h	/^	uint32_t gs,fs,es,ds;   \/\/ Segment register$/;"	m	struct:TrapFrame	access:public
esi	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
esi	tools/hh/mmu.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame	access:public
esp	tools/hh/mmu.h	/^	uint32_t esp; $/;"	m	struct:TrapFrame	access:public
esp0	tools/hh/mmu.h	/^	uint32_t esp0;         \/\/ Ring 0 Stack pointer and segment selector$/;"	m	struct:__anon12	access:public
esp_	tools/hh/mmu.h	/^	uint32_t edi, esi, ebp, esp_;$/;"	m	struct:TrapFrame	access:public
extension_type	kernel/inc/memory.h	/^		uint32_t extension_type      : 1;$/;"	m	struct:CR0::__anon7	access:public
extern	game.S	/^extern bool enable_bullet;$/;"	l
extern	game.S	/^extern int inc_player;$/;"	l
extern	kernel.S	/^extern uint32_t time_tick;$/;"	l
f	kernel.S	/^			f = f->next;$/;"	d
false	boot/inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
free_pcb	kernel/memory/pm.c	/^void free_pcb(int i) {$/;"	f	signature:(int i)
free_pte	kernel/inc/memory.h	/^void free_pte(int);$/;"	p	signature:(int)
free_pte	kernel/memory/mm.c	/^void free_pte(int pte_idx) {$/;"	f	signature:(int pte_idx)
fs	tools/hh/mmu.h	/^	uint32_t gs,fs,es,ds;   \/\/ Segment register$/;"	m	struct:TrapFrame	access:public
fs_write	kernel/fs/fs.c	/^int fs_write(int fd, void *buf, int len) {$/;"	f	signature:(int fd, void *buf, int len)
fs_write	kernel/syscall/do_syscall.c	/^int fs_write(int, void*, int);$/;"	p	file:	signature:(int, void*, int)
gImage_Bullet	game/data/Bullet.c	/^const unsigned char gImage_Bullet[960] = {$/;"	v
gImage_FeiFan_1	game/data/FeiFan_1.c	/^const unsigned char gImage_FeiFan_1[19200] = { \/* 0X00,0X18,0X50,0X00,0X50,0X00,0X00,0X39, *\/$/;"	v
gImage_FeiFan_2	game/data/FeiFan_2.c	/^const unsigned char gImage_FeiFan_2[19200] = { \/* 0X00,0X18,0X50,0X00,0X50,0X00,0X00,0X39, *\/$/;"	v
gImage_FeiFan_3	game/data/FeiFan_3.c	/^const unsigned char gImage_FeiFan_3[19200] = { \/* 0X00,0X18,0X50,0X00,0X50,0X00,0X00,0X39, *\/$/;"	v
gImage_FeiFan_4	game/data/FeiFan_4.c	/^const unsigned char gImage_FeiFan_4[19200] = { \/* 0X00,0X18,0X50,0X00,0X50,0X00,0X00,0X39, *\/$/;"	v
gImage_FeiFan_5	game/data/FeiFan_5.c	/^const unsigned char gImage_FeiFan_5[19200] = { \/* 0X00,0X18,0X50,0X00,0X50,0X00,0X00,0X39, *\/$/;"	v
gImage_LowSing	game/data/LowSing.c	/^const unsigned char gImage_LowSing[19200] = { \/* 0X00,0X18,0X50,0X00,0X50,0X00,0X00,0X39, *\/$/;"	v
gImage_PARK	kernel/data/PARK.c	/^const unsigned char gImage_PARK[1440000] = {$/;"	v
game_loop	game/main.c	/^void game_loop();$/;"	p	file:
game_loop	game/src/game_loop.c	/^void game_loop()$/;"	f
gd_args	boot/inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:GateDescriptor	access:public
gd_args	kernel/inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:GateDescriptor	access:public
gd_dpl	boot/inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:GateDescriptor	access:public
gd_dpl	kernel/inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:GateDescriptor	access:public
gd_off_15_0	boot/inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
gd_off_15_0	kernel/inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
gd_off_31_16	boot/inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
gd_off_31_16	kernel/inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
gd_p	boot/inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:GateDescriptor	access:public
gd_p	kernel/inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:GateDescriptor	access:public
gd_rsv1	boot/inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:GateDescriptor	access:public
gd_rsv1	kernel/inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:GateDescriptor	access:public
gd_s	boot/inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:GateDescriptor	access:public
gd_s	kernel/inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:GateDescriptor	access:public
gd_sel	boot/inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:GateDescriptor	access:public
gd_sel	kernel/inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:GateDescriptor	access:public
gd_type	boot/inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:GateDescriptor	access:public
gd_type	kernel/inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:GateDescriptor	access:public
gdt	boot/start.S	/^gdt:$/;"	l
gdt	kernel/memory/kvm.c	/^static Segdesc gdt[NR_SEGMENTS];$/;"	v	file:
gdt	tools/hh/kvm.c	/^static SegDesc gdt[NR_SEGMENTS];$/;"	v	file:
gdtdesc	boot/start.S	/^gdtdesc:$/;"	l
generate_bullet	game/src/effect.c	/^bool generate_bullet() {$/;"	f
generate_bullet	game/src/game_loop.c	/^bool generate_bullet();$/;"	p	file:
generate_enemy	game/src/effect.c	/^bool generate_enemy() {$/;"	f
generate_enemy	game/src/game_loop.c	/^bool generate_enemy();$/;"	p	file:
get_kbd	game/inc/syscall.h	/^int get_kbd();$/;"	p	signature:()
get_kbd	game/lib/syscall.c	/^int get_kbd() {$/;"	f
get_kpdir	kernel/memory/kvm.c	/^PDE* get_kpdir() { return kpdir; }$/;"	f
get_kpdir	kernel/memory/pm.c	/^PDE* get_kpdir();$/;"	p	file:
get_kpdir	kernel/memory/vmem.c	/^PDE* get_kpdir();$/;"	p	file:
get_pcb	kernel/memory/pm.c	/^int get_pcb() {$/;"	f
get_press_key	game/lib/keyboard.c	/^void get_press_key(uint8_t keycode) {$/;"	f	signature:(uint8_t keycode)
get_press_key	game/lib/keyboard.c	/^void get_press_key(uint8_t);$/;"	p	file:
get_pte	kernel/inc/memory.h	/^uint32_t get_pte();$/;"	p	signature:()
get_pte	kernel/memory/mm.c	/^uint32_t get_pte() {$/;"	f
get_release_key	game/lib/keyboard.c	/^void get_release_key(uint8_t keycode) {$/;"	f	signature:(uint8_t keycode)
get_release_key	game/lib/keyboard.c	/^void get_release_key(uint8_t);$/;"	p	file:
get_time	game/inc/syscall.h	/^int get_time();$/;"	p	signature:()
get_time	game/lib/syscall.c	/^int get_time() {$/;"	f
getint	cache/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	cache/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
global	kernel/inc/memory.h	/^		uint32_t global              : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
granularity	kernel/inc/device/video_mode.h	/^	uint16_t granularity;$/;"	m	struct:ModeInfoBlock	access:public
granularity	tools/hh/mmu.h	/^	uint32_t granularity         : 1;$/;"	m	struct:SegmentDescriptor	access:public
green	game/inc/video.h	/^		uint8_t green;$/;"	m	struct:Pixels::__anon15	access:public
green	kernel/inc/device/video.h	/^		uint8_t green;$/;"	m	struct:Pixels::__anon4	access:public
green_mask	kernel/inc/device/video_mode.h	/^	uint8_t green_mask, green_position;$/;"	m	struct:ModeInfoBlock	access:public
green_position	kernel/inc/device/video_mode.h	/^	uint8_t green_mask, green_position;$/;"	m	struct:ModeInfoBlock	access:public
gs	tools/hh/mmu.h	/^	uint32_t gs,fs,es,ds;   \/\/ Segment register$/;"	m	struct:TrapFrame	access:public
h	game/inc/video.h	/^	int w, h;$/;"	m	struct:Surface	access:public
h	game/src/effect.c	/^	int w, h;$/;"	m	struct:Enemy	file:	access:public
h	game/src/effect.c	/^	int w,h;$/;"	m	struct:Bullet	file:	access:public
h	kernel/inc/device/video.h	/^	int w, h;$/;"	m	struct:Surface	access:public
handle_count	kernel/irq/irq_handle.c	/^static int handle_count = 0;$/;"	v	file:
handle_keys	kernel/device/keyboard.c	/^int handle_keys() {$/;"	f
handle_keys	kernel/inc/device/keyboard.h	/^int handle_keys();$/;"	p	signature:()
handle_keys	kernel/syscall/do_syscall.c	/^int handle_keys();$/;"	p	file:
handle_pool	kernel/irq/irq_handle.c	/^static struct IRQ_t handle_pool[NR_IRQ_HANDLE];$/;"	v	typeref:struct:IRQ_t	file:
handles	kernel/irq/irq_handle.c	/^static struct IRQ_t *handles[NR_HARD_INTR]; \/\/ handles is an array of lists$/;"	v	typeref:struct:IRQ_t	file:
hlt	boot/inc/x86.h	/^hlt(void)$/;"	f	signature:(void)
hlt	boot/inc/x86.h	/^static __inline void hlt(void) __attribute__((always_inline));$/;"	p	signature:(void)
hlt	game/inc/x86.h	/^hlt(void)$/;"	f	signature:(void)
hlt	game/inc/x86.h	/^static __inline void hlt(void) __attribute__((always_inline));$/;"	p	signature:(void)
hlt	kernel/inc/x86.h	/^hlt(void)$/;"	f	signature:(void)
hlt	kernel/inc/x86.h	/^static __inline void hlt(void) __attribute__((always_inline));$/;"	p	signature:(void)
idt	kernel/irq/idt.c	/^Gatedesc idt[NR_IRQ];$/;"	v
image_pages	kernel/inc/device/video_mode.h	/^	uint8_t memory_model, bank_size, image_pages;$/;"	m	struct:ModeInfoBlock	access:public
inb	boot/inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	boot/inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inb	game/inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	game/inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inb	kernel/inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	kernel/inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inc_player	game.S	/^	inc_player = 0;$/;"	d
inc_player	game/src/effect.c	/^int x_player, inc_player;$/;"	v
init	kernel/main.c	/^void init() {$/;"	f
init_effect	game/main.c	/^void init_effect();$/;"	p	file:
init_effect	game/src/effect.c	/^void init_effect() {$/;"	f
init_i8259	kernel/irq/i8259.c	/^void init_i8259(void) {$/;"	f	signature:(void)
init_i8259	kernel/main.c	/^void init_i8259();$/;"	p	file:
init_idt	kernel/irq/idt.c	/^void init_idt() {$/;"	f
init_idt	kernel/main.c	/^void init_idt();$/;"	p	file:
init_page	kernel/main.c	/^void init_page();$/;"	p	file:
init_page	kernel/memory/kvm.c	/^void init_page(void) {$/;"	f	signature:(void)
init_pcb	kernel/inc/memory.h	/^void init_pcb();$/;"	p	signature:()
init_pcb	kernel/memory/pm.c	/^void init_pcb(void) {$/;"	f	signature:(void)
init_pte_info	kernel/inc/memory.h	/^void init_pte_info();$/;"	p	signature:()
init_pte_info	kernel/memory/mm.c	/^void init_pte_info(void) {$/;"	f	signature:(void)
init_segment	kernel/main.c	/^void init_segment();$/;"	p	file:
init_segment	kernel/memory/kvm.c	/^init_segment(void) {$/;"	f	signature:(void)
init_segment	tools/hh/kvm.c	/^init_segment(void) {$/;"	f	signature:(void)
init_serial	kernel/lib/serial.c	/^void init_serial() {$/;"	f
init_serial	kernel/main.c	/^void init_serial();$/;"	p	file:
init_timer	kernel/device/timer.c	/^void init_timer() {$/;"	f
init_timer	kernel/main.c	/^void init_timer();$/;"	p	file:
init_vmem	kernel/inc/device/video.h	/^void init_vmem();$/;"	p	signature:()
init_vmem	kernel/memory/vmem.c	/^void init_vmem() {$/;"	f
init_vmem_addr	kernel/device/video.c	/^void init_vmem_addr() {$/;"	f
init_vmem_addr	kernel/inc/device/video.h	/^void init_vmem_addr();$/;"	p	signature:()
init_vmem_addr	kernel/main.c	/^void init_vmem_addr();$/;"	p	file:
inl	boot/inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	boot/inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	game/inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	game/inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	kernel/inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	kernel/inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inline	game.S	/^inline void clear_buffer() {$/;"	l
inline	game.S	/^inline void display_buffer() {$/;"	l
inline	game.S	/^inline void drawRect_buffer(const uint8_t *src, int x, int y, int w, int h){$/;"	l
insb	boot/inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	boot/inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insb	game/inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	game/inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insb	kernel/inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	kernel/inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	boot/inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	boot/inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	game/inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	game/inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	kernel/inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	kernel/inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	boot/inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	boot/inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	game/inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	game/inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	kernel/inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	kernel/inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	game.S	/^int __attribute__((__noinline__))$/;"	l
int	game.S	/^int get_kbd() {$/;"	l
int	game.S	/^int get_time() {$/;"	l
int	game.S	/^int main()$/;"	l
int	game.S	/^int put_video(uint8_t *buffer) {$/;"	l
int	game.S	/^int write(int fd, char *buf, int len) {$/;"	l
int	game.S	/^int$/;"	l
int	kernel.S	/^int __attribute__((__noinline__))$/;"	l
int	kernel.S	/^int abort(const char* filename, int line) {$/;"	l
int	kernel.S	/^int fs_write(int fd, void *buf, int len) {$/;"	l
int	kernel.S	/^int fs_write(int, void*, int);$/;"	l
int	kernel.S	/^int get_pcb() {$/;"	l
int	kernel.S	/^int handle_keys() {$/;"	l
int	kernel.S	/^int handle_keys();$/;"	l
int	kernel.S	/^int is_serial_idle() {$/;"	l
int	kernel.S	/^int load_vmem(uint8_t *buffer) {$/;"	l
int	kernel.S	/^int load_vmem(uint8_t*);$/;"	l
int	kernel.S	/^int main(void) {$/;"	l
int	kernel.S	/^int main(void);$/;"	l
int	kernel.S	/^int printk(const char *, ...);$/;"	l
int	kernel.S	/^int$/;"	l
int16_t	boot/inc/types.h	/^typedef short int16_t;$/;"	t
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	boot/inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	boot/inc/types.h	/^typedef long long int64_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	boot/inc/types.h	/^typedef __signed char int8_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	boot/inc/types.h	/^typedef int32_t intptr_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	boot/inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	boot/inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
invlpg	game/inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	game/inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
invlpg	kernel/inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	kernel/inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	boot/inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	boot/inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inw	game/inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	game/inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inw	kernel/inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	kernel/inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
irq	kernel/inc/irq.h	/^	int32_t irq;$/;"	m	struct:TrapFrame	access:public
irq	tools/hh/mmu.h	/^	int irq;$/;"	m	struct:TrapFrame	access:public
irq0	kernel/irq/idt.c	/^void irq0();$/;"	p	file:
irq1	kernel/irq/idt.c	/^void irq1();$/;"	p	file:
irq14	kernel/irq/idt.c	/^void irq14();$/;"	p	file:
irq_empty	kernel.S	/^			irq_empty:	pushl $0;  pushl   $-1; jmp asm_do_irq$/;"	l
irq_empty	kernel/irq/do_irq.S	/^			irq_empty:	pushl $0;  pushl   $-1; jmp asm_do_irq$/;"	l
irq_empty	kernel/irq/idt.c	/^void irq_empty();$/;"	p	file:
irq_handle	kernel/irq/irq_handle.c	/^void irq_handle(TrapFrame *tf) {$/;"	f	signature:(TrapFrame *tf)
is_serial_idle	kernel/lib/serial.c	/^int is_serial_idle() {$/;"	f
key_state	kernel/device/keyboard.c	/^static int key_state[NR_KEYS];$/;"	v	file:
keyboard_event	kernel/device/keyboard.c	/^void keyboard_event(void) {$/;"	f	signature:(void)
keyboard_event	kernel/inc/device/keyboard.h	/^void keyboard_event();$/;"	p	signature:()
keyboard_event	kernel/main.c	/^void keyboard_event();$/;"	p	file:
keycode_array	game/lib/keyboard.c	/^static const int keycode_array[] = {$/;"	v	file:
keycode_array	kernel/device/keyboard.c	/^static const int keycode_array[] = {$/;"	v	file:
kill_flag	game.S	/^					kill_flag = true;$/;"	d
kill_flag	game.S	/^		kill_flag = false;$/;"	d
kstack	kernel/memory/pm.c	/^	uint8_t kstack[4096];$/;"	m	struct:PCB	file:	access:public
lcr0	boot/inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	boot/inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr0	game/inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	game/inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr0	kernel/inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	kernel/inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	boot/inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	boot/inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	game/inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	game/inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	kernel/inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	kernel/inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	boot/inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	boot/inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	game/inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	game/inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	kernel/inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	kernel/inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lflag	game.S	/^		lflag = 0;$/;"	d
lflag	kernel.S	/^		lflag = 0;$/;"	d
lgdt	boot/inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
lgdt	game/inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
lgdt	kernel/inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
lidt	boot/inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	boot/inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lidt	game/inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	game/inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lidt	kernel/inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	kernel/inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
limit_15_0	tools/hh/mmu.h	/^	uint32_t limit_15_0          : 16;$/;"	m	struct:SegmentDescriptor	access:public
limit_19_16	tools/hh/mmu.h	/^	uint32_t limit_19_16         : 4;$/;"	m	struct:SegmentDescriptor	access:public
link	tools/hh/mmu.h	/^	uint32_t link;         \/\/ old ts selector$/;"	m	struct:__anon12	access:public
lldt	boot/inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	boot/inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lldt	game/inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	game/inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lldt	kernel/inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	kernel/inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
load_vmem	kernel/device/video.c	/^int load_vmem(uint8_t *buffer) {$/;"	f	signature:(uint8_t *buffer)
load_vmem	kernel/inc/device/video.h	/^int load_vmem(uint8_t*);$/;"	p	signature:(uint8_t*)
load_vmem	kernel/syscall/do_syscall.c	/^int load_vmem(uint8_t*);$/;"	p	file:	signature:(uint8_t*)
long	game.S	/^long$/;"	l
long	kernel.S	/^long$/;"	l
ltr	boot/inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	boot/inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
ltr	game/inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	game/inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
ltr	kernel/inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	kernel/inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
main	game/main.c	/^int main()$/;"	f
main	kernel/main.c	/^int main(void) {$/;"	f	signature:(void)
main	kernel/main.c	/^int main(void);$/;"	p	file:	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memory_model	kernel/inc/device/video_mode.h	/^	uint8_t memory_model, bank_size, image_pages;$/;"	m	struct:ModeInfoBlock	access:public
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
mm_malloc	kernel/memory/pm.c	/^void mm_malloc(int pcb_idx, uint32_t pde_idx, int pde_num) {$/;"	f	signature:(int pcb_idx, uint32_t pde_idx, int pde_num)
mm_malloc	kernel/memory/pm.c	/^void mm_malloc(int,uint32_t,int);$/;"	p	file:	signature:(int,uint32_t,int)
mode	kernel/device/timer.c	/^union CmdByte mode = {$/;"	v	typeref:union:CmdByte
monitor_coprocessor	kernel/inc/memory.h	/^		uint32_t monitor_coprocessor : 1;$/;"	m	struct:CR0::__anon7	access:public
myread	tools/Image2Lcd.sh	/^myread() {$/;"	f
next	game/src/effect.c	/^	struct Bullet *next;$/;"	m	struct:Bullet	typeref:struct:Bullet::Bullet	file:	access:public
next	game/src/effect.c	/^	struct Enemy *next;$/;"	m	struct:Enemy	typeref:struct:Enemy::Enemy	file:	access:public
next	kernel/irq/irq_handle.c	/^	struct IRQ_t *next;$/;"	m	struct:IRQ_t	typeref:struct:IRQ_t::IRQ_t	file:	access:public
next	kernel/memory/mm.c	/^	struct PTE_INFO *next;$/;"	m	struct:PTE_INFO	typeref:struct:PTE_INFO::PTE_INFO	file:	access:public
no_write_through	kernel/inc/memory.h	/^		uint32_t no_write_through    : 1;$/;"	m	struct:CR0::__anon7	access:public
num	game.S	/^				num = -(long long) num;$/;"	d
num	game.S	/^			num = (unsigned long long)$/;"	d
num	game.S	/^			num = getint(&ap, lflag);$/;"	d
num	game.S	/^			num = getuint(&ap, lflag);$/;"	d
num	kernel.S	/^				num = -(long long) num;$/;"	d
num	kernel.S	/^			num = (unsigned long long)$/;"	d
num	kernel.S	/^			num = getint(&ap, lflag);$/;"	d
num	kernel.S	/^			num = getuint(&ap, lflag);$/;"	d
number	game.S	/^		number:$/;"	l
number	kernel.S	/^		number:$/;"	l
numeric_error	kernel/inc/memory.h	/^		uint32_t numeric_error       : 1;$/;"	m	struct:CR0::__anon7	access:public
off_t	boot/inc/types.h	/^typedef int32_t off_t;$/;"	t
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	kernel.S	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset_15_0	tools/hh/mmu.h	/^	uint32_t offset_15_0      : 16;\/\/low 16bit of offset in segment$/;"	m	struct:GateDescriptor	access:public
offset_31_16	tools/hh/mmu.h	/^	uint32_t offset_31_16     : 16;\/\/high bits of offset in segment$/;"	m	struct:GateDescriptor	access:public
offsetof	boot/inc/types.h	71;"	d
offsetof	inc/types.h	71;"	d
old_esp	kernel/inc/irq.h	/^	uint32_t edi, esi, ebp, old_esp, ebx, edx, ecx, eax;$/;"	m	struct:TrapFrame	access:public
operate_mode	kernel/device/timer.c	/^		uint8_t operate_mode : 3;$/;"	m	struct:CmdByte::__anon11	file:	access:public
operation_size	tools/hh/mmu.h	/^	uint32_t operation_size      : 1;$/;"	m	struct:SegmentDescriptor	access:public
out_num	cache/stdio.c	/^void out_num(unsigned int x, unsigned int base, bool SIGN){$/;"	f	signature:(unsigned int x, unsigned int base, bool SIGN)
out_num	cache/stdio.c	/^void out_num(unsigned, unsigned, bool);$/;"	p	file:	signature:(unsigned, unsigned, bool)
out_string	cache/stdio.c	/^void out_string(char *s){$/;"	f	signature:(char *s)
out_string	cache/stdio.c	/^void out_string(char*);$/;"	p	file:	signature:(char*)
outb	boot/inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	boot/inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outb	game/inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	game/inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outb	kernel/inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	kernel/inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	boot/inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	boot/inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outl	game/inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	game/inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outl	kernel/inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	kernel/inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	boot/inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	boot/inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsb	game/inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	game/inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsb	kernel/inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	kernel/inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	boot/inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	boot/inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	game/inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	game/inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	kernel/inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	kernel/inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	boot/inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	boot/inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	game/inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	game/inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	kernel/inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	kernel/inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	boot/inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	boot/inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
outw	game/inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	game/inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
outw	kernel/inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	kernel/inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	game.S	/^				p = "(null)";$/;"	d
p	kernel.S	/^				p = "(null)";$/;"	d
p_align	boot/inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_align	kernel/inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	boot/inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_filesz	kernel/inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	boot/inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_flags	kernel/inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	boot/inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_memsz	kernel/inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	boot/inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_offset	kernel/inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	boot/inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_pa	kernel/inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	boot/inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_type	kernel/inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	boot/inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
p_va	kernel/inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa_to_va	kernel/inc/memory.h	15;"	d
pad0	kernel/inc/memory.h	/^		uint32_t pad0                : 10;$/;"	m	struct:CR0::__anon7	access:public
pad0	kernel/inc/memory.h	/^		uint32_t pad0                : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
pad0	kernel/inc/memory.h	/^		uint32_t pad0                : 3;$/;"	m	struct:CR3::__anon8	access:public
pad0	kernel/inc/memory.h	/^		uint32_t pad0                : 6;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
pad0	tools/hh/mmu.h	/^	uint32_t pad0                : 1;$/;"	m	struct:SegmentDescriptor	access:public
pad0	tools/hh/mmu.h	/^	uint32_t pad0             : 8;\/\/low 5#args, 0 for interrupt\/trap gates high 3bit:reserved(should be 0 I guess)$/;"	m	struct:GateDescriptor	access:public
pad1	kernel/inc/memory.h	/^		uint32_t pad1                : 1; $/;"	m	struct:CR0::__anon7	access:public
pad1	kernel/inc/memory.h	/^		uint32_t pad1                : 3;$/;"	m	struct:PageTableEntry::__anon6	access:public
pad1	kernel/inc/memory.h	/^		uint32_t pad1                : 7;$/;"	m	struct:CR3::__anon8	access:public
pad2	kernel/inc/memory.h	/^		uint32_t pad2                : 10;$/;"	m	struct:CR0::__anon7	access:public
padc	game.S	/^			padc = '-';$/;"	d
padc	game.S	/^			padc = '0';$/;"	d
padc	game.S	/^		padc = ' ';$/;"	d
padc	kernel.S	/^			padc = '-';$/;"	d
padc	kernel.S	/^			padc = '0';$/;"	d
padc	kernel.S	/^		padc = ' ';$/;"	d
padding3	tools/hh/mmu.h	/^	uint16_t padding3;$/;"	m	struct:TrapFrame	access:public
padding4	tools/hh/mmu.h	/^	uint16_t padding4;$/;"	m	struct:TrapFrame	access:public
page_cache_disable	kernel/inc/memory.h	/^		uint32_t page_cache_disable  : 1;$/;"	m	struct:CR3::__anon8	access:public
page_cache_disable	kernel/inc/memory.h	/^		uint32_t page_cache_disable  : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
page_cache_disable	kernel/inc/memory.h	/^		uint32_t page_cache_disable  : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
page_directory_base	kernel/inc/memory.h	/^		uint32_t page_directory_base : 20;$/;"	m	struct:CR3::__anon8	access:public
page_frame	kernel/inc/memory.h	/^		uint32_t page_frame          : 20;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
page_frame	kernel/inc/memory.h	/^		uint32_t page_frame          : 20;$/;"	m	struct:PageTableEntry::__anon6	access:public
page_trans	kernel/memory/pm.c	/^uint32_t page_trans(int pcb_idx, uint32_t va) {$/;"	f	signature:(int pcb_idx, uint32_t va)
page_trans	kernel/memory/pm.c	/^uint32_t page_trans(int, uint32_t);$/;"	p	file:	signature:(int, uint32_t)
page_write_through	kernel/inc/memory.h	/^		uint32_t page_write_through  : 1;$/;"	m	struct:CR3::__anon8	access:public
page_write_through	kernel/inc/memory.h	/^		uint32_t page_write_through  : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
page_write_through	kernel/inc/memory.h	/^		uint32_t page_write_through  : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
paging	kernel/inc/memory.h	/^		uint32_t paging              : 1;$/;"	m	struct:CR0::__anon7	access:public
palette	cache/palette.c	/^static uint8_t palette[NR_PALETTE_ENTRY * 4] = {$/;"	v	file:
panic	kernel/inc/assert.h	26;"	d
pcb	kernel/memory/pm.c	/^static PCB pcb[NR_PCB];$/;"	v	file:
pcb_present	kernel/memory/pm.c	/^bool pcb_present[NR_PCB];$/;"	v
pd_base	boot/inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_base	kernel/inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_base	tools/hh/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	boot/inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pd_lim	kernel/inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pd_lim	tools/hh/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
ph	kernel.S	/^	ph = (struct Proghdr*)((char *)elf + elf->e_phoff);$/;"	d
physaddr_t	boot/inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physbase	kernel/inc/device/video_mode.h	/^	uint32_t physbase;  \/\/ your LFB (Linear Framebuffer) address ;)$/;"	m	struct:ModeInfoBlock	access:public
physbase	kernel/memory/mm.c	/^	uint32_t physbase;$/;"	m	struct:PTE_INFO	file:	access:public
pitch	kernel/inc/device/video_mode.h	/^	uint16_t pitch; \/\/ bytes per scanline$/;"	m	struct:ModeInfoBlock	access:public
pixels	game/inc/video.h	/^	uint8_t *pixels;$/;"	m	struct:Surface	access:public
pixels	kernel/inc/device/video.h	/^	uint8_t *pixels;$/;"	m	struct:Surface	access:public
planes	kernel/inc/device/video_mode.h	/^	uint8_t Wchar, Ychar, planes, bpp, banks;$/;"	m	struct:ModeInfoBlock	access:public
ppn_t	boot/inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
precision	game.S	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	game.S	/^			precision = va_arg(ap, int);$/;"	d
precision	game.S	/^		precision = -1;$/;"	d
precision	kernel.S	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	kernel.S	/^			precision = va_arg(ap, int);$/;"	d
precision	kernel.S	/^		precision = -1;$/;"	d
present	kernel/inc/memory.h	/^		uint32_t present             : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
present	kernel/inc/memory.h	/^		uint32_t present             : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
present	tools/hh/mmu.h	/^	uint32_t present             : 1;$/;"	m	struct:SegmentDescriptor	access:public
present	tools/hh/mmu.h	/^	uint32_t present          : 1;\/\/Present$/;"	m	struct:GateDescriptor	access:public
present_mode	kernel/device/timer.c	/^		uint8_t present_mode : 1;$/;"	m	struct:CmdByte::__anon11	file:	access:public
prev	kernel/memory/mm.c	/^	struct PTE_INFO *prev;$/;"	m	struct:PTE_INFO	typeref:struct:PTE_INFO::PTE_INFO	file:	access:public
printf	game/inc/common.h	/^int printf(const char *, ...);$/;"	p	signature:(const char *, ...)
printf	game/lib/printf.c	/^printf(const char *ctl, ...) {$/;"	f	signature:(const char *ctl, ...)
printfmt	cache/printfmt.c	/^printfmt(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
printfmt	cache/printfmt.c	/^void printfmt(const char *fmt, ...);$/;"	p	file:	signature:(const char *fmt, ...)
printfmt	cache/stdio.h	/^void printfmt(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printk	cache/stdio.c	/^int printk(const char *fmt, ...){$/;"	f	signature:(const char *fmt, ...)
printk	cache/stdio.h	/^int printk(const char *, ...);$/;"	p	signature:(const char *, ...)
printk	kernel/inc/assert.h	/^int printk(const char *, ...);$/;"	p	signature:(const char *, ...)
printk	kernel/inc/common.h	/^int printk(const char*, ...);$/;"	p	signature:(const char*, ...)
printk	kernel/lib/printk.c	/^printk(const char *ctl, ...) {$/;"	f	signature:(const char *ctl, ...)
printk	kernel/test/printk_test.c	/^int printk(const char *, ...);$/;"	p	file:	signature:(const char *, ...)
printk_test	kernel/main.c	/^void printk_test();$/;"	p	file:
printk_test	kernel/test/printk_test.c	/^void printk_test(){$/;"	f
printnum	cache/printfmt.c	/^printnum(unsigned long long num, unsigned base, int width, int padc)$/;"	f	file:	signature:(unsigned long long num, unsigned base, int width, int padc)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
privilege_level	tools/hh/mmu.h	/^	uint32_t privilege_level     : 2;$/;"	m	struct:SegmentDescriptor	access:public
privilege_level	tools/hh/mmu.h	/^	uint32_t privilege_level  : 2;\/\/descriptor(meaning new)privilege$/;"	m	struct:GateDescriptor	access:public
process_keys	game/inc/keyboard.h	/^bool process_keys();$/;"	p	signature:()
process_keys	game/lib/keyboard.c	/^bool process_keys() {$/;"	f
process_keys	game/main.c	/^bool process_keys();$/;"	p	file:
process_precision	game.S	/^		process_precision:$/;"	l
process_precision	kernel.S	/^		process_precision:$/;"	l
protect_enable	kernel/inc/memory.h	/^		uint32_t protect_enable      : 1;$/;"	m	struct:CR0::__anon7	access:public
pte_info	kernel/memory/mm.c	/^static PTE_INFO pte_info[NR_PHY_PTE];$/;"	v	file:
ptr	kernel.S	/^	ptr = &handle_pool[handle_count ++]; \/\/ get a free handler$/;"	d
put_video	game/inc/syscall.h	/^int put_video(uint8_t*);$/;"	p	signature:(uint8_t*)
put_video	game/lib/syscall.c	/^int put_video(uint8_t *buffer) {$/;"	f	signature:(uint8_t *buffer)
rand	game/lib/random.c	/^uint32_t rand() {$/;"	f
rand	game/src/effect.c	/^uint32_t rand();$/;"	p	file:
rc	game.S	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	kernel.S	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	boot/inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	boot/inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr0	game/inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	game/inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr0	kernel/inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	kernel/inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	boot/inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	boot/inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	game/inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	game/inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	kernel/inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	kernel/inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	boot/inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	boot/inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	game/inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	game/inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	kernel/inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	kernel/inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	boot/inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	boot/inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	game/inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	game/inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	kernel/inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	kernel/inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	boot/inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	boot/inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	game/inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	game/inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_ebp	kernel/inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	kernel/inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	boot/inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	boot/inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	game/inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	game/inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	kernel/inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	kernel/inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	boot/inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	boot/inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	game/inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	game/inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	kernel/inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	kernel/inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_palette	kernel/inc/device/palette.h	/^void read_palette();$/;"	p	signature:()
read_tsc	boot/inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	boot/inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	game/inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	game/inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	kernel/inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	kernel/inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_write	kernel/inc/memory.h	/^		uint32_t read_write          : 1; $/;"	m	struct:PageDirectoryEntry::__anon5	access:public
read_write	kernel/inc/memory.h	/^		uint32_t read_write          : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
readsect	boot/boot.c	/^void readsect(void *dst, int offset) {$/;"	f	signature:(void *dst, int offset)
readsect	kernel/memory/pm.c	/^void readsect(void *dst, int offset) {$/;"	f	signature:(void *dst, int offset)
readseg	boot/boot.c	/^void readseg(unsigned char *pa, int count, int offset) {$/;"	f	signature:(unsigned char *pa, int count, int offset)
readseg	boot/boot.c	/^void readseg(unsigned char*,int,int);$/;"	p	file:	signature:(unsigned char*,int,int)
readseg	kernel/main.c	/^void readseg(unsigned char*,int,int);$/;"	p	file:	signature:(unsigned char*,int,int)
readseg	kernel/memory/pm.c	/^void readseg(unsigned char *pa, int count, int offset) {$/;"	f	signature:(unsigned char *pa, int count, int offset)
readseg	kernel/memory/pm.c	/^void readseg(unsigned char*,int,int);$/;"	p	file:	signature:(unsigned char*,int,int)
realFctPtr	kernel/inc/device/video_mode.h	/^	uint16_t segmentA, segmentB, VBE_FAR, realFctPtr;$/;"	m	struct:ModeInfoBlock	access:public
reborn	game.S	/^	reborn = false;$/;"	d
reborn	game.S	/^	reborn = true;$/;"	d
reborn	game/main.c	/^static bool reborn;$/;"	v	file:
rec_out_num	cache/stdio.c	/^void rec_out_num(unsigned int x, unsigned int base){$/;"	f	signature:(unsigned int x, unsigned int base)
red	game/inc/video.h	/^		uint8_t red;$/;"	m	struct:Pixels::__anon15	access:public
red	kernel/inc/device/video.h	/^		uint8_t red;$/;"	m	struct:Pixels::__anon4	access:public
red_mask	kernel/inc/device/video_mode.h	/^	uint8_t red_mask, red_position;$/;"	m	struct:ModeInfoBlock	access:public
red_position	kernel/inc/device/video_mode.h	/^	uint8_t red_mask, red_position;$/;"	m	struct:ModeInfoBlock	access:public
reserved0	kernel/inc/device/video_mode.h	/^	uint8_t reserved0;$/;"	m	struct:ModeInfoBlock	access:public
reserved1	kernel/inc/device/video_mode.h	/^	uint32_t reserved1;$/;"	m	struct:ModeInfoBlock	access:public
reserved2	kernel/inc/device/video_mode.h	/^	uint16_t reserved2;$/;"	m	struct:ModeInfoBlock	access:public
reswitch	game.S	/^	reswitch:$/;"	l
reswitch	kernel.S	/^	reswitch:$/;"	l
ret	game.S	/^	ret = dst;$/;"	d
ret	kernel.S	/^		ret = len;$/;"	d
ret	kernel.S	/^	ret = dst;$/;"	d
return_flag	game.S	/^			return_flag = true;$/;"	d
routine	kernel/irq/irq_handle.c	/^	void (*routine)(void);$/;"	m	struct:IRQ_t	file:	access:public
rsv_mask	kernel/inc/device/video_mode.h	/^	uint8_t rsv_mask, rsv_position;$/;"	m	struct:ModeInfoBlock	access:public
rsv_position	kernel/inc/device/video_mode.h	/^	uint8_t rsv_mask, rsv_position;$/;"	m	struct:ModeInfoBlock	access:public
s	game.S	/^	s = src;$/;"	d
s	kernel.S	/^	s = src;$/;"	d
sd_avl	boot/inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:SegmentDescriptor	access:public
sd_avl	kernel/inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:SegmentDescriptor	access:public
sd_base_15_0	boot/inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
sd_base_15_0	kernel/inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
sd_base_23_16	boot/inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
sd_base_23_16	kernel/inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
sd_base_31_24	boot/inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
sd_base_31_24	kernel/inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:SegmentDescriptor	access:public
sd_db	boot/inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:SegmentDescriptor	access:public
sd_db	kernel/inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:SegmentDescriptor	access:public
sd_dpl	boot/inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:SegmentDescriptor	access:public
sd_dpl	kernel/inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:SegmentDescriptor	access:public
sd_g	boot/inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:SegmentDescriptor	access:public
sd_g	kernel/inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:SegmentDescriptor	access:public
sd_lim_15_0	boot/inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:SegmentDescriptor	access:public
sd_lim_15_0	kernel/inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:SegmentDescriptor	access:public
sd_lim_19_16	boot/inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:SegmentDescriptor	access:public
sd_lim_19_16	kernel/inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:SegmentDescriptor	access:public
sd_p	boot/inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:SegmentDescriptor	access:public
sd_p	kernel/inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:SegmentDescriptor	access:public
sd_rsv1	boot/inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:SegmentDescriptor	access:public
sd_rsv1	kernel/inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:SegmentDescriptor	access:public
sd_s	boot/inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:SegmentDescriptor	access:public
sd_s	kernel/inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:SegmentDescriptor	access:public
sd_type	boot/inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:SegmentDescriptor	access:public
sd_type	kernel/inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:SegmentDescriptor	access:public
seed	game.S	/^	seed = 0x015a4e35 * seed + 1;$/;"	d
seed	game.S	/^	seed = s;$/;"	d
seed	game/lib/random.c	/^static uint32_t seed = 0;$/;"	v	file:
segment	tools/hh/mmu.h	/^	uint32_t segment          : 16;\/\/segment selector$/;"	m	struct:GateDescriptor	access:public
segmentA	kernel/inc/device/video_mode.h	/^	uint16_t segmentA, segmentB, VBE_FAR, realFctPtr;$/;"	m	struct:ModeInfoBlock	access:public
segmentB	kernel/inc/device/video_mode.h	/^	uint16_t segmentA, segmentB, VBE_FAR, realFctPtr;$/;"	m	struct:ModeInfoBlock	access:public
segment_type	tools/hh/mmu.h	/^	uint32_t segment_type        : 1;$/;"	m	struct:SegmentDescriptor	access:public
serial_output_test	kernel/lib/serial.c	/^void serial_output_test(){$/;"	f
serial_output_test	kernel/main.c	/^void serial_output_test();$/;"	p	file:
serial_printc	cache/stdio.c	/^void serial_printc(char);$/;"	p	file:	signature:(char)
serial_printc	cache/stdio.h	/^void serial_printc(char);$/;"	p	signature:(char)
serial_printc	kernel/fs/fs.c	/^void serial_printc(char);$/;"	p	file:	signature:(char)
serial_printc	kernel/lib/printk.c	/^void serial_printc(char);$/;"	p	file:	signature:(char)
serial_printc	kernel/lib/serial.c	/^void serial_printc(char a){$/;"	f	signature:(char a)
set_intr	kernel/irq/idt.c	/^static void set_intr(Gatedesc *ptr, uint32_t selector, uint32_t offset, uint32_t dpl) {$/;"	f	file:	signature:(Gatedesc *ptr, uint32_t selector, uint32_t offset, uint32_t dpl)
set_segment	kernel/memory/kvm.c	/^set_segment(Segdesc *ptr, uint32_t pl, uint32_t type) {$/;"	f	file:	signature:(Segdesc *ptr, uint32_t pl, uint32_t type)
set_segment	tools/hh/kvm.c	/^set_segment(SegDesc *ptr, uint32_t pl, uint32_t type) {$/;"	f	file:	signature:(SegDesc *ptr, uint32_t pl, uint32_t type)
set_trap	kernel/irq/idt.c	/^static void set_trap(Gatedesc *ptr, uint32_t selector, uint32_t offset, uint32_t dpl) {$/;"	f	file:	signature:(Gatedesc *ptr, uint32_t selector, uint32_t offset, uint32_t dpl)
set_tss	tools/hh/kvm.c	/^set_tss(SegDesc *ptr) {$/;"	f	file:	signature:(SegDesc *ptr)
sh_addr	boot/inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addr	kernel/inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	boot/inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_addralign	kernel/inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	boot/inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_entsize	kernel/inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	boot/inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_flags	kernel/inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	boot/inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_info	kernel/inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	boot/inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_link	kernel/inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	boot/inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_name	kernel/inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	boot/inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_offset	kernel/inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	boot/inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_size	kernel/inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	boot/inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
sh_type	kernel/inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
size_t	boot/inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	game.S	/^size_t$/;"	l
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	kernel.S	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
soft_use	tools/hh/mmu.h	/^	uint32_t soft_use            : 1;$/;"	m	struct:SegmentDescriptor	access:public
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
srand	game/lib/random.c	/^void srand(uint32_t s) {$/;"	f	signature:(uint32_t s)
srand	game/src/effect.c	/^void srand(uint32_t);$/;"	p	file:
ss	tools/hh/mmu.h	/^	uint16_t ss;$/;"	m	struct:TrapFrame	access:public
ss0	tools/hh/mmu.h	/^	uint32_t ss0;          \/\/ after an increase in privilege level$/;"	m	struct:__anon12	access:public
ssize_t	boot/inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
start	boot/start.S	/^start:$/;"	l
start32	boot/start.S	/^start32:$/;"	l
static	game.S	/^static __inline void$/;"	l
static	game.S	/^static bool reborn;$/;"	l
static	game.S	/^static inline int \/\/__attribute__((__noinline__))$/;"	l
static	game.S	/^static long long$/;"	l
static	game.S	/^static uint32_t seed = 0;$/;"	l
static	game.S	/^static unsigned long long$/;"	l
static	game.S	/^static void$/;"	l
static	kernel.S	/^static PDE kpdir[NR_PDE] align_to_page;$/;"	l
static	kernel.S	/^static PTE kptable[PHY_MEM \/ PGSIZE] align_to_page;$/;"	l
static	kernel.S	/^static PTE uptable[NR_PTE] align_to_page;$/;"	l
static	kernel.S	/^static PTE_INFO *_free_pte;$/;"	l
static	kernel.S	/^static PTE_INFO *_used_pte;$/;"	l
static	kernel.S	/^static PTE_INFO pte_info[NR_PHY_PTE];$/;"	l
static	kernel.S	/^static Segdesc gdt[NR_SEGMENTS];$/;"	l
static	kernel.S	/^static __inline uint32_t$/;"	l
static	kernel.S	/^static __inline uint8_t$/;"	l
static	kernel.S	/^static __inline void$/;"	l
static	kernel.S	/^static int handle_count = 0;$/;"	l
static	kernel.S	/^static int key_state[NR_KEYS];$/;"	l
static	kernel.S	/^static long long$/;"	l
static	kernel.S	/^static struct IRQ_t *handles[NR_HARD_INTR]; \/\/ handles is an array of lists$/;"	t
static	kernel.S	/^static unsigned long long$/;"	l
static	kernel.S	/^static void set_intr(Gatedesc *ptr, uint32_t selector, uint32_t offset, uint32_t dpl) {$/;"	l
static	kernel.S	/^static void set_trap(Gatedesc *ptr, uint32_t selector, uint32_t offset, uint32_t dpl) {$/;"	l
static	kernel.S	/^static void write_gdtr(void *addr, uint32_t size) {$/;"	l
static	kernel.S	/^static void write_idtr(void *addr, uint32_t size) {$/;"	l
static	kernel.S	/^static void$/;"	l
sti	boot/inc/x86.h	/^static __inline void sti(void) __attribute__((always_inline));$/;"	p	signature:(void)
sti	boot/inc/x86.h	/^sti(void)$/;"	f	signature:(void)
sti	game/inc/x86.h	/^static __inline void sti(void) __attribute__((always_inline));$/;"	p	signature:(void)
sti	game/inc/x86.h	/^sti(void)$/;"	f	signature:(void)
sti	kernel/inc/x86.h	/^static __inline void sti(void) __attribute__((always_inline));$/;"	p	signature:(void)
sti	kernel/inc/x86.h	/^sti(void)$/;"	f	signature:(void)
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
syscall	game/lib/syscall.c	/^syscall(int id, ...) {$/;"	f	file:	signature:(int id, ...)
system	tools/hh/mmu.h	/^	uint32_t system           : 1;\/\/must be 0(system)$/;"	m	struct:GateDescriptor	access:public
target	game.S	/^		target = get_time();$/;"	d
task_switched	kernel/inc/memory.h	/^		uint32_t task_switched       : 1;$/;"	m	struct:CR0::__anon7	access:public
temp	game.S	/^		temp = temp->next;$/;"	d
time_tick	kernel/device/timer.c	/^volatile uint32_t time_tick = 0;$/;"	v
timer_event	kernel/device/timer.c	/^void timer_event(void) {$/;"	f	signature:(void)
timer_event	kernel/main.c	/^void timer_event();$/;"	p	file:
tlbflush	boot/inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	boot/inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
tlbflush	game/inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	game/inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
tlbflush	kernel/inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	kernel/inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
true	boot/inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts_cr3	boot/inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:TaskstateSegment	access:public
ts_cr3	kernel/inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:TaskstateSegment	access:public
ts_cr3	tools/hh/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	boot/inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:TaskstateSegment	access:public
ts_cs	kernel/inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:TaskstateSegment	access:public
ts_cs	tools/hh/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	boot/inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:TaskstateSegment	access:public
ts_ds	kernel/inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:TaskstateSegment	access:public
ts_ds	tools/hh/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	boot/inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:TaskstateSegment	access:public
ts_eax	kernel/inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:TaskstateSegment	access:public
ts_eax	tools/hh/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	boot/inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:TaskstateSegment	access:public
ts_ebp	kernel/inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:TaskstateSegment	access:public
ts_ebp	tools/hh/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	boot/inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:TaskstateSegment	access:public
ts_ebx	kernel/inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:TaskstateSegment	access:public
ts_ebx	tools/hh/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	boot/inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:TaskstateSegment	access:public
ts_ecx	kernel/inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:TaskstateSegment	access:public
ts_ecx	tools/hh/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	boot/inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:TaskstateSegment	access:public
ts_edi	kernel/inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:TaskstateSegment	access:public
ts_edi	tools/hh/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	boot/inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:TaskstateSegment	access:public
ts_edx	kernel/inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:TaskstateSegment	access:public
ts_edx	tools/hh/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	boot/inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:TaskstateSegment	access:public
ts_eflags	kernel/inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:TaskstateSegment	access:public
ts_eflags	tools/hh/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	boot/inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:TaskstateSegment	access:public
ts_eip	kernel/inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:TaskstateSegment	access:public
ts_eip	tools/hh/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	boot/inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:TaskstateSegment	access:public
ts_es	kernel/inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:TaskstateSegment	access:public
ts_es	tools/hh/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	boot/inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:TaskstateSegment	access:public
ts_esi	kernel/inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:TaskstateSegment	access:public
ts_esi	tools/hh/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	boot/inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:TaskstateSegment	access:public
ts_esp	kernel/inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:TaskstateSegment	access:public
ts_esp	tools/hh/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	boot/inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:TaskstateSegment	access:public
ts_esp0	kernel/inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:TaskstateSegment	access:public
ts_esp0	tools/hh/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	boot/inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:TaskstateSegment	access:public
ts_esp1	kernel/inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:TaskstateSegment	access:public
ts_esp1	tools/hh/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	boot/inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:TaskstateSegment	access:public
ts_esp2	kernel/inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:TaskstateSegment	access:public
ts_esp2	tools/hh/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	boot/inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:TaskstateSegment	access:public
ts_fs	kernel/inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:TaskstateSegment	access:public
ts_fs	tools/hh/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	boot/inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:TaskstateSegment	access:public
ts_gs	kernel/inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:TaskstateSegment	access:public
ts_gs	tools/hh/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	boot/inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:TaskstateSegment	access:public
ts_iomb	kernel/inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:TaskstateSegment	access:public
ts_iomb	tools/hh/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	boot/inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:TaskstateSegment	access:public
ts_ldt	kernel/inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:TaskstateSegment	access:public
ts_ldt	tools/hh/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	boot/inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:TaskstateSegment	access:public
ts_link	kernel/inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:TaskstateSegment	access:public
ts_link	tools/hh/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	boot/inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:TaskstateSegment	access:public
ts_padding1	kernel/inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:TaskstateSegment	access:public
ts_padding1	tools/hh/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	boot/inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:TaskstateSegment	access:public
ts_padding10	kernel/inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:TaskstateSegment	access:public
ts_padding10	tools/hh/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	boot/inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:TaskstateSegment	access:public
ts_padding2	kernel/inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:TaskstateSegment	access:public
ts_padding2	tools/hh/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	boot/inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:TaskstateSegment	access:public
ts_padding3	kernel/inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:TaskstateSegment	access:public
ts_padding3	tools/hh/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	boot/inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:TaskstateSegment	access:public
ts_padding4	kernel/inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:TaskstateSegment	access:public
ts_padding4	tools/hh/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	boot/inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:TaskstateSegment	access:public
ts_padding5	kernel/inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:TaskstateSegment	access:public
ts_padding5	tools/hh/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	boot/inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:TaskstateSegment	access:public
ts_padding6	kernel/inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:TaskstateSegment	access:public
ts_padding6	tools/hh/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	boot/inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:TaskstateSegment	access:public
ts_padding7	kernel/inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:TaskstateSegment	access:public
ts_padding7	tools/hh/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	boot/inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:TaskstateSegment	access:public
ts_padding8	kernel/inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:TaskstateSegment	access:public
ts_padding8	tools/hh/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	boot/inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:TaskstateSegment	access:public
ts_padding9	kernel/inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:TaskstateSegment	access:public
ts_padding9	tools/hh/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	boot/inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:TaskstateSegment	access:public
ts_ss	kernel/inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:TaskstateSegment	access:public
ts_ss	tools/hh/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	boot/inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:TaskstateSegment	access:public
ts_ss0	kernel/inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:TaskstateSegment	access:public
ts_ss0	tools/hh/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	boot/inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:TaskstateSegment	access:public
ts_ss1	kernel/inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:TaskstateSegment	access:public
ts_ss1	tools/hh/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	boot/inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:TaskstateSegment	access:public
ts_ss2	kernel/inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:TaskstateSegment	access:public
ts_ss2	tools/hh/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	boot/inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:TaskstateSegment	access:public
ts_t	kernel/inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:TaskstateSegment	access:public
ts_t	tools/hh/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
tss	tools/hh/kvm.c	/^static TSS tss; $/;"	v	file:
type	tools/hh/mmu.h	/^	uint32_t type                : 4;$/;"	m	struct:SegmentDescriptor	access:public
type	tools/hh/mmu.h	/^	uint32_t type             : 4;\/\/type(STS_{TG,IG32,TG32})$/;"	m	struct:GateDescriptor	access:public
ucr3	kernel/memory/pm.c	/^	CR3 ucr3;$/;"	m	struct:PCB	file:	access:public
uint16_t	boot/inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	boot/inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	game.S	/^uint32_t rand() {$/;"	l
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	kernel.S	/^uint32_t create_process(uint32_t disk_offset) {$/;"	l
uint32_t	kernel.S	/^uint32_t create_process(uint32_t disk_offset);$/;"	l
uint32_t	kernel.S	/^uint32_t create_process(uint32_t);$/;"	l
uint32_t	kernel.S	/^uint32_t get_pte() {$/;"	l
uint32_t	kernel.S	/^uint32_t page_trans(int pcb_idx, uint32_t va) {$/;"	l
uint32_t	kernel.S	/^uint32_t page_trans(int, uint32_t);$/;"	l
uint64_t	boot/inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	boot/inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	game.S	/^uint8_t v_buffer[SCR_SIZE];$/;"	l
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	kernel.S	/^uint8_t *vmem;$/;"	l
uintptr_t	boot/inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
update_bullet	game/src/effect.c	/^bool update_bullet() {$/;"	f
update_bullet	game/src/game_loop.c	/^bool update_bullet();$/;"	p	file:
update_enemy	game/src/effect.c	/^bool update_enemy() {$/;"	f
update_enemy	game/src/game_loop.c	/^bool update_enemy();$/;"	p	file:
update_player	game/src/effect.c	/^void update_player() {$/;"	f
update_player	game/src/game_loop.c	/^void update_player();$/;"	p	file:
user_supervisor	kernel/inc/memory.h	/^		uint32_t user_supervisor     : 1;$/;"	m	struct:PageDirectoryEntry::__anon5	access:public
user_supervisor	kernel/inc/memory.h	/^		uint32_t user_supervisor     : 1;$/;"	m	struct:PageTableEntry::__anon6	access:public
v_buffer	game/lib/video.c	/^uint8_t v_buffer[SCR_SIZE];$/;"	v
va	kernel.S	/^		va = ph->p_va;$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
va_to_pa	kernel/entry.S	/^#define va_to_pa(x) (x - KOFFSET)$/;"	d
va_to_pa	kernel/inc/memory.h	14;"	d
val	kernel/device/timer.c	/^	uint8_t val;$/;"	m	union:CmdByte	file:	access:public
val	kernel/inc/memory.h	/^	uint32_t val;$/;"	m	union:CR0	access:public
val	kernel/inc/memory.h	/^	uint32_t val;$/;"	m	union:CR3	access:public
val	kernel/inc/memory.h	/^	uint32_t val;$/;"	m	union:PageDirectoryEntry	access:public
val	kernel/inc/memory.h	/^	uint32_t val;$/;"	m	union:PageTableEntry	access:public
vec0	kernel/irq/idt.c	/^void vec0();$/;"	p	file:
vec1	kernel/irq/idt.c	/^void vec1();$/;"	p	file:
vec10	kernel/irq/idt.c	/^void vec10();$/;"	p	file:
vec11	kernel/irq/idt.c	/^void vec11();$/;"	p	file:
vec12	kernel/irq/idt.c	/^void vec12();$/;"	p	file:
vec13	kernel/irq/idt.c	/^void vec13();$/;"	p	file:
vec14	kernel/irq/idt.c	/^void vec14();$/;"	p	file:
vec2	kernel/irq/idt.c	/^void vec2();$/;"	p	file:
vec3	kernel/irq/idt.c	/^void vec3();$/;"	p	file:
vec4	kernel/irq/idt.c	/^void vec4();$/;"	p	file:
vec5	kernel/irq/idt.c	/^void vec5();$/;"	p	file:
vec6	kernel/irq/idt.c	/^void vec6();$/;"	p	file:
vec7	kernel/irq/idt.c	/^void vec7();$/;"	p	file:
vec8	kernel/irq/idt.c	/^void vec8();$/;"	p	file:
vec9	kernel/irq/idt.c	/^void vec9();$/;"	p	file:
vecsys	kernel/irq/idt.c	/^void vecsys();$/;"	p	file:
vmem	kernel.S	/^	vmem = (uint8_t *)MIB->physbase;$/;"	d
vmem	kernel/device/video.c	/^uint8_t *vmem;$/;"	v
void	game.S	/^void *$/;"	l
void	game.S	/^void close_reborn() {$/;"	l
void	game.S	/^void close_reborn();$/;"	l
void	game.S	/^void delete_bullet(struct Bullet *bullet_p) {$/;"	l
void	game.S	/^void delete_enemy(struct Enemy *enemy_p) {$/;"	l
void	game.S	/^void draw_screen() {$/;"	l
void	game.S	/^void draw_screen();$/;"	l
void	game.S	/^void enable_reborn() {$/;"	l
void	game.S	/^void enable_reborn();$/;"	l
void	game.S	/^void game_loop()$/;"	l
void	game.S	/^void game_loop();$/;"	l
void	game.S	/^void get_press_key(uint8_t keycode) {$/;"	l
void	game.S	/^void get_release_key(uint8_t keycode) {$/;"	l
void	game.S	/^void get_release_key(uint8_t);$/;"	l
void	game.S	/^void init_effect() {$/;"	l
void	game.S	/^void init_effect();$/;"	l
void	game.S	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	game.S	/^void srand(uint32_t s) {$/;"	l
void	game.S	/^void update_player() {$/;"	l
void	game.S	/^void update_player();$/;"	l
void	game.S	/^void$/;"	l
void	kernel.S	/^void *$/;"	l
void	kernel.S	/^void INIT_WORK(){$/;"	l
void	kernel.S	/^void TEST_WORK(){$/;"	l
void	kernel.S	/^void add_irq_handle(int irq, void (*func)(void) ) {$/;"	l
void	kernel.S	/^void do_syscall(TrapFrame *);$/;"	l
void	kernel.S	/^void do_syscall(TrapFrame *tf) {$/;"	l
void	kernel.S	/^void free_pcb(int i) {$/;"	l
void	kernel.S	/^void free_pte(int pte_idx) {$/;"	l
void	kernel.S	/^void init() {$/;"	l
void	kernel.S	/^void init_i8259(void) {$/;"	l
void	kernel.S	/^void init_idt() {$/;"	l
void	kernel.S	/^void init_page(void) {$/;"	l
void	kernel.S	/^void init_pcb(void) {$/;"	l
void	kernel.S	/^void init_pte_info(void) {$/;"	l
void	kernel.S	/^void init_serial() {$/;"	l
void	kernel.S	/^void init_timer() {$/;"	l
void	kernel.S	/^void init_vmem() {$/;"	l
void	kernel.S	/^void init_vmem_addr() {$/;"	l
void	kernel.S	/^void irq_empty();$/;"	l
void	kernel.S	/^void irq_handle(TrapFrame *tf) {$/;"	l
void	kernel.S	/^void keyboard_event(void) {$/;"	l
void	kernel.S	/^void mm_malloc(int pcb_idx, uint32_t pde_idx, int pde_num) {$/;"	l
void	kernel.S	/^void mm_malloc(int,uint32_t,int);$/;"	l
void	kernel.S	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	kernel.S	/^void printk_test();$/;"	l
void	kernel.S	/^void printk_test(){$/;"	l
void	kernel.S	/^void readsect(void *dst, int offset) {$/;"	l
void	kernel.S	/^void readseg(unsigned char *pa, int count, int offset) {$/;"	l
void	kernel.S	/^void readseg(unsigned char*,int,int);$/;"	l
void	kernel.S	/^void serial_output_test();$/;"	l
void	kernel.S	/^void serial_output_test(){$/;"	l
void	kernel.S	/^void serial_printc(char a){$/;"	l
void	kernel.S	/^void serial_printc(char);$/;"	l
void	kernel.S	/^void timer_event(void) {$/;"	l
void	kernel.S	/^void vec14();$/;"	l
void	kernel.S	/^void vecsys();$/;"	l
void	kernel.S	/^void waitdisk(void) {$/;"	l
void	kernel.S	/^void$/;"	l
volatile	kernel.S	/^volatile uint32_t time_tick = 0;$/;"	l
vprintfmt	cache/printfmt.c	/^vprintfmt(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vprintfmt	cache/stdio.h	/^void vprintfmt(const char *fmt, va_list ap);$/;"	p	signature:(const char *fmt, va_list ap)
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
w	game/inc/video.h	/^	int w, h;$/;"	m	struct:Surface	access:public
w	game/src/effect.c	/^	int w, h;$/;"	m	struct:Enemy	file:	access:public
w	game/src/effect.c	/^	int w,h;$/;"	m	struct:Bullet	file:	access:public
w	kernel/inc/device/video.h	/^	int w, h;$/;"	m	struct:Surface	access:public
waitdisk	boot/boot.c	/^void waitdisk(void) {$/;"	f	signature:(void)
waitdisk	kernel/memory/pm.c	/^void waitdisk(void) {$/;"	f	signature:(void)
width	game.S	/^				width = 0;$/;"	d
width	game.S	/^				width = precision, precision = -1;$/;"	d
width	game.S	/^		width = -1;$/;"	d
width	kernel.S	/^				width = 0;$/;"	d
width	kernel.S	/^				width = precision, precision = -1;$/;"	d
width	kernel.S	/^		width = -1;$/;"	d
winA	kernel/inc/device/video_mode.h	/^    uint8_t winA,winB;$/;"	m	struct:ModeInfoBlock	access:public
winB	kernel/inc/device/video_mode.h	/^    uint8_t winA,winB;$/;"	m	struct:ModeInfoBlock	access:public
winsize	kernel/inc/device/video_mode.h	/^	uint16_t winsize;$/;"	m	struct:ModeInfoBlock	access:public
write	game/inc/syscall.h	/^int write(int, char*, int);$/;"	p	signature:(int, char*, int)
write	game/lib/syscall.c	/^int write(int fd, char *buf, int len) {$/;"	f	signature:(int fd, char *buf, int len)
write_eflags	boot/inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	boot/inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
write_eflags	game/inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	game/inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
write_eflags	kernel/inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	kernel/inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
write_gdtr	kernel/memory/kvm.c	/^static void write_gdtr(void *addr, uint32_t size) {$/;"	f	file:	signature:(void *addr, uint32_t size)
write_idtr	kernel/irq/idt.c	/^static void write_idtr(void *addr, uint32_t size) {$/;"	f	file:	signature:(void *addr, uint32_t size)
write_palette	cache/palette.c	/^void write_palette() {$/;"	f
write_palette	kernel/inc/device/palette.h	/^void write_palette();$/;"	p	signature:()
write_protect	kernel/inc/memory.h	/^		uint32_t write_protect       : 1; $/;"	m	struct:CR0::__anon7	access:public
x	game/inc/video.h	/^	int x, y;$/;"	m	struct:Surface	access:public
x	game/src/effect.c	/^	int x, y;$/;"	m	struct:Enemy	file:	access:public
x	game/src/effect.c	/^	int x,y;$/;"	m	struct:Bullet	file:	access:public
x	kernel/inc/device/video.h	/^	int x, y;$/;"	m	struct:Surface	access:public
x_player	game.S	/^	x_player = 0;$/;"	d
x_player	game/src/effect.c	/^int x_player, inc_player;$/;"	v
xchg	boot/inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xchg	game/inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xchg	kernel/inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
y	game/inc/video.h	/^	int x, y;$/;"	m	struct:Surface	access:public
y	game/src/effect.c	/^	int x, y;$/;"	m	struct:Enemy	file:	access:public
y	game/src/effect.c	/^	int x,y;$/;"	m	struct:Bullet	file:	access:public
y	kernel/inc/device/video.h	/^	int x, y;$/;"	m	struct:Surface	access:public
